Jag tror verkligen att om du knappar runt i det du utvecklar lokalt med tangentbordet och ser till att liksom du kan komma åt allting, du kan fylla i allting och du öppnas någon modal eller någonting så sitter fokus rätt och du hamnar inte plötsligt bakom modalen
När den stängs så är du kvar där du var, du behöver inte navigera genom hela innehållet igen och att liksom bara kunna slå igång en skärmläsare i 45 sekunder och bara liksom, ja men det känns som att det makar sense för mig, då makar det förmodligen hyfsat sense för andra
Målet är inte att man ska liksom täcka 100% av alla problem som kan uppstå, utan det är bara att liksom få de lågt hängande frukterna, helt enkelt, utan att behöva göra det separat
Gör man det redan i den lokala utvecklingen, då kanske majoriteten av det som finns i någon läskig, lång liksom så här kravlista som är liksom två kilometer lång
Då kanske majoriteten av det redan löst
Hej och välkomna till Kodsnack
Jag heter Fredrik som vanligt och idag har jag med mig Johan
Hej Johan! Hej! Vem är du? Vad gör du? Jag är en utvecklare som jobbar på SBAB till vardags
Där sitter jag sedan relativt nyligen i ett nystartat designsystemteam
Jag har varit där i ett antal år nu
Jag tror att vi är inne på det sjunde året
Jag har gjort lite annat under min tid
Jag tror att det är mitt tredje team
Eller jag vet att det är mitt tredje team
Men ja, precis
Så det är lite det som vi sitter med
Och vi jobbar ganska mycket också med tillgänglighet
För det kommer ju ett nytt tillgänglighetskrav, eller tillgänglighetsdirektiv, just nu
Just det
Så det tar upp väldigt mycket av, inte bara vår uppmärksamhet, utan hela utvecklingsorganisationens egentligen
Ja, så ni har ett designsystemteam nu? Var det så? Ja
Hur kom du till, till det? Har du varit inne på design-spåret och kommit in på det teamet? Eller kommit från något annat spännande håll? Nja, jag har väl varit intresserad av design-spåret lite grann
En gång i tiden för en 15 år sedan så tror jag att jag trädde in i utvecklingsvärlden ifrån att ha lekt lite grann med design
Jag har nog ändå liksom, det ligger någonstans i ryggmärgen, även om jag inte är en designer eller UXare på det sättet då
Så men, jag tror väl att, jag tycker ju att i de allra flesta tillfällen så tycker jag att den tekniska biten av det är det mest intressanta
Men lite bakgrund kring det är att vi, ja vi har ju på, på jobbet och så är vi väl, just nu så är vi cirka 20-25 stycken utvecklingsteam och jag har fått lite siffror här, 135 stycken utvecklare och testare där jag tror att
Så det är ett par stycken? Ja, och det är ju, jag vet inte, men majoriteten är ju utvecklare då
Och vi sitter och jobbar på lite olika sätt och det ändrar ju sig lite över tid också, men man jobbar ju ganska autonomt och man jobbar i ganska många olika appar
Vi har haft lite olika sätt hur vi liksom levererar frontend applikationer, både internt och externt och till privata kunder, företagskunder och allting sånt
Och det har varit väldigt många appar och de har ju en tendens att liksom bli lite utdaterade
Man kanske kopierar en lösning som man gjorde där och sen så klistrar man in det i den nya appen och så gär man ändringarna där och så blir det ju inkonsekvent till slut
Så det var väl egentligen så det började, ja, 2018, hur många år sedan det nu är, det börjar bli, ja, det är väl typ sju år sedan
Ja, precis, jag skulle säga tre
Ja, jag skulle också säga tre faktiskt
Allt efter liksom mars 2020 är ju ändå samma år
Ja, men exakt, exakt
Nej, men så då, då började vi lite inofficiellt helt enkelt
Ett gäng utvecklare som satt i lite olika utvecklingsteam
Vi lyckades få att vi kunde sitta typ en eftermiddag i veckan eller något sånt och ja, men ta dem och programmera lite grann
Rent från allas eget intresse så att säga
Ja, man hade ju sett det här behovet liksom
Och sen så tror jag att sedan dess så har vår design och UX-avdelning också växt ganska rejält
Men på den tiden så var det inte lika många
Så vi hade ju ändå rätt nära dialog med dem och de såg ju, om några, det här problemet
Det kändes ju verkligen som att det finns ingen röd tråd någonstans
Nej, just det
Nej, men så då började vi liksom bara se så här, men vad är det vanligaste? För vi har inte heller liksom fått något commitment på att underhålla det här enligt liksom något strukturerat
Nej, just det
Så då blev det så här, men väldigt mycket handlar om formulär
Vi ska samla in data i ansökningsflöden och det är liksom man ska göra överföringar och allt vad man nu gör
Så vi började i den änden egentligen och bara försöka liksom så här, vi vet inte nödvändigtvis vad som är rätt, vad som ser rätt ut, men det viktigaste är kanske att det ser likadant ut
Ja, vi gjorde ju ett litet bibliotek egentligen som vi distribuerade med en intern sån här MPM-registry
Och sen så visste vi ju då att, ja men det kan ju, om vi fokuserar mer på API-t och inte tänker så mycket på att liksom skylta med några detaljer kring look and feel
Så kan vi ju ändå ganska flexibelt uppdatera det över tid när vi vet mer om vad som är rätt visuellt
Så det, det var så det började och det har egentligen hållit på så sedan dess fram till, ja men Q2 i 2024
Så första april där i krokarna så satte vi officiellt igång ett team
Men det, det här projektet har ju levt, eller projekt, jag vet inte vad man ska kalla det, det har ju levt lite inofficiellt
Så det har ju varit så här, periodvis har man hunnit jobba lite mer på det och periodvis har man inte hunnit jobba någonting alls på det
Ja just det 
Men det har ju ändå varit i användning hos ett antal team
Ja 
Sedan 2018 då 
Så det var, det var helt enkelt ett NPM-paket med, ja men UI-komponenter då?
Ja, exakt 
Ja just det
Och ganska begränsad dokumentation i anslutning till det
Sättet som det skiljer sig idag är ju att vi
Det är ju ett helhetsgrepp mer kring alltså
Designsystem omfattar ju mer än bara kod och design egentligen också
Man kan ju dra det till liksom att det kan handla om copywriting, bildmanér och alla möjliga grejer
Och det där har vi ju inte riktigt en lösning för ännu, men på sikt så hoppas vi att vi ska kunna centralisera det
Även om vi inte själva står för innehållet nödvändigtvis så ska man inte behöva liksom, ja men vart finns det här?
Ja just det 
Finns i sjön, typ
Och så får man leta upp det
Utan att man mer kanske kan ha en samlingsplats där man hittar, ja men både dokumentation och relevant information som utvecklar designer
Men man kanske kan hitta till relaterade resurser också
Ja just det
även om inte de är skrivna där då
Ja, för det var en sån grej, intressant grej, kände jag när jag började fundera inför vårt snack
Just det där med liksom vad, hur stort eller litet paraply är ordet designsystem? Det känns som att på ett sätt så kan det bli hur brett som helst nästan
Och det finns väldigt mycket nyttigt som man kan baka in under det som du säger
Hur skriver man text? Det kanske inte är det första man tänker på, men det är ändå onekligen en grej som dyker upp när det gäller att få saker att se ut och kännas på samma sätt över en massa olika saker man bygger
Jag tror att du och jag jobbar ju på relativt liknande, liknande utmaningar
Bygger en del användarupplevelser för, alltså i front-end-applikationer och så där
Ja, men precis
Och ett helt gäng team som gör saker som
Ja, men en idealvärld skulle nog se ut att fungera ganska exakt likadant i många fall
Ja
Inte alla, men många
Nej, men just det här med copy till exempel
Det känns ju som att det
Det beror ju lite på, men jag tror att en intressant grej som vi kanske kan komma in på är hur vi arbetar och samarbetar med vår UX och designavdelning nu och de som är faktiskt dedikerade resurser i vårat nya team då
Men
Just det
Historiskt så känns det ju som att det inte är helt ovanligt att det blir lite vattenfalligt
Ja
Vi kanske sitter i en pipeline där man har så mycket i pipelinen att utvecklarna sitter helt fokuserade på det
Och då blir det lite så att typ affärsanalytiker och UXare kanske då springer före, i på nästa grej
Och så blir det lite mer av en överlämning än vad man kanske skulle önska alla gånger
Och då, då är det ju ganska klassiskt då att man till exempel säger, ja men vad händer om det blir fel då?
Ja just det
Om man nu försöker skicka in det här och det inte funkar för någon downstream-tjänst är nere
Just det
Då är det liksom också så här, det är ganska vanligt att man inte liksom nödvändigtvis har tänkt på det i typ en designleverans och då är det ju jättevärdefullt att ha lite riktlinjer kring det och att vi kan försöka hjälpa till att det ändå blir konsekvent och att man kan liksom, man behöver inte vara expert på copywriting utan man kan liksom bara, om man hittar lite resurser och sen räcker det kanske en bra bit på vägen
Men jag tror att man kan, man kan nog, fånga en del lågt hängande frukter på att vi kommer framåt utan att vi behöver liksom fråga någon annan avdelning om hjälp
Ja, det är jätteintressant att utmana det här med kommunikationen och de här flödena av att få saker gjorda och ta tid
Som du sa precis i början, det är väldigt lätt att man hamnar i det läget att ibland blir det inte gjort och sen går det en jättelång period då ingenting händer för att man har 17 andra saker som, ja men kanske både är och framförallt bedöms som viktigare just då
Ja, och det kanske man, alltså nu, vi har ju hållit på med det här nu, vi konstaterade att det var mer än tre år
Ja precis
Det känns som att få ett commitment på att kunna göra det här också
Där har ju det här tillgänglighetsdirektivet varit, det var ju lite det som var, ja men det var det som fick skjuts i den prioriteringen
För det är ju också så att det är ju en av våra stora fokusområden är ju just tillgänglighet och försöka dels baka in tillgänglighet där vi kan
Om det är då i vårt komponentbibliotek
Sen finns det ju delar av tillgängligheten om hur ett helt flöde hänger ihop som är svårt att bara
Ja just det
automatisera
Men det är ju en utav de grejerna som jag tror fick organisationen att liksom gå med på att nu startar vi ett team kring det
Jag har nog personligen velat ha ett team kring det, alltså i alla de här åren nu
Ja
Men det, nu har det egentligen skett, för det är ju så, att såhär tillgänglighet är ju viktigt, men jag vet inte, man har kanske inte riktigt insett det
Eller att man har tänkt att det är viktigt, men det måste ju också konkurrera med andra projekt
Ja
Och då finns det ju liksom, alltså i bankvärlden så är det ju massa regulatoriska grejer och det är kanske stora systembyten
Och då är det ju ibland svårt att liksom, ja det här är viktigt, men tyvärr, vi hinner inte
Nej, precis
Det är fortfarande bara näst viktigast
Ja, ja men exakt
Och det kanske är liksom, jag tror att våran, alltså drivet av våran UX-avdelning då, så har vi ju ändå, jag tror att det var, jag har skrivit ner lite siffror och lite information här
2019 började vi jobba lite mer dedikerat med tillgänglighet
Men det blev ju, då har vi ju samarbetspartners som är experter på det som kommer in och hjälper oss och så gör man liksom en typ en analys och översyn över våra flöden
Men då blev det lite mera så här punktinsatser
Så jag tror inte vi lärde oss tillräckligt mycket för att ta det vidare nödvändigtvis, utan man gjorde någon review och så åtgärdade man lite fel där
Jag tror inte vi lärde oss mindsetet hur vi ska utveckla tillgängligt, utan det drevs nog mest av enskilda liksom individer, typ eldsjälar
Just det just det
i de olika teamen
Just det
Så det vi försöker göra nu tillsammans med det här projektet som då drivs parallellt som är tillgänglighetsprojektet egentligen, det är ju att försöka få lite mer långsiktighet i det
Just det
och inte se det som ett projekt som tar slut utan att vi måste liksom få in det i vårt arbetssätt mer och process
Just det, ja precis
Och det är själva teamet för designsystem, Hur stort är det ungefär? Ja, vi är alltså då, just nu så är vi två ut, eller just nu, vi är samma uppställning sedan start
Två utvecklare är vi, som har varit med och inofficiellt petat på det här projektet, alltså det som fanns innan
Just det
Och sen så är vi faktiskt, ja vi är typ tre UX-are
En av våra UX-are är ju en fulltidsresurs som är fokuserad på designsystemet
Ja
Två av dem har lite andra åtaganden också
Just det
Sen är vi en produktägare och det tillkom ju i samband med att vi startade teamet och tycker jag är kanon
För man är inte nödvändigtvis alltid så bra på det som utvecklare
Nej, men det är ju det
Man märker skillnaden när man har en bra produktägare på plats
Jaha, oj, vad mycket mer rakt på sak och tydligt vissa grejer blev plötsligt
Ja, men exakt
Och bara liksom att vi håller rätt riktning och inte
Ja, för jag menar som utvecklare, du känner, du kanske likadant, men att det är ganska lätt att ramla ner i lite så här kaninhål ibland
Jo, jag har gjort det en gång kanske
Ja, jag har nog också kanske gjort det en eller två gånger kanske
Men, och sen en teamchef har vi
Så vi är väl, ja, vad blir det, typ fem? Ja men fem, sju
Nej, men så, och det funkar ganska, det är ganska roligt, för eftersom att det är ett nystartat team
Vi har ju inte, vi har ju kvar det här som hade tagits fram inofficiellt innan
Men vi har ju inte så mycket legacy utan
Nej just det
Det är ju väldigt mycket liksom, det är ju väldigt mycket greenfield egentligen
Ja just det
Och man får ta reda på ganska intressanta grejer
Ja men så vi vet ju att vi vill göra, underlätta för våra utvecklare och designkollegor framför allt
Och det övergripande målet handlar väl om att vi vill bidra till att det blir effektivare produktutveckling
Sen så vill vi ju göra den här gamla, det som startade initiativet från början, att se till att det blir en konsekvent användarupplevelse och att vi liksom följer våran branding
Och att det ska bli lätt att göra rätt på det
Och sen är det ju då tillgänglighet som är
Men det som är intressant är ju att vi har ju fått, ja men vi har ju fått liksom upptäcka hur ska vi jobba i den här konstellationen och med den här produkten
För det blir ju en intern produkt
Ja ja, visst
Och det är ju väldigt kul eftersom att du har ju dina slutanvändare intill dig
Ja, supernära
Och bredvid dig
Så det är väldigt mycket feedback
Men då har vi ju liksom fått så här prova oss fram och vi jobbar lite grann i kvartal då
Och då har,  det känns som att vi provar ett arbetssätt och sen så behåller vi det som känns bra
Ja just det
in i nästa kvartal
Ja
Och så kanske vi skruvar på något annat
Ja just det
Men på senaste kvartalen så har vi i alla fall, vi jobbar i två stycken arbetsmöten per vecka, där vi försöker sitta hands on och jobba tillsammans, både utvecklarna och UXArna
Och ja men det gör ju att det här samarbetet är mycket tätare än vad det var i åtminstone de teamen jag var med i innan
Ja ja visst
Då känns det som att man kan ta vissa beslut som träffar både våran liksom kodbas och våran, i det här fallet, Figma då
Och det känns som att det har varit väldigt värdefullt så
Men, ja, så ser teamet ut
Ja, just det
Och det är så ni jobbar
Arbetsmöten, två stycken, och sen så jobbar man mer på varsitt håll, resten av
Ja, jag tror att det är lite
Det är ju lite speglar väl hur utvecklingsteamen jobbar också
Ja
Nu har ju jag, vi jobbar ju inte med de vanliga produkterna på samma sätt, så jag har väl, kan väl inte svara exakt för hur, liksom genomsnittsupplevelsen
Nej nej såklart
är i våra utvecklingsteam
Men man är ju autonoma, så man får ju liksom, vi vill ju jobba agilt
Alla team har väl i princip någon, sin egen twist på vad det innebär
Ja såklart
Med ceremonier
Vissa kör någon kamban-variant och andra kör sprintar
Ja, men visst
Det finns alla
Vad som passar just det teamet känner jag igen också
Ja, men precis
Men hur
Vad liksom äger eller driver eller kontrollerar ert team kontra andra team? Jag tänker så här, att ni gör en del komponenter, förstår jag ju
Här kommer en standardkomponent för att göra den här saken
Blir det då att man drar in nya komponenter som så att säga, tillhörde inom situationstecken, ett annat team förut? Eller liksom  hur funkar flödet mellan er och övriga team? Dels fanns det ett antal komponenter som vi förvaltar vidare, vidareutvecklar
Ja just det
Det andra handlar ju om att försöka snappa upp vilka behov vi har
Och att inte nödvändigtvis committa alltför långt fram i tid
Nej just det
Utan att försöka vara lyhörda och snabbrörliga
Japp
Men komponenter är väl en ganska central del i det
Vi har fokat ganska mycket på dokumentationen kring det också
Det är en bra grej
Jag tycker, jag tycker personligen lite grann att det är lite en first class citizen i den leveransen också
Så att det inte bara finns en hink med komponenter
Varsågod, figure it out
Exakt
Utan att man får,  försöker liksom ändå ha det i åtanke
Och i och med det så får vi bygga vår egen pipeline med hur vi levererar vår produkt
Alltså vår produkt består ju på kodsidan av typ bibliotek som man lyfter in via MPM
Just det
Och sen så består den i tillägg av dokumentation så
Och där, det har ju också varit en annan lite kul grej för det har inte nödvändigtvis funnits en färdig pipeline för det
För de andra teamen har inte riktigt haft det behovet
Nej
Så där har man ju fått vara med och liksom ja men bygga upp det enligt de behoven man har
Ja
Och det blir lite andra saker att tänka på där med att det här ska ju versionshanteras
Japp
och versionshanteringen är ju någonting som är väldigt viktig för att säkerställa att det blir stabilt i längden
Ja visst
Att man inte, ja vi försöker ju förhålla oss till semantisk versionshantering och att man ska kunna ja men lita på att saker och ting funkar
Om någonting har breakats så ska man få reda på det och kunna ta hänsyn till det
Men annars så är det ju, alltså jag tror att det där är också lite grann i rörelse
Vad vad är det vi, vad är det vi kommer att äga som team? Vad är våra produkter egentligen? Det finns ju ganska mycket material som är utspritt på någon kunskapsbank här och sen så finns det något externt CMS där för något ändamål så
Jag tror i nuläget så, så är det mycket fokus på tillgänglighet så jag tror att det
Jag tycker att det är lite intressant och spännande att jag vet inte riktigt exakt hur det kommer se ut
Nej
Jag tror att vi kommer försöka se till att lyssna på våra användare och forma det därefter
Ja, det är väl då det blir bäst också
Ja, och tillgängligheten, om vi ska gå in lite mer i detalj på det, så är det ju, för de som eventuellt inte vet det då, så är det ju en ny lag
Så den träder i kraft den 28 juni
Och det här vet jag att de som har varit drivande, de har ju sagt det, men förr eller senare så dyker det där datumet upp
För fem år sedan så kändes det som jättelångt bort
Ja ja, visst precis
Men nu är det ju, nu är det ju all hands on deck
Ja
Se till att vi liksom
Och det är väl en
Man kan väl säga att det är väl en vidare utveckling av de dom lagkraven som redan gäller för offentlig sektor
Så om man har varit inne på myndigheter och sjukvård och så där, så har ju de redan mycket av de här kraven
Och nu utökas det till att gälla privata aktörer också
Ja, okej
Så det så från ett visst håll kan man se det som en breddning av någonting som redan fanns? Ja,
Ja just det och sen är det väl, det är också en gräns, alltså så här vilka som omfattas är också lite, det är lite luddigt och här vill jag brasklappa lite grann också
Jag har ju försökt, liksom känner att jag har någorlunda koll på det här
Men det känns som att när det gäller alla de här, bara ta det jag säger med en nypa salt så att
Ja men exakt
Påstår att så här funkar det och sen så kanske jag har missat någon paragraf någonstans 
Nej men precis, allt det här är vår uppfattning
Ja
utifrån det som vi har hört och sett och sådär
Vi är inte lagtolkare
Nej, jag har försökt koka ner det till pragmatiskt, vad är det som gäller? Just det
Men ja, så nu är det ju ett antal, tjänst, typer av tjänster egentligen som omfattas av det här och det kommer ju på sikt att utökas till flera så träffas man inte av det här i nuläget så kommer man säkerligen att göra det i ja men inom relativt snar framtid och det betyder i praktiken att det finns ju en europeisk standard som är till för tillgänglighet och inkluderande i EU och en utav aspekterna de allmänna kraven som man omfattas av, det är ju de här WCAG
Just det
som är någon sorts spec som specar upp så här
Det ska funka så här, helt enkelt
Färgkontraster och allt vad det är
Japp
Sen finns det lite branschspecifika krav som beroende på vad man är i för bransch så kan det vara extra saker som man måste tänka på
I vårt fall då, som bank så omfattas vi av begripligt språk
Och det betyder ju att liksom det, det är ju liksom, det ska vara lätt att ta till sig innehållet
Det ska åtminstone finnas möjlighet att, liksom om någonting står på massa facktermer och så, så ska man ju också kunna se det på något sätt som går att begripa, även om man inte nödvändigtvis är liksom i finansbranschen
Det är ju faktiskt ett underbart krav
Ja, men jag tycker det också
Och jag tycker att alltså, sen är det ju så att de bästa lösningarna för det här är ju lika tillgängliga för alla redan från början
Så att det inte blir någonting man bara lägger ett lager på lager
Ne men exakt
Vill du ha lite mer tillgänglighet får du slå på det här läget men
Just det, precis
Och sen är det lite administrativa krav
Så omfattas man av det här direktivet så måste man också arbeta med dokumentation och liksom rapportera sina tillgänglighetsbrister
Och då finns det någonting som kallas för en tillgänglighetsredogörelse som man behöver ha då
Och det är typ en listning någonstans på sin sida som hålls uppdaterad på det här är de bristerna som finns, typ förklara varför och länka om det finns något mera tillgängligt alternativ och lite sånt där då
Och sen så tror jag också att det, man behöver nog ha en kommentarsfunktion så att liksom användare av din tjänst ska kunna rapportera in det här om de stöter på något
Så det är egentligen lite grann visa, vi är medvetna om vad vi klarar och inte klarar och att vi jobbar på det
Ja, just det
Ja, precis
Om man nu kommer till vad det får för påföljder ifall man inte uppfyller de här kraven så tillgänglighetsredogörelsen är nog en ganska viktig del i det
Men vi är medvetna om det
ja just det
vi är på bollen typ
just det, lite sån här
Jag har för mig att det fanns någon slags relaterad känsla i vissa delar av när man, när GDPR var på tapeten och höll på att införas så att, ja men alltså
En grej var att det fanns jättestora stränga påföljder, men det fanns också en ton av att visar du att du jobbar aktivt med det här och rapporterar när ni har problem, så kommer det, ja men det gäller att visa en rätt anda också
Ja, men exakt
Så tolkar jag det i alla fall
ja men ja men precis
Det känns lite som att, även om jag tror att man förväntas väl vara compliant med det här när 28 juni inträder
Ja
så går det ju säkert så här, men vi har inte hunnit helt enkelt åh ja
Ja, ne men om man kan visa, om vi har tagit det här, det är det viktigaste i det här sammanhanget, vi kan visa att vi har tagit det och att vi håller på med resten
Ja, men exakt, exakt
Och sen, sen så kanske man kan komma till den punkten om så här vilka omfattas då
Precis
Det tycker jag verkar lite svårt alltså, det är lite av
I vissa branscher så känns det väldigt tydligt
Typ e-handel är ju en av dem som omfattas av det här
Ja, det är rätt lätt att veta om man är i handel eller inte
Exakt, och banktjänster är också så här det känns också rätt lätt
Men sen är det så här, elektroniska kommunikationstjänster
Och det är också så här, det finns lite exempel
Jag tror vi kan säkert lägga in några bra länkar i beskrivningen också
Ja, det får vi göra
Men, det finns ju från Post och telestyrelsen så har de någon sorts liksom introduktion till ja, det här med EUs tillgänglighetsdirektiv
Och då, ja säger de elektroniska kommunikationstjänster som till exempel uppkoppling och abonnemang, telefonsamtal, e-post, sms, chatt, videosamtalstjänster
Men det är ju liksom, det kan säkert vara fler
Ja, jag tänker det
Det är ju ett exempel
Det kan nog bli ganska brett
Ja, men exakt
Och sen så här streamingtjänster, medietjänster typ
Det är väl en av dem
Och sen så är det vissa tjänster för persontransporter
Vissa tjänster? Ja
Så det lämnar utrymme för tolkning
Banktjänster nämnde vi och så e-böcker behöver vara tillgängliga och e-handelstjänster
Det är ju en ganska stor sektor
Ja, verkligen
Som omfattas
Sen tror jag att det är vissa fysiska, typ, alltså om man har betalningsterminaler eller olika typer av automater
Ja
så tror jag att de också omfattas
Men jag för mig att jag läste någonstans att har man liksom en sån fysisk grej ute, så tror jag att det finns någon regel kring att den, om den står där idag, så kan den stå kvar tills den är en viss ålder eller något sånt
Ja, just det
Det känns ju sansat
Man kan säkert liksom försöka liksom utbilda sig i om man omfattas eller inte, men jag skulle väl förespråka att man kanske ändå tänker på tillgängligheten
Ja
Jag vet inte alltså, för mig har det varit lite grann, jag har inte riktigt varit så bra att tänka på tillgängligheten historiskt, men ju mer man har fokuserat på det så har det ju låst upp lite grann
Det är typ ett nytt gränssnitt i din app
Ja, det är det som är så spännande
Ja, när du får in vanan att liksom, ja men jag kan, jag har kortkommandot för att starta skärmläsaren
Jag kan de vanliga navigeringssätten
Då är det så här, då får du helt plötsligt ett nytt gränssnitt för din app som du kan se till att få en bra användarupplevelse på
Ja
För mig i alla fall så är det jätte liksom motiverande
Jag tycker det är jättekul att liksom så här ändå så här, för det kan ju vara helt förfärligt
Det finns jättemånga roliga exempel när det liksom är så här, ja men du kan typ hoppa igenom 48 element som bara säger bill, bill, bill
Ja just det
Det är ganska svårt att veta vad är det då liksom? Ja, men exakt, exakt
Nej men så jag tycker att det, det känns som att det, det är ju viktigt utan tvekan
Men det är också någonting som, ja jag tycker är roligt
Det känns som att man har låst upp en ny liten dimension här i sitt utvecklande och vad man levererar när det gäller bra användarupplevelser
Ja, men exakt, exakt
Man får lite trevliga incitament att bygga saker på mer genomtänkta sätt
Man gjorde första versionen av sin webbapplikation och så är allting en div med olika styling på
Ja men exakt
Och sen så kom jag på att ha en A, HRF, en vanlig länk ibland
Det är inte bara bra för tillgänglighet, det är faktiskt ganska bra för alla att se att det här är en vanlig länk
Den funkar som en vanlig länk, den ser ut som en vanlig länk
Nej men exakt
Alla sådana grejer
Och den går att navigera och har vi gjort det bra att navigera med skärmläsare så blir det ofta bra att navigera med tangentbordet också eller
Bara att kunna tabba igenom saker i en vettig ordning är ju så här, väldigt nyttigt för precis alla
Just det alltså, jag tror att det är en sån här grej som man kanske inte ens
Man tänker knappt på det när man sitter och utvecklar
När man sitter och utvecklar så blir man lite så här hemmablind också
För du så här, du är inte nödvändigtvis den liksom tilltänkta målgruppen för den appen du utvecklar
Utan du
Nej precis
Jag ska bara utveckla den
Ja
Jag tror att man
Du har ju säkert använt olika system, även om de är webbaserade, där man bara så här, men va fan, alla de här tangentbords, liksom alltså att tabba, att navigera med liksom olika sorters kortkommandon eller naviger piltangenter och så vidare, det, det bara funkar 
Ja
Det är ju en trevlig överraskning
Ja precis
Det, det är ju, det är ju liksom det skulle ju lika gärna kunna vara defaulten
Ja, men exakt
Det borde vara lite jobb att sabba till
Ja, och jag tror att för vår del, så en av våra
Det som vi försöker bidra med när det gäller utvecklingen är att alla kanske inte ska behöva vara tillgänglighetsexperter för att vi ska kunna leverera ett bra resultat
Dels baka in det när det finns och går, men också uppmana kanske till att man har det mindsetet att så här, men redan när du sitter i lokal utveckling, tryck igång skärmläsaren
Alltså, jag tror att man behöver gå, man behöver gå någon liten crash course i hur skärmläsaren funkar, för den kan vara ganska överväldigande när man sätter igång den
Ja
Man har ju hört liksom när den drar igång på liksom 180 km i timmen
Ja
spottar ur massa liksom information
Ja visst, det är så proffsen använder den
Ja, och man kan ju ställa in den precis så som man vill
Ja
Jag tror att en av de viktigaste, nu sitter jag på Mac, det är säkert lite olika beroende på vilken och då använder jag den inbyggda voiceover, men jag tror att den viktigaste tangenten är kontrolltangenten
För den får den att bara vara tyst
Den pausar uppläsningen
Så när du sätter igång den och du bara liksom vill få, nu måste jag tänka här
Ja
då kan man alltid trycka in kontroll innan man gör sin nästa grej
Ja
Men jag tror att det är nog inte mer än liksom kanske fem, sex, sju stycken kommandon man behöver kunna för att kunna använda den effektivt nog för att fånga mycket av de här lågt hängande frukterna
Och då kanske det också är så här, gör man det redan i den lokala utvecklingen, då kanske majoriteten av det som finns i någon läskig, lång liksom så här, kravlista som är liksom två kilometer lång, då kanske liksom majoriteten av det är redan löst
Ja
Och sen kanske man, de här som är lite mindre problem, som är lite mindre, som är svårare att upptäcka, de kan man säkert behöva liksom åtgärda ändå när det är någon sorts liksom testprocess eller review liksom senare
Men jag tror verkligen att om du knappar runt i det du utvecklar lokalt med tangentbordet och ser till att liksom du kan komma åt allting, du kan fylla i allting och du öppnas någon modal eller någonting så sitter fokus rätt och du hamnar inte plötsligt bakom modalen
När den stängs så är du kvar där du var, du behöver inte navigera igenom hela innehållet igen och att liksom bara kunna slå igång en skärmläsare i 45 sekunder och bara liksom, ja men det känns som att det makar, sense för mig då makar det förmodligen hyfsat sense för andra
Och sen så är det ju med också, visst, är man proffsanvändare av det här, så kan det ju hända att det finns insikter som man själv inte kan ännu
Men jag tror målet är inte att man ska täcka 100% av alla problem som kan uppstå, utan det är bara att liksom få de lågt hängande frukterna
Ja, men går det att använda
Ja, precis

Ett snabbt och jättestort tack till alla som stöttar oss på coffe
Du kan bli en av dom genom att surfa in på ko-fi.com/kodsnack och slänga iväg antingen en engångs summa eller ett månadsvisstöd
Stödjer du oss på nivån kaffedrickare för 5 euro eller mer i månaden så får du ett gäng trevliga klistermärken i brevlådan
Stödjer du oss på nivån Barista för 10 euro eller mer i månaden så får du dessutom, förutom klistermärkena, ett stort tack precis här
Tusen tack till Michelle, Albin Groen, Anders Legell, Brother Ingo och Tobbe Lundberg
Alla ni som stödjer oss hjälper till att göra podden möjlig och ju fler ni blir desto bättre podd kan vi göra
Ibland har vi sponsorer i podden men det är faktiskt ert stöd som gör att vi börjar kunna täcka kostnaderna för podden varje månad
Vill du stödja oss på andra sätt så går det naturligtvis utmärkt att recensera podden i din poddspelare
Sätt ett betyg eller en stjärna oavsett om det är Spotify, Apples podcaster eller någon helt annan app
Eller berätta helt enkelt om ett avsnitt för någon som du tror skulle gilla podden
Och just nu har vi precis släppt ett helt nytt sätt att stötta
Vi har ett klistermärke till försäljning
I koffeibutiken så finns det ett trepack klistermärken om livet som agil lokförare
Framimproviserat i en milt urspårade diskussionstråd häromveckan
Visar ett stöd för alla safe-utövare där ute och får den där sköna känslan i magen av att bidra till Kodesnacks fortsatta resa
Men kom ihåg, du är en fantastisk person oavsett om du stöttar oss eller ej
Nej och jag antar att det fortfarande gäller att man får rätt mycket gratis så att säga, att använda standardkomponenter också istället för att finna sina egna
Ja, du tänker på så här inbyggda element
Ja, men precis
Det känns som en sån här grej som fortfarande driver mig i mina massor
De flöden menar väl att gör inte din egen ersättning för en knapp eller något i onödan utan se till att det verkligen, verkligen, verkligen behövs
Och då har du rätt mycket att implementera om det ska bli lika tillgängligt som en standard
Ja ja, om du, om du går DIV-hållet
Ja men nej tack
som försöker återskapa
Nej men så är, så är det ju definitivt, det finns ju många liksom inbyggda element som är mer semantiska som man kan luta sig mot och så
Men sen är det ju lite så, ja det beror lite på, när det kommer till liksom de här tillgänglighetskraven så, och just WCAG, kanske specifikt då, så jobbar man ju i olika nivåer
Då är det liksom A, AA och AAA
Just det
Och jag tror, om jag inte minns fel, här får kanske rätta, någon får rätta mig om jag har fel, men jag tror att den här nivån som man ska uppnå är AA
Det kan hända att det skiljer sig lite beroende på vilket typ av problem det är, men trippel A är då den högsta ambitionsnivån
Jag menar, det kan man ju lika gärna sikta på då om man
Ja, men precis
Det inte liksom är orimligt
Jag har kollat lite på WCAG några gånger och det känns som att den högsta nivån kan vara ganska utmanande ganska ofta, har jag för mig
Ja, men jag tror det är säkert att ha en balans där, så att man inte liksom
Ja, men så här A, men A var väl ofta ganska, ganska rimlig, ganska
Man kan säga så här, det här förstår jag ju, dels vad jag ska göra och varför och dels hur jag kommer dit
Och sen dubbel A, det här är samma fast, fast mer ambitiöst på något sätt
Och sen trippel A, så här num oj nu kan det bli mycket här
Ja, men exakt
Jag tror att det som du säger stämmer ju 100% att liksom återuppfinn inte hjulet om man inte måste
NJag vet inte när det kommer till de komponenterna som vi levererar så försöker vi ju inte återuppfinna hjulet, även om det är en komponent som inte nödvändigtvis går att bara bygga
Den finns inte i browsern
Det kanske är någon, ja men lite mer interaktiv komponent
Ja men visst
som kräver, nu finns det ju liksom ett inputfält för datum, men vi kanske behöver ha ett sätt att liksom man ska kunna ange en range av datum och vi vill ha det som en bra upplevelse
Ja men visst
som man får om man ska boka en flygbiljett eller hotellnatt eller något sånt där
Exakt
Och då måste man ju gå lite utanför vad som finns inbyggt
Och det som vi försöker tänka på där, och som jag väl kanske skulle uppmana ifall det är någon annan som sitter med liknande utmaningar
Även om det är så att det här finns kanske en färdig komponent för i något off the shelf-bibliotek ute i ekosystemet
Så försöker vi ändå säga, ja, det kanske är rimligt för oss att bara gå på den lösningen
Men då sättet vi tänker på det då är att sätta liksom ett eget interface av, ja men hur ska API-et se ut? Och det kan vi säkert inspireras av hur det ser ut där, men även om det är nästintill en 1-1-mappning så är det en explicit liksom
Vi lägger in det för att då blir det liksom inte ett implicit beroende på just den komponenten, utan då skulle vi ju sen kunna se så här, men vill vi bygga den custom, eller behöver vi bygga den custom, eller finns det, kommer det en ny aktör, eller något nytt bibliotek som funkar ännu bättre? Så det är väl en av de nyckelstrategierna som vi försöker tillämpa att liksom
Vad det än är för komponent så är API-et lite heligt liksom
Det försöker vi se till att vi har ett, en uppfattning om hur vi
Och där är det ju såklart svårt att säkerställa att det blir så, men att så här, är det liksom intuitivt, är det flexibelt? Och flexibelt som menar jag bara, är det flexibelt för att vi kanske vill ändra vår lösning under huven på sikt då? Precis, jag har en kollega som jobbar rätt mycket med våra komponenter
Vi har ett litet sådant projekt också
Som han har ju sagt exakt samma grejer så här, vi ska se till att slå in det, för att vi använder ett designbibliotek nu ganska mycket
Men hans ambition är ju det, ja men allting som vi har som gemensamma komponenter ska vara inslaget, precis så
Så att vi inte blir beroende av det bibliotek, för just nu sitter vi stenhårt fast i det, framförallt i en del äldre projekt
Att det är så här, katastrof att försöka uppdatera en major
Exakt, och jag menar det skulle väl, även om du då tar den approachen, så kanske majoriteten av biblioteket ändå använder någonting sånt färdigt
Ja ja men precis
Men då är det i alla fall alltså, förlitar du dig helt och hållet på deras API, då sitter du lite i händerna på dem också när så här
Nu har vi gjort en ny major-uppdatering som breakar en massa grejer
Alltså så då har man åtminstone en chans att, ja men motverka det genom att säga, okej kan vi då, om vi nu inte bara kan byta komponent i samband med det, kan vi åtminstone se till att vårat API som vi tillhandahåller går att mappa om till vad som än är ändrat liksom
Ja just det
Så det tycker jag är, ja men det är typ en key takeaway i sammanhanget
Och sen när det gäller lite grann så som vi snackade om med hur vi försöker snappa upp behoven ifrån organisationen
Så jag tror ju, och där har vi ju i samband med UX också, det som är intressant med våra täta samarbete är att man kommer från olika perspektiv
Från kodsidan så har vi ett visst perspektiv, och särskilt när det gäller liksom versionshanterade kod som liksom
Det finns vissa spelregler helt enkelt
Ja, men precis
På designsidan så kanske det inte riktigt har varit lika känsligt med sånt, utan det är liksom
Ja, men då har vi liksom behövt närma oss varandra och liksom synka sinsemellan, så att vi liksom
Vi kan inte springa före alla gånger på designsidan eller liksom bara göra en ändring för det är inte riktigt så det funkar på kodsidan
Nej, precis
Men sen så tror jag att en annan grej som vi, som vi försöker liksom vara i synk kring det är ju att man vill ju att det ska vara konsekvent och därmed så vill man ju att det ska finnas vissa constraints kanske så att det inte är så att vi kan göra på helt olika sätt
Ja, det där är intressant ja
Men jag tycker personligen så tycker jag att jag har under de här åren nu så har man ju ändå både så här konsumerat ganska mycket innehåll ifrån ekosystemet och ifrån diverse thought leaders och så vidare
Ja min uppfattning är att den här flexibiliteten behöver vara lite större än vad man tror ändå
Ja, någonstans är det ju alltid någonting
Det är så trist när du sitter där i din app och så är det så här, jag behöver måla lite utanför linjerna, men det, det går inte
Då får jag bara kasta ut allt och göra det helt från scratch
Ja, precis
Det blir ju inte hållbart det heller
Nej, men på så sätt så ser vi att en viss flexibilitet behöver ändå finnas i liksom alla komponenter
Sättet vi ser det på är att det är lite mer high level-komponenter och lite mer low level-komponenter
Och det finns ju en herrans massa namn på liksom sådana typer av, om det är Atomic Design eller vad som helst
Vi försöker tänka lite enklare på det, att bara så här, en high level komponent, det är ett lite mer specifikt användar, liksom ett use case
Och man kan använda det med ett ganska begränsat API, det är ganska mycket opinions inbakade
Men det gör ju också att det är ganska flexibelt för oss att se till att det fortsätter att funka utan större ändringar
Och sen vart efter vi märker att, för då kan vi lösa kanske 80% av ett visst behov
Sen så kommer vi till de andra behoven
Och då kan vi ju liksom utifrån det vi vet då, så kan vi börja bryta ner det till lite mer low level-komponenter
Och då kanske man kan liksom, då kommer ofta de här insikterna om liksom API-design som, hade vi tagit det här valet så hade vi ju kanske kunnat stödja, utan att man går alltför långt ner i liksom framtida behov vi inte vet att vi har
Så vissa sådana där grejer blir ändå tydliga att så här
Rent intuitivt så känns det som att det här valet hade varit flexibelt även om vi ser framför oss att vi vill göra lite annorlunda också i framtiden
Ja, just det
Men om man säger high level i det här fallet, är det typ en sån avancerad datumväljare som vi pratade om innan? Är det en high level eller är det en low level? Ja, det är svårt med var man drar gränserna
Ja, självklart
Jag skulle se det som, tänk dig på tabeller till exempel
Vi har inte supermånga tabeller ännu i biblioteket, men jag bara tar det som ett exempel
För där kan man ju se framför sig att en low level version av sådana komponenter kan ju mappa väldigt nära hur det funkar i HTML
Så att du jobbar med rows och header och olika typer av celler och så vidare
Men en high levelkomponent kanske tar en lista av data som den kan mappa om till det där under huven
Och för ganska många use cases så räcker det
Och då är det ganska nice att så då kan du använda en komponent, skicka in datan som du kanske måste bara skruva lite grann på så att den passar
Och sen så får du en tabell
Ja
Och istället för att så här, ja visst, då ska jag liksom göra typ 88 rader kod här för att bara göra min tabell med liksom att mappa igenom saker och så vidare
Just det
Så det är väl ett exempel
Ett annat exempel är kanske att så här, när man jobbar med inmatningsfält i formulär så består ju de under huven av liksom ganska, alltså de är ju rätt nära elementen i browsern, som input och så vidare
Vi har till exempel en komponent som är en textfield då, och då kombinerar ju den själva inputfältet med ett sätt att sätta en label på den och ett eventuellt valideringsfel, så sköter ju den om kopplingarna där, sinsemellan under huven, så att labeln blir associerad med inputfältet och valideringsfelet också
Utan att du som konsument behöver liksom så här, men hur var det nu? Ska den vara aria label by eller aria describe by? Ska vi, ja, sådana saker liksom
Ja
Så det är det jag tänker på, men det är ju, jag tror att vi har stött på många gånger att man bara säger, ja men är det här en higher level abstraction? Men ja, det är, till slut så kanske man hamnar i någon atomic design ändå
Ja, jo, men kanske både och
Det är en ständig utmaning att få till den där balansen
Ja, men det här kan ju vara en jättefin komponent
Men jag behöver skicka in 300 saker till den för att den ska funka
Kan jag tänka om i det här så jag slipper? Ja, men då kanske man på en sån här high level, och det är också en, jag vet inte vem det var som hade ett sånt talk någon gång, men att som pratade just om API-design på någon konferens som
Man har ju sett exempel på en React-komponent då som liksom har typ 38 props för att man har liksom så här, man har byggt på liksom så här vartefter man har kommit
Just det, vi måste stödja det här också
Då är det ju bättre att separera det till helt olika komponenter
Ja
Så att det blir lättare att underhålla över tid
Ja
Så det är väl lite av de tankarna och det är mycket av det i common sense, men delar av det har man ju liksom på något sätt absorberat under de här åren som man ändå stött lite mot det här, även om det inte har varit ens huvudsakliga arbetsuppgift då
Nej, men precis
Så här, det finns ju ett stort värde också i att få, alltså sånt som du säger, common sense-grejer, att få dem uttalade och utskrivna, det är ju en väldigt stor nytta i sig, för att annars är det ju någon i teamen då som tycker att något lite annorlunda är, ja men det här är väl common sense, och sen så har man plötsligt dragit iväg på två spår igen fast det inte var avsikten
En utmaning är ju att jag, som jag nämnde där så vi två som är utvecklare i teamet just nu har ju jobbat med det här innan så frågan är vad som är liksom inne i våran ryggmärg och vad som, alltså jag tror att det kan finnas, en utmaning är ju att försöka få ner det här på ett enkelt och överskådligt sätt, liksom att det här är ett mindset som vi tillämpar så att
För det blir ju svårt
Jag vet faktiskt inte riktigt var gränsen går
Vart lämnar det ena hjärnhalvan på oss två? Och vart möter det någon dokumentationssida någonstans?
Just det
Där har vi säkert ett jobb att göra
Ja
Om man ser till framtiden och att man skulle omborda någon ny, eller om någon försvinner och så vidare, så försöka liksom de grundprinciperna som man på något sätt lutar sig mot nu, som säkert kan ändras också såklart, men det här är det vi förhåller oss till nu
Istället för att ha en uppsättning regler som blir omfattande och komplicerade och granulära, så är det så här, vi försöker ha några grundläggande principer som vi tänker på när vi tar fram komponenter och vad vi än tar fram egentligen
Javisst, och lyckas man få ner sånt i text eller bilder, vilket material det nu är, då har man ju något som är väldigt väldigt  nyttigt
Som du sa innan, allt man levererar är inte bara komponenter, utan det är det där
Informationen runt omkring kan ju vara supervärdefull, även om den kan vara svår att få fatt i ibland
Det är, det är ju också en intressant grej för att ibland våra utvecklingsteam så sitter majoriteten av dem just nu och jobbar i React-applikationen
Och det har ju då pragmatiskt sett varit våran, alltså det var så det började och det är fortfarande så, man kan ju
Det betyder ju att liksom jobbar man i något annat än React och jobbar man i mobilappen eller jobbar man i något av de andra bolagen som ingår i samma koncern, så kan man inte nödvändigtvis ta del av komponenterna, för de är ju liksom React-specifika
Just det
Så då blir ju riktlinjer och liksom design tokens och sånt blir ju desto viktigare
Och sen så är det ju såklart också jätteintressant att fundera på hur skulle vi kunna brygga gapet mellan olika ramverk och kanske till och med olika plattformar
Men hittills, teamet har ju varit verksamt i tre kvartal ungefär nu
Så vi har inte känt att det känns inte så pragmatiskt att börja gå utanför till något ramverksagnostiskt när så stor procentandel av allihopa ändå sitter liksom natively med React
Men det är ju definitivt en fråga för, alltså nära framtid förmodligen
Ja, men det är som du säger, det är ju lågt hängande frukt igen
Vad är vettigt att börja med? Vad får vi stor utdelning på det? Ja
Och det kanske inte är att skriva ett generellt dokument för alla typer av gränssnitt i
Nej, men exakt
Och ser man det, håller man sig på webben och tänker att så här, men hur kan vi stödja? Vi vill ju förmodligen, eller vi kanske inte vill och kommer jobba med React i en massa år fram
Det kanske vi gör, men då kommer man ju onekligen att tänka på sådant som web components
Ja, visst
Web components, jag tycker också, där är det också lite svårt, för jag tycker när man läser om web components, så är det också, där är det också ganska polariserande
Man hör liksom Use the Platform-gänget och så hör man Library, eller Framework Authors
Det är liksom de två lägren
Jag tycker det blir lite svårt för det känns som att liksom, det är därför jag har varit lite så här försiktig med att skynda mig in i det, för det känns som att vi jobbar ju ändå i huvudsak med React
Då vore det ju synd synd om man ska behöva hoppa genom en massa loopholes för att webbkomponenter och React ska samspela
Ja, men eller hur? Och webbkomponenter låter ju så bra på pappret, men är det så bra i praktiken? Man kommer liksom till liksom alla complexa detaljer som shadowdom och hur lirar ramverken och domen egentligen? För många av ramverken går ju liksom en annan väg när det gäller hur de renderar appar
Ja, precis
Som är lite mera, ja, vad är det man kallar det? Typ så här Lazy Rendered medans domen traditionellt är Eagerly Rendered liksom
Och då är det så här, samspelar det verkligen? Och så här, visst, det kanske är liksom, ja, jag har nog inte helt satt mig fullständigt in i det, men det är definitivt någonting som vi har lust att titta på lite sen
Och det kan ju hända att delar av utbudet av komponenter funkar kanon som webbkomponents, om de är liksom längre, de är ganska enskilda, det är liksom ingen komponent som rappar en massa annat, utan det kanske är typ en date picker, eller någonting som är liksom en leafnode typ i hierarkin av alla
Ja, just det
Ja, nej, det känns inte nödvändigtvis som en silver bullet, men vi vill ändå utforska det
Ja
För det är ju, jag tror att tittar man i ekosystemet bara i Sverige av andra designsystem, och det gör vi ju liksom själva mycket också
Det finns ju liksom i arbetsförmedlingen och SJ har vi inspirerats ganska mycket av
Så de kan man surfa in och titta på? Ja, SJ har, jag tror att de relativt nyligen har gjort ett omtag på sin, jag vet inte, det är någon sån här SJ-design eller något sånt
Så de har gjort ett bra arbete och det kan man hämta mycket inspiration från
Men tar man vissa andra så, jag vet inte, jag ska inte svära på hur de gör kring det, men vissa andra kör ju 100% web components
Jaha, de gör det? Det funkar säkert jättebra, men jag tror att vi får utforska det i framtiden helt enkelt och se vad det är
Sen vet jag inte, det är ju liksom inte helt otänkbart att landskapet ändrar sig lite grann heller, nu när AI är på stort intåg och utvecklingen går så pass snabbt som det gör
Ja, men precis
Det tycker jag var intressant
För det sa du ju precis innan vi började spela in här
Det kan ju mycket väl komma att påverka vad ni bygger och vad man gör
Och det var en sån grej som jag inte hade slagits av förrän du sa det
Nej, jag vet inte om jag hade slagits av det själv för några veckor sedan heller
Men alltså vi har pratat lite mer om det, för det har ju säkert inte gått någon förbi att det händer saker på AI
Och kanske från utvecklarperspektiv så har man ju traditionellt, eller man har kanske tänkt på så här, men vad betyder det här för mig? Det är ju det här för mitt yrke
Men om man bortser från det så tänker jag ju liksom att våra användare som vi bygger tjänster och appar för idag, hur ser deras interaktion med de apparna ut i framtiden? Delar av det kommer ju säkert att övergå till att vara någon sorts assistent man kanske pratar och ber om eller så här chattar eller någonting
Alltså vissa sådana här stora komplexa flöden, så här deklarationer eller liksom du ska ansöka om bolån eller vad det nu är
Det kan ju vara ganska omfattande och komplexa formulär
Det kanske är någonting som skulle vara jättebra som ett chattflöde i framtiden, för då kan du ställa frågor under tiden om det är någonting som du undrar
Men sen tror jag personligen att vi kommer ju säkerligen att ha kvar grafiska gränssnitt för diverse grejer
Men det är också så att i vår interna produkt och dess framtid så blir det ju någonting som man har kommit underfund med nu, att det här måste vi ändå tänka på
Hur ser framtiden ut kring det liksom?
Ja just det
Vart är vi på väg?
Just det
Det finns ju liksom så här, vad är det de kallar det? Computer vision finns ju
Visserligen så är ju det faktiskt då typ att datorn tar skärmdumpar och faktiskt navigerar
Och då behöver vi ju änd ha ett gränssnitt som är ju bara bra då om det är tydligt och tillgängligt
Ja, men exakt
Tillgängligheten lönar sig igen
Ja, men exakt
Ja, och det är klart
Det måste väl kunna finnas någon aspekt också där det blir andra interaktioner som gör att man kanske vill presentera saker på andra sätt
Det kanske får ett annat behov av visningskomponenter som kan visas tagna ur sitt sammanhang
Det är inte så att vi har ett jättestort formulär, men jag vill presentera resultatet
Då har jag resultatkomponenten, men jag har inte resten av
Nej exakt
informationen runt omkring
Man kanske vill integrera inmatningsfält i det här flödet också för att så här
Istället för att allt hela tiden ska vara en fritext och typ en GPT-wrapper, så känns det som att, ja men det kanske är så här, en mix av båda världarna
Men jag tycker det är svårt att veta vart vi är på väg och det blir väldigt spännande att se
Och det är väl lite så som vi snackade om innan, att man får försöka liksom vara snabb på att, ja men inte sitta inlåst i liksom, så nu jobbar vi med det här i två år och sen så ser vi hur det blir när det är
Utan att man är snabbrörlig och håller örat mot rälsen
Ja, men exakt, exakt
Det blir nästan mer intressant när man tänker så också
Man inser att det kan komma sådana grejer
Det finns fler aspekter att tänka på än bara de som man har framför sig precis nu
Ja, men exakt
Det tror jag väl gäller om man går in på temat med AI och utveckling också
Där tycker jag också att det är lite svårt att veta
För precis som i webbkomponenter är det också ganska polariserande åsikter om det
Det är liksom all in eller all out
Och vem ska man tro på?
Ja
Har de som är åt ena hållet eller andra hållet ett incitament kanske? Ja, visst
Säga si eller så
Ja visst
Ja jag själv har ju, vi har ju använt AI framförallt under en längre stund nu för dokumentation
För att försöka hitta ett konsekvent och professionellt språk, men också lite blankt canvas-grej, att man får, vi ska dokumentera en knapp, eller vi ska dokumentera en komponent som gör det här
Ge mig ett utkast, och så tar vi det därifrån
Ja, just det, ge mig något att börja med
Nej, men jag tror att min personliga resa när det gäller AI-assisterad utveckling har ju varit så här att man har ju fått den här wow-faktorn
Och sen har den på något sätt efterföljts av en, ja, typ att så här, den kör fast och liksom man liksom, man bråkar med den här AI-n för att liksom komma framåt
Men ju mer man liksom fortsätter, ju mer liksom ute på liksom hallucinationer och så blir det
Ja, men exakt
Det tycker jag är en väldigt bra beskrivning
Men den har ju kommit i omgångar också
Nu finns det ju ännu bättre integration mellan en AI-agent och en editor
Det har också blivit en wow-faktor
Men det känns också som att man kommer till och man förstår ju att, när den har den här chain of thought-grejen, att den kan liksom typ prompta sig själv och prova outcomes och så vidare, så förstår man ju att resultatet blir mer träffsäkert
Men det känns ju någonstans också som i slutändan att, hur de fungerar gissar sig ändå till vad som är rimligt att göra härnäst
Så att det känns ju som att hittills så har jag fått några sådana där wow-faktorer, men ändå känt i slutändan av när det har gått två dagar, den lilla honeymoon-facen är över, att så här, men då stöter man på de här friktionerna och där det liksom tar stopp
Ja men exakt, och det tar stopp på ungefär samma stil som sist
Fast på en lite annan, ja
Nej, jag känner nog väldigt mycket så också
Och samtidigt så pratar jag ju med folk, ja men med jämna mellanrum, som verkligenrum
Det känns som att de verkligen har hittat arbetssätt ihop med AI som verkligen funkar för dem
De blir genuint mycket snabbare på att göra saker och jobba på det sättet
Och det kanske är ett arbetssätt som inte alls passar mig för att
Jag är gammaldags och vill sitta och titta på koden utan att bli störd av förslag mitt i
Nej, men man vill ju
Det är en av de grejerna som jag tycker är tråkigast med det
Jag vill ju prov
För jag tror också att så här
I någon grad så kommer väl det här
Man kommer väl nästan att vara så illa tvungen att använda det för att behålla en viss produktivitet kanske
Sen så tror jag inte att man behöver förlita sig på det helt och hållet
Nej, det är ju frågan
Ja, precis
Det är frågan
Vem vet
Men jag tänker så som för min del, jag har ju
Jag jobbar ju i VIM och jag tycker det, eller Neo-VIM specifikt
Jag älskar ju liksom det att skriva
Jag tycker det i sig är så kul
Men den, liksom när man jobbar i terminalen så, då är det inte nödvändigtvis så att det är inte där ny funktionalitet kring det här kommer först
Och då blir man så här, okej, men ska jag testa någon ny, det tar jag för att prova
Men liksom jag tror jag delar din åsikt där, men jag vill ju typ sitta utan distraktioner och bara få göra det som, för det ger mig glädje
Ja, och samtidigt så är det ju onekligen så att när jag har Copilot påslagen i Visual Studio Code, jag vill ju kanske egentligen inte ha så mycket av intelligensen inom situationstecken, men däremot att den ibland funkar som en väldigt mycket smartare autokomplettering
Ja, spara tid helt enkelt
Det sparar mig ju lite tid då och då, och hjälper mig att avsluta en grej och samtidigt hålla en tanke i huvudet
Så det är väldigt så, balansgång
Det är både störande och lite hjälpsamt samtidigt
Ja, men exakt
Det är intressant
Men det kan vara mycket frustrerande också
Ja, visst
Jag menar, på mina mer cyniska humör så kan jag tänka mig att om tillräckligt många går tillräckligt hårt in på AI-utvecklingen så kan vi vara några andra som sitter i ett hörn och tjäna storkovan på att vi skriver väldigt pålitliga små saker med minsta möjliga kod som är hand, hantverksmässigt skriven
Det är mycket mer förutsägbar
Jo, nej men precis, för det är väl också en av aspekterna, både när det gäller liksom, ja men att producera kod kanske är en aspekt i sig, men säg alla de här bildgenereringarna
Det är ju inte som att du får samma resultat när du ställer samma fråga
Så det liksom det blir ju lite svårt att liksom, vad är det egentligen som kommer ut? Det kommer säkert funka, men det är ju liksom, det är där i den ballparken
Ja, men precis
Det är som att prata med någon slags drömgenerator
Det händer något i en dröm och så tror man att det är samma, så har plötsligt allting runt omkring ändrats
Nej, exakt, exakt
Men jag tror att alltså det kommer väl att vara viktigt att fortsätta vara nyfiken på det i alla fall, så att man liksom inte frånskriver det helt och hållet så
Nej, men precis
Använda det till, använda det liksom till en rimlig grad där det känns som att det gynnar en och inte att man till slut sitter och, men det kanske, vem vet, vem vet vart vi är på väg? Nej, precis
Vi stämmer av igen om två år och ser vad som faktiskt hände
Är det något mer vi borde få med innan vi avslutar för idag? Jätteintressant
Ja, nej jag tror inte det
Jag tror vi har varit inom det mesta som jag har i tankarna
Det är väl i så fall
Jag tror att det finns några länkar som vi kanske skulle kunna lägga in i någon beskrivning för avsnittet
Jag lägger ner in massor med länkar, inklusive till SJs designsystem också
Jag tycker det är trivsamt att de har gjort en sajt för sitt designsystem som bara visar ja alltså den visar ju bara komponenter, men den känns samtidigt 100% SJ
De har lyckats få till en enhetlig känsla på det på ett ganska stiligt sätt
Ja, men det är också så här, det är lite power move att lägga sin system publikt
Det känns som att vi hade säkert också kunnat tänka oss att göra det i framtiden
Ja
Men vi har inte vågat göra det ännu
Det har inte liksom funnits ett tillräckligt skyltfönstervänligt material kanske
Nej, jag kan helt förstå, förstå resonemanget
Men som sagt, vi länkar in sånt också
Om du kommer på några fler grejer som vi borde länka med så tar vi med dem också
Så folk massvis tittar på
Jättebra
Ja, men då så
Tack så jättemycket Johan för att du ville vara med
Ja, tack för att jag fick vara med
Tack för att just du lyssnar på Kodsnack
Om du vill stödja oss, varför inte tipsa en bekant om podden? Eller lämna en recension i till exempel iTunes? Eller något annat ställe där det går att sätta betyg på poddar? Du kan också stödja oss genom att köpa oss en kopp kaffe på Coffee
ko-fi.com/kodsnack
Alla pengar går direkt till att göra podden bättre och trevligare
Du kan också komma och hänga i vår Slack-kanal
Länk finns på kodsnack.se 
Precis som alla andra länkar och all annan info kopplat till varje avsnitt
Sist men inte minst finns det också en länk till vår Spreadshop-butik där du kan köpa tröjor och andra prylar med kodsnack-tryck
Återigen, tusen tack för att du lyssnar
Vi hörs
