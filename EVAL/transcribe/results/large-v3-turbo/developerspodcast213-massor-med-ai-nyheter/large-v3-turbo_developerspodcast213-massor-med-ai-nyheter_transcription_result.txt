Jag minns att vi hade en QA-person då som ibland gick i taket över det här för att det var så här. Nu har du ju gjort massa ändringar. hur vet du att det här funkar Och det här smöks alltid mer Liksom lite för QA-personen Du lyssnar på Developers, podden där du får följa med oss, Sofia och Madde, på allt inom mjukvaruutveckling. Vi träffar spännande gäster, testar nya teknologier, söker inspiration och tar upp aktuella ämnen. Jag vet inte varför det har blivit så svårt att starta podden. Vi startar så här. vi stela. Nej men det är bara så här jag sliter på saker att säga känns det som fast vi har en massa saker att säga men de kanske är såhär rants utanför techvärlden eller Nej, jag vet inte. Jag var så här, du bara frågade, har du något att säga? Ja, men jag hade kalas för min ettåring idag. det är inte heller så intressant att prata om Ska vi inte bara hoppa direkt in och tacka våra stjärnsupportare på Patreon så sen snackar vi om vad vi ska snacka om. Jo, jag måste spara luft i mina lungor för det är så mycket tecknyheter jag vet inte ens hur jag ska orka läsa igenom det här okej, men då kör vi och tackar våra skärmsupportare på Patreon. Det är alltså de som stöttar oss med 100 kronor eller mer per månad som får sitt namn uppläst här. Och det är Alicia, Anders Nylund, Björn Jonsson, Dag Ronell, Kajetan Kazimierzak, Lars Nyström, Molly Haglund, Oskari, Per Nåtby, Selim Hjortal, Styg Hest och Thomas Nilsson. Tack så mycket till er och tack till alla andra som stöttar oss på Patreon och på alla andra olika sätt som ni supportar oss. Ja, det var någon som köpte merch häromdagen. blir jag så här glad när det droppar in Lite då och då. Exakt. Och ibland ser jag någon på jobbet som har vår merch. som inte går fram och skryter om det varje dag utan bara såhär, jag har er merch Det är nice. fint nej men låt oss hoppa in i nyheter du har med ett Create React App, eller hur? Jag vet ju det. Det vet du att jag har. men det är så här det kanske inte är alla som har gjort det om man är ganska en ny så kanske man redan vet att man inte bör använda CreateTrack-app, jag vet inte. Eller om man inte är frontenutvecklare. eller Mighty Fronten utvecklare men vad ska vi säga då Create React App var Alltså jag vet inte för att det fanns det kom nog precis när jag började jobba med React så att Det kändes som en game changer, men jag vet inte hur pass mycket game changer det var. det kom 2016 och det tog bort så mycket av krångligt med att hålla på med Boilerplate-kod för att konfigurera ett helt React-projekt, du vet, webpack Configs och Babel configs, du måste Du har ju ändå haft Du har väl haft projekt där ni inte har Create Direct App. Den har fått hålla på med allt juxt. Ja precis, då var det helt enbyggd webpack och det var ju nice för att där är vissa saker CreateTrackApps som inte kommer med automatiskt Till exempel server-side-rendering och lite sånt som vi då behövde i den applikationen. Men det är jobbigt att underhålla det också. sen kan man ju ejekta sin creature och bara gärna gärna gärna också så att man kan ju komma runt det. Och då hamnar man i något helvete mellanstadies. Ja, det är nästan ännu värre. jag minns du har klagat på typ såhär, åh vi skulle migrera till webpack 5 och bla bla bla Ja, det tog jätteroligt tid. det tog bort mycket av helvetet som innebär av att jobba med frontend. Ge er inte in i det, för det är inte så jättemycket bättre nu ska jag säga. spöra på den räntan men det var Jag skulle säga att det var synonymt med att starta ett projektprojekt. alltså det var såhär, det är självklart att när du startar ett projekt projekt. Självklart använder du Create React-app för att sätta upp allting. och jag ser det fortfarande idag när folk lämnar in sin typ kod till eller techintervjuer, att folk fortfarande använder det, det är sån vana man hör. Även nu, alltså med Vitt och sånt. Ja, jag tror att Vissa vet inte. alltså vissa har inte hört om i alla fall Det de inte har hört om är att React-teamet Stövn Man slutade ju rekommendera det för ett tag sedan och det blev väl så här, man slutade maintaina det projektet och man började rekommendera, ja det är det här som jag ska gå in på, som är tjafset här. åh, alltid kul med tjafs Ja, så det har varit tjafs. som du säger har inte haft Jag har inte haft stöd för allting som är mer modern webb idag. så det är inte chockerande att det läggs ner men det hände drama typ såhär under 72 timmar efter att de offentliga ordet, att det verkligen ska läggas ner helt. Så jag ska sammanfatta drammat. React-teamet gjorde ett blogginlägg där de uppmanade att utveckla att överge Create Direct App och att man ska gå över till Next.js, React Router eller till och med bygga ett eget ravverk från grunden. inte rekommenderat inte rekommenderat men liksom det är de här sakerna du kan göra men jag vet att de har varit såhär, men håller inte på att bygga det från grunden så de har använt typ Next.js jag tror att du har sett det kanske på hemsidan när man går in så är det så här använda next IS eller Getp, kanske de också rekommenderar. men och nästan ingen nämnde alltså det heter vitt men de flesta tror jag säger vite. Folk som inte snacka franska så att någon kommer hata att vi säger vite. Hur säger du det? Jag säger vitt. Du säger vitt. jag har ju läst franska i fyra år men ja Fancy baguette. ja ok men vissa kallar det i alla fall vitt är jättepopulärt ibland React-utvecklare, typ alla som körde Create Direct App som ferierade på att det inte var toppen längre gick över till vitt. det var svinenkelt att gå över till det toppen liksom Men ingen typ nämnde att ett alternativ är att du går över till vitt. Det är jätteenkelt. Så att många utvecklare blev väldigt arga och menade att React-teamet var partiska mot vitt och förstår inte hur communityt faktiskt arbetar. Jag skulle säga att de flesta har ju gått över till vitt istället för att migrera alltid till NextGS. Det är ju mycket svårare i dig. känns mycket mer, alltså visst det är ju kanske bra om du ska bygga någonting stort och robust liksom, men det Det är mycket mer du får på köpet som du kanske inte behöver alltid. Ja, nej så de var såhär de gick ju till och med så långt att de anklagade React-teamet för att vara köpta av Det var någon som skrev så här av Big Framework. Men vadå? Alltså, eller vem Vem ligger bakom Next G is egentligen. är ditt företag som heter Och folk har kanske hört det om det är i olika sammanhang. de har ju såhär cloud-tjänster Haustings, vad kan jag säga? hosting exakt de kör hosting, de bygger next IS. Grej, det är typ så här Nu kan jag vara ute på utvatten så insatt det är jag inte. men det är många i reakt teamet som bidrar eller som har gått in och börjat jobba i Farnix TS-projektet och vissa verser någonting. de är väldigt sammankopplade Så det blir lite såhär Det blir väldigt färgat Jag håller faktiskt med om det. Så det här Twitter-chafset höll på i några dagar och det var ganska underhållande i alla fall när man såg posterna från det. Och React-teamet uppdaterade sitt blogg i läge och hade lite mer balanserade, nyanserade rekommendationer. Inklusive hur man kommer igång med vitt. Utan att behöva byta till ett ramverk som Next.js. så nu är freden återställd Men i alla fall. Lite drama. men jag hoppas att ni har fått budskapet mer, sluta använda Create Direct Up. det är liksom officiellt Dött. Alltid kul med lite drama men det var fint att det lades säga att de blev vänner till slut gör frid och frid på jorden Nästa grej inte så relevant för oss för oss att utveckla kanske men Amazon, du vet såhär typ alla stora företag har jobbat med AI, alltså LLM släppt någonting för att vara relevanta i AI Amazon har ju inte gjort det Nej, men de gör ju så mycket annat. alltså Ja Jag tänker att man har ju hela AVS som är typ en av de världsledande cloud providers och sånt. behöver man verkligen doppa Fingrarna i alla syltburkar. Absolut, absolut. alltså har du har du Azure, AWS eller går i Clouds och behåvar in pengar på att inte göra någonting i princip. Absolut, de har haft olika typer av LLM-tjänster i det. Men de har ändå inte riktigt varit med i gamet som någon som gör modeller, eller hur? och jag vet att de har haft vad heter den här, Code Whisper men ändå de har ju sin assistent Alexa och det är väl där man förväntar sig att någon strax utveckling ska ske och nu äntligen så har de rullat ut Alexa Plus eller i alla fall presenterat det jag vet inte, jag tror att man kan signa upp det och det finns olika erbjudanden om det var Prime eller inte. Det är väl spännande alltså alla de här Siri och Alexa är ju helt värdelösa du kan ju i princip inte göra någonting förutom att sätta på musiken eller släcklampan, men samtidigt med det sagt så är det liksom så här miljoners, miljoner människor som ändå interagerar med Alexa och säger starta musiken eller släcklampan Så att jag vet inte vad det kommer leda till. Men det är väldigt många användare som de introducerar features för. och det kanske kommer utvecklas så man kan förstå hur folk använder det mer och mer men ja, de som vanligt hade om en demo där de visade exempel som är det är ingen som gör så här i verkligheten Det var typ såhär, nu kan du använda AI för att beställa en Uber åt din kompis när din kompis kommer till flygplatsen. Gud vad krångligt scenario. alltså det enda jag vill kunna med typ Siri är öppna min anteckning som heter handlingslista och lägg till smör när jag står med händerna fulla och bakar och insatt smörtslut Det går, men det är skitjobbigt att säga det. Ja, men den fattar inte handlingslista. jag har i alla fall inte lyckats Vi hoppas att den är bättre men jag är ju väldigt trött på de här exemplen som ingen i världen någonsin skulle göra. Folk beställde sin Uber själv, den liksom inte ett verkligt case men det visar Så att de ger sig ändå in i det här. i agenter Alltså försöka göra någon slags agent som alla andra håller på med. vi får se vad som händer där något som är mer roligt för oss Visual Studio Code känner du till och använt kanske aldrig hört jag vet inte det är ju såhär, det är ju jätteväl typ alla vad det är nästa om, eller? Det tror jag nog. om man inte jobbar med något väldigt obskyrt språk Men det är en ID för som används kanske oftast av alltså nu vågar inte jag säga det Det känns som att förresten javascriptmänniskor använder Visual Studio Code. alltså min sambo frågade mig typ när han börjar plugga, såhär vad är skillnaden på Visual Studio och Visual Studio Code Så sa jag typ såhär, ja men Visual Studio det är typ för backend.net official studio code är typ för fronten alltså så om man ska hårdra så har han sagt det på sin li Och då hade de skrattat åt mig. och titta på nä Nej, det har hon absolut inte sagt. Och jag bara såhär Vadå är det alltså? Det var väl rimligt för någon som är ganska ny. Alltså det var ju precis när han var pluggare Det var inte så dum förklaring eller? men vad menar de att välja hur hade du fel? Ja, nej jag vet inte. Alltså klart du kan köra andra saker i Visual Studio Code också. Ja, men det är hemskt och du gör inte det. Nej, nej, exakt. Nej, sign out i alla fall. jag avskyna folk föreslår det Alltså, förlåt min chef. du är bäst men liksom jag var såhär Behöver du verkligen? Och vad jag skulle ha. IntelliJ, för jag var Behöver du verkligen IntelliJ? det går ju att köra i Visual Studio Code jag tänker inte sitta med ett sådant fullfledged språk när jag har en full-fledged ID och sitta i Visual Studio Code skitextensions nej Jag är benägen att hålla med. det är för att vi är färgade av Visual Studio som har allt okej, vi har förklarat vad det är nu på dåligt sätt och folk skrattar säkert antagligen igen men i alla fall De har ett väldigt populärt tema. man kan ha väldigt många olika teman den här ID-n Som heter Material. och det är för att man har upptäckt inte missnänksam kod så material theme var väldigt, väldigt populärt tema. och jag hade mer än 6 miljoner användare och det är inspirerat av Googles material design men nu är det alltså helt borta Jaha, men vadå? Alltså, teman, det är ju typ bara lite JSON. Vad kan man slänga in för farlig kod där i? eller ställ inga frågor så är det bara jag jag bara funderar Men visst, det är klart, har man ont uppsåt så kan man ju lyckas göra det med det mesta. jag är så oskyldig och naiv och bara Hur skulle man kunna göra det i ett tema? Mia? Ja, alltså bra fråga Jag har aldrig byggt ett tema. någon som har byggt ett tema vet ju såklart var det men den ändrar väl inte bara eller ändrar man bara färg liksom color black för det är det de sa i alla fall att Det de sa var att det fanns Alltså det fanns mycket typ kod som gör som har onödiga beroenden till saker. De körde några så här child-processer IVS-kod, vilket var väldigt märkligt för ett vanligt tema. jag vet inte så det får jag bort då. Då kan jag tipsa om världens bästa tema som jag använder på rubbet och det är ju Nord. Jag tycker det är så snyggt. Ja just det, det använder du. Ja men det gör jag, men det är typ sublime med någonting koffe eller något sånt där. Det är lite så här Brun, orange typ. eller sublime associerar jag med orange i alla fall. det är ett färgglatt tema men det är lite så här Det är lite mognare, skulle jag säga. det är bara skönt för ögonen Det är inte så skrikigt, men det är ändå färglat. jag får göra om någon vill så kan vi göra ett avsnitt om Och alla teman vi har och alla vår uppsättning och allting som vi använder. men då får ni önska det Annars kommer jag att tycka att det är pinsamt. Entropic också AI-stuff De har släppt en ny version av sin populära LLM, version 3.7. Alltså Claude då, eller? just den här alltså modellen heter sonnet. Ja men det gör väl som används jag vet inte om Klad är typ det fina namnet jag fattar inte Det kanske är som Antropic är som OpenAI och sen har du kettgipete som är klarad och sen är sonnet själva modellnamnet Som typ 01. förmodligen ja Ja, för mig. jag orkar inte tjejgissa saker här, för det blir alltid fel säkert. Men det låter jätterimligt, i alla fall det har kommit en ny ny version av den och just sån 3.5 har ja, ofta enligt de flesta benchmarks toppat ligan i att vara en bra kodassistent och generera kod. och den dök upp i juli 2024 men enligt Antropic så ska 3.7 vara ännu bättre inte jättekonstigt det ska vara bättre, men det ska vara bättre på kodning och specifikt frontend utveckling och som en del av det här så satsar man också på ett verktyg som heter Claude Code som är en AI-agent som konkurrerar med liknande lösningar som typ Devin och andra sådana här och ett verktyg, är det bara som tycker Claude Code inte var ett bra namn. Jag tänkte alls Det ligger bra i munnen. Ja, alltså klart överhuvudtaget. det blev lite det blir lite äckligt en förklad kod Claude Ja, jag vet inte. Det låter som en butler, men det var okej. Faktiskt, här det kan inte vara. Alla de låter lite så. jag vet inte, det är ingen som har lyckats med ett produktnamn här, alltså Gemini kanske är det minst äckliga Bara är kött-GPT äckligt? Nej, men är vi inte bara så dåliga produktnamn? O-one eller vilken modell ska jag använda idag O-one eller 03 Mini eller 4-0 eller det är så dåligt bara så här ja produktpresentation med det sagt också de pratar om att jag vill veta att det är jobbigt, du ska inte behöva sitta och välja bland sex modeller utan de ska typ automatisera det Att när du skriver en prompt så väljer de den bästa modellen för det du vill göra. Det vore asbra. I alla fall, den tidiga versionen, Sonnet 3.5, den blev ju jätteframgångsrik. och de flesta IDs med generativa AI-funktioner började använda den. men för GitHub co-pilot som du använder i Vision Studios och dröjde det med stödet för det. Då hann andra IDs som typ Cursor, Windsurf, plockade upp användare i och med att de tillät sådana 3.5. Men den här gången så har alla stora utvecklingsverktyg inklusive GitHub Copilot redan lovat stöd för 3.7. Om vi tar om GitHub Copilot så släpper GitHub Copilot sin code review-funktion. det ska bli spännande för det du har pratat om du vet att, ja men, så här en AI som kanske kan kolla igenom din pull request. Ja det är skitbra att kunna ha Åtminstone en första granskning innan man skickar upp den för att ha en peer. eller hur, jag har inte testat den och jag fick mejl precis typ tror igår att min Co-Pire-licens har uppgraderats med den här funktionen för vi betalar för det på jobbet Så det ska bli jätteintressant att testa. så vad den gör är att den ger feedback på pull requests går igenom och hittar uppenbara buggar, den summerar ändringarna, den föreslår vilka tester du. Du kan ha den rättar stavfel vi som klagade på stavfel för något avsnitt sen. men ja, det är jäkligt coolt. Sen tänker jag att den lär ju inte fatta kontexten särskilt bra alltså själva featuren du implementerar hur det hänger ihop, alltså det borde den ju inte kunna men allt annat sånt här liksom att det ska vad stafel och liknande och skriver en tester åt den också. eller bara säger en typ så här, du borde testa detta För det har ju varit sjukt nice om den bara, du borde testa här det här. Här har du ett unit-test. Jag vet inte, vi får testa. det stod bara att den föreslår tester så jag vet Det kanske inte är bra för sånt. ja nej men ingen aning, men det låter ju som ett bra tillägg, men som du säger den kanske inte kan skriva en bra Purukost sammanfattning åt den för att den saknar kontext det blir kanske såhär, jag har ändrat detta, jag har ändrat detta, okej men det är inte intressant om jag inte vet varför du ändrar detta. är du typ för dålig på att använda bra domänspråk. Ja, det är också ett kan man känna att man börjar bli bättre på det och vidare till Google vi måste ju nämna alla stora aktörer innan vi klarar. Google släpper sin kodassistent Gemini code assist gratis för privatpersoner. tidigare så kostade den 22 4 4 5 2,8 dollar i månaden. otroligt Det är så här konstigt. specifikt de hoppas vi på att råka in fler användare det här har de gjort med alla sina AI-verktyg. Först så Skulle de att alla skulle betala för det. men ingen ville betala för det Så nu försöker de tvinga oss att använda det i alla appar istället. för att nu var de såhär, okej, ingen vill betala för vi vill ju ha folks data så låt oss bara tvinga dem användare typ släpper det fritt. som sagt, jag vet inte hur många gånger man har hört det här med att om någonting är gratis Så betalar du ändå någonting och ofta ser du din data. exakt ja så vi får se om de hinner i kapp Co-pilot och Cursor då för företag kostar Gemini Code Assist fortfarande dock 54 dollar i månaden. Det är ganska dyrt. Eller vad kostar Co-Pilot? För företag vet jag faktiskt inte. det är antagligen också dyrare för det är typ såhär, din data processas bara på en dedikerad Och server som de inte har tillgång till. de får inte träna på din data så där förstår jag man får betala eller ha vänta här står det Jag vet inte, det här är ju priser i dollar kan ju vara annorlunda på vår marknad men här står det att Gemini Code Assist kostar 54 och GitHub Copilot Enterprise kostar 39 dollar. så den är dyrare Ja Men ja, det var nyheterna. Ja men tack för den här genomgången väldigt bra påläst Så jag slipper läsa nyheter. Ja, varsågod Jag kommer tänka på vi borde ju ha tagit upp någonting om allting som har varit med Firefox. Har du hört någonting om det. Ja, men jag orkar inte prata mer. jag dricker vatten så får du berätta jag har inte alls förberett någonting Men jag har läst lite om det. De har ju uppdaterat sina Terms and Conditions nu. och i princip första versionen sa ju mer eller mindre. Vi kommer samla in all data du matar in i liksom inte ett fält eller i vad du skriver eller vad du ser för arbetet, de ska väl få också göra någon form av AI-träning eller något kan jag gissa de har blivit uppköpt också så att det är mer men folk har ju slagit bak ut nu och letar efter alternativa browsers. Det finns ju typ Libre Wolf till exempel vet jag som är en fork av Firefox om man nu vill fortsätta använda Firefox men inte sälja ut sin själ. Sen finns det ju en massa andra alternativ är man fint med att köra på Chromium så förespråkar ju både du och jag ark och ja nej det finns ju tusentals alternativ brave och massa obskyra alternativ som jag knappt ens har talas om. ja det där är Tråkigt för jag har inte hört att de erbjuder att du kan betala någonting och få slippa undan det. för att jag förstår att folk behöver tjäna pengar som privatperson alltså jag vill inte heller betala 200 spänn för att använda en browser, men att de kunde haft en modell så här, betala 20 spänn i månaden. Så hade nog väldigt många gjort det. Ja kanske Jag hörde jag vet inte, jag har inte faktagranskat detta nu men att en stor anledning att de har mindre pengar är för att Google har slutat supporta dem Google har ju supportat ganska många browsers mot att då få ha Google som default-sökmotor. nu när de inte längre får göra det i och med de här lagarna som har trätt i kraft Så det är ju som har förstört detta. skiter de i att supporta För att då får de inte ut någonting av det. Okej, så det är vårat fel, europeerna. Ja, exakt. Skilj på det. Okej, då ska jag inte säga något. fan vad de måste vara trötta på oss i USA vi fick ju en lyssnafråga också som vi kan ta och bränna av kanske, jag tänker den är inte så jättelång det är från vår vän Kajetan Kazmierczak som vars namn ni har hört många gånger han frågar såhär Hur löser man bäst konflikten mellan att vara lite av en scout och alltid lämna koden i bättre skick än när man fann den. Det vill säga fixa eventuella småsaker när man ser dem, uppdatera paket, fixa felstavningar och så vidare. och att bara stäcklösa det som finns i en Jira-ticket och inget annat. Flera arbetsplatser har, fullt förståeligt kanske, en policy om att en PR endast får innehålla lösningen på en feature eller bugg och inget annat. Samtidigt vill man ju inte att koden ska förfalla för att det inte finns ticketsgira för något litet man precis har hittat. och att skapa en ticket får en prioriterad och kanske jag får återkomma till den senare är ju rätt omständigt om det handlar om till exempel att säga att det är en funktionsnedsättning namnet på en lokalvariabel som är felstavat. har ni råkat ut för er dilemat Det jag bara reagerade först på var att flera arbetsplatser har en policy där man där en PR är endast få innehålla lösningen och ingenting annat Jag har aldrig varit med om det. inte jag heller faktiskt. Jag har liksom inte hört det som att det skulle vara ett problem på det sättet. Att man bara får göra det. sen kan jag ju förstå att man inte vill trycka in hur mycket som helst man får ju ha lite sunt förnuft då men ibland så är det ibland blir det att man måste lägga ihop vissa saker. Det har jag i alla fall gjort mig skyldig till. Ja, men jag definitivt var med att folk diskuterar det här i ett team. Men aldrig att det finns en strikt policy. Nej jag tycker bara det låter helt sjukt Att man ska behöva göra en ticket av det och få den prioriterad och att den ska gå igenom hela den här processen, det känns som någonting man borde diskutera fram. jag vet inte, kanske någonting och ta upp ett retro och säga det här För att jag vill kunna lösa småsaker. för att jag är helt med på det här scout-tänket jag tycker det är klockrent ser man någonting som börs fixas och om det bara är liksom ett stavfel eller någon lint grej som har blivit fel eller någonting. Då har jag bara gjort i samma PR, om det är liksom relaterat till det kontextet. men om man ser att det kanske är en funktion som skulle behöva refektuereras för att den är lite otydlig. man kanske vill bryta upp det jättelånga till lite olika variabler och sånt, då kanske det är mer okej, kanske ska göra ett eget men då hade jag ändå bara gjort det i en egen PR och inte skickat in den samtidigt Ja, det är väl här det kan bli tjaf så att man är oense. För att jag tycker att man ska städa upp när det är ett stav fel. Men jag förstår absolut problematiken att du behöver refakturera en funktion. eller är det typ såhär du ändrar kanske en massa stavfel jag vet inte, du ändrar saker som känns små, men i och med att den här koden inte ha tester så kan du ha faktiskt, jag vet inte introducera något nytt stavfel och det liksom upptäcks inte förrän du har tryckt ut det jag vet inte det skulle ju kunna vara till exempel eller om man använder så här magic strings alltså att du istället för att du har en konstant eller någonting eller en enum så jämför du ett strängvärde och så har du plötsligt bytt strängvärdet och det är ju mycket lättare att detta trillar mellan stolarna om man bara gör det lite under radarn, det blir ingen spårbarhet om du inte har en ticket och kopplar det till på det sättet. Jag har jobbat med en utvecklare som jag har väldigt stor respekt för. Men som var väldigt snabb och upptäckte att shit, det här behöver göras om. för att man behöver underhålla sin kod. Man ser den en halv dag senare och bara men vad fan är det jag skrivit men som kände att det var en bra idé att passa på och kanske gjorde en till PR då ens alltså försökte vara ändå så här noga att det skulle vara lätt att coldreviewa men jag minns att vi hade en QA-person då som ibland gick i taket över det här, för att Det var så här. nu har du ju gjort massa ändringar hur vet du att det här funkar och det här smöks alltid mer liksom lite för QA-personen för att den här utvecklaren visste ju att QA-personen skulle fråga. och så var det också störigt för vissa som utvecklare, ibland kom det En väldigt stor, nej men det här är bara en refakturering, jag bara liksom gör om hela strukturen. Jag gör det mer kanske funktionellt eller jag vill inte att det ska vara funktionellt för det är så svårläst. Och då att sitta och granska det som kollega utan en ticket. alltså det var ändå såhär Det kunde vara svårt. Ja, men det känns som en lite större grej. Man kanske kan ha någon slags... är det mer än två minuters jobb implementera och mer än 15 minuter att testa ja då får det bli en ticket av det sen vet jag inte jag har ändå varit Scrum Master och jag skulle inte bli sur om någon utvecklare la upp en ticket och bara drog in den i typ developing och köra. det tycker jag också är nöjs det låter som hon har ett bromskloss Så att man ska sitta och prioritera upp det och så vidare. och sen prioriteras det inte upp och så glömmer man bort den. som ändå är så lite att man gör det samman så var att köra liksom. Ja, enda gången jag skulle vilja lägga dig någon prio-backlog är att om det är ett större arbete. om det är en dags arbete eller en halv dag ens då ja snackar vi liksom, nej då kan du inte bara smyga in den lite sådär. Ja precis för då sitter du ändå och har prioriterat ner någonting annat. man behöver ändå vara transparent mot alla i teamet och ha respekt för pion vars ansvar är att se till att det är mest prioriterat att jobba på, det är säkert helt okej för PN, men man behöver liksom lyfta det och prata om det och det kan vara typ så här Och det kan vara sjukt störande som utvecklare. man är så här, du måste göra det här det går ganska snabbt, det tar bara en halv dag men de vill ändå ha lite koll att förstå vad som händer och varför varför ni lägger tid på det här ofta brukar man ju lägga in lite padding för typ maintenance tasks och sånt. När man gör sprint planning och sånt. Så jag tycker ändå att utrymmet borde finnas där. det håller jag med om Men vad tror du? Säger du? nej men jag känner igen ett scenario och det är såhär det häst det här stör mig faktiskt väldigt mycket bland saker som stör mig. Jag borde skriva upp det här någonstans. Så att vi gör ett avsnitt om saker som stör mig med andra utvecklare säg att det är så här Ja men det tar 20% av din sprinttid att göra det här. eller ens 50 och så säger vi att det här tar lite det är det lugnt att vi lägger in den här backloggen Och den här utvecklaren säger, nej jag vill göra det nu. Eller säger, det här kommer inte ta så lång tid. så det de gör istället är att de tycker det här är rätt roligt arbete. Så de sätter sig på kvällarna och gör det här. och påstår sen även om du har varit med, men jag har varit med flera gånger från olika personer. det är så roligt att de gör det på kvällen men det är ändå någon som ska jobba med detta sen och testa det. Granskare? de personerna är oftast det är inga problem för någon och jag har suttit och gjort det här själv och hur kan du inte vara typ Du vet, hur kan inte alla bara vara tacksamma att jag sitter och gör det här på min fritid? men jag vill inte ha det så Jag vet inte att det sitter folk och kodar hela nätterna. Alltså visst, jag har väl gjort det någon gång så här. men då försöker jag Jag vet inte att folk ska se att jag har gjort det. det ska inte stressa teamet att här sitter någon och kodar på kvällarna av intresse och höll på med ett hobbyprojekt då Det stör mig. Och definitivt har vi folk som lyssnar som gör så här. jag tror jag har gjort så någon gång också Jag känner mig lite smått träffad. Jag har ju träffat själv också någon gång. Men det finns vissa som är väldigt så med större grejer så att de inte förstår att det är stort och de insisterar på att De låter inte den här purrkosten vara i draft. att så här för det är fine, gör det på kvällen lägg upp en pull request och skapa en ticket, lugna ner folk alltså preppa dem lite jag vet att det är störigt men gör det här lilla extraarbetet för folk så att du inte bara trycker in saker, åtminstone det Någonting bara såhär kommunikation typ Men ja, vad vill du säga? Jag ska säga tror du det är en bra idé att man har någon så här generell typ förbättringsticket alltså som man kan då kopplat till och att man då För de flesta verktyg så kan du ju ändå skriva en kommentar till, alltså kopplingen till din ticket från din PR. för då löser man ju lite det här att man måste gå in och du ska skapa en ticket det är ändå lite extra overhead som blir ganska mycket om du bara ska Fixa något litet stavfell eller liknande. eller blir det bara en slasktratt Nej, alltså stavfel, absolut samma pull request. Alltså som sagt när det inte är När det inte är farligast av fel att man ändå råkar ta sända något. Jag tycker det ska vara refakturering i PR-en. Men jättegärna att det är en egen commit. här har jag gjort arbetet och här har jag stötat upp. Absolut. Men prata om man kunde ha en ticket som är generell, som du kopplar till. Som bara slasktrattar allting. Ja men typ Alltså så här, det här är denna sprintens förbättringsticket. hit kan du koppla små grejer. jag vet inte själv om jag gillar det riktigt nämligen men jag funderar på att det skulle kunna vara en lösning Ja men är det så smått alltså då tycker jag det ska vara kopplat till alltså då kan det ändå vara på den originalticket Absolut, det är någonting så här så råkade jag se en helt annan fil att det var någonting jag vet inte på ena sidan blir det så här, men gud vad bajsnördig man ska vara Man kan inte ens fixa någonting litet utan att man ska skapa en ticket. men å andra sidan är det inte så jobbigt att göra det bara klicka på det plus och skriva en titel och vad man fixade typ. Det beror på hur mycket du ska skriva. Alltså vissa är ju superstrikt att du ska skriva given, when, then och typ as a developer Nej, det är det man inte ska skriva. as a customer You want to blah, blah, blah, blah, blah. effector. system liksom. Det är det som Det är veisnödig Nej, det är ju får man inte göra Nej men jag vet inte och det jag har haft i andra team är att vi har en feature eller epic i Jira som heter typ så här technical improvements, depth, ideas och kommer du på någonting så kan du lägga in en task där för framtida grejer eller så när du ser någonting nu nu nu så har du en feature och lägga den under. och då Ja, så hade vi också mitt senaste team. det här kunde vara verkligen högt och lågt Ja, man måste rensa ut de här också, jag har märkt. för ibland ligger det bara saker som ingen någonsin inte höra upp. Men jag tycker det är schysst skriva en rad såhär, för det är för en själv för man själv minns inte jag har skapat den här artikeln för ett halvt år sedan och det finns bara en titel som är refactor blablabla service och så bara, men vad är det jag ville reflekturera alltså varför och så är det ingen annan som kan ja så är det ingen annan som kan Ja, så är det ingen annan som kan plocka upp den. nej man ska inte önska så mycket man glömmer Alltså har vi svarat Ketanens? Frågan var ju, har ni råkat ut för er dilemmat? Ja, eller jag har absolut haft diskussioner. Jo, sen har jag de senaste sju åren har jag jobbat i samma projekt och där hade vi turen att ha väldigt förstående PO men absolut att det ändå ibland dyker upp dem. Man måste prioritera det mot något annat. men en sista sak jag tänkte på kanske. För han nämnde också typ så här uppdatera paket till exempel. mycket kan man ju faktiskt automatisera Man kan ju ha typ såhär Det pendrar bort och sånt för att uppdatera paket. då blir det ju inte lika mycket att du själv måste hitta tiden och trycka in det nu kommer jag ihåg att jag läste någonstans i någon tråd när vi pratar om linters så att Ketan sa att han hatade Linters. jag blev såhär chockad bara, hur kan man hata linters? Det är ju ett bra sätt att kunna undvika att man behöver göra sådana reflektureringar. Ja det är mycket som går att automatisera och är det en breaking change ja men då får man ha jag vet att vissa team hos oss där de får in breaking changes de har typ så här en person som är ansvarig att ta hand om Breaking Change varje vecka så att alla vet att vilken är det Madeleine som kommer Jag är on breaking change duty ja faktiskt så det är det så. schysst men jag tycker också i allt det här så får man väl ta in lite såhär, hur kritiskt är vårat system har du många miljoner användare och att så här går det ner på grund av ett stav fel så förlorar så extremt mycket på det Så kanske man bör fundera. Ja, eller om det är en bank eller någonting liksom och sånt där det kan vara jättestora implikationer om någonting händer. andra kritiska system ja du dyktar kommer hända fel, men det kan nog vara skönt om det sker ett fel på grund av något stoff i eller man gjorde du hade en ticket att du skrev varför du gjorde det det kan nog kännas lite bättre det ändå att man gjorde så pass berätta Att man bara kunde. det än att det kommer fram att man har smugit om någonting och så har det blivit fel då är det ju lite skämmigt alltså då står man ju där med typ att man såhär, bypassade policies eller folk som är så här du vet, har en buddy som alltid godkänner Det måste vara en skambrån. Ja, när man får fundera på hur viktigt ens system är. Ja Hoppas det var en intressant diskussion i alla fall om inte annat så var ju dina nyheter intressanta. Absolut Men ja, vi hörs nästa vecka då Det gör vi. Ha det bra allihopa.