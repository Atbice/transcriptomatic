Jag minns att vi hade en QA-person då, som ibland gick i taket över det här, för att det var så här, Nu har du ju gjort massa ändringar. Hur vet du att det här funkar? På allt inom mjukföreutveckling. Vi träffar spännande gäster, testar nya teknologier, söker inspiration och tar upp aktuella ämnen. Nej jag vet inte, varför har det blivit så svårt att starta podden? Vi startar såhär. Vi stela. Det är bara att sägas lite på saker att säga känns det som. Vi har en massa saker att säga, men de kanske är såhär rants utanför tech-världen. världen? Ja, nej jag vet inte. Jag var såhär, du bara frågade, har du något att säga? Ja, men jag hade kallas för min ettåring idag. Det är inte heller så intressant att prata om. Ska vi inte bara hoppa direkt in och tacka våra stjärnsreporter på Patreon, så sen snackar vi om vad vi ska snacka om. Jo, jo. Jag måste spöra luften i mina lugn, för det är så mycket teknikheter att såhär... Jag vet inte ens hur jag ska orka läsa igenom det här. Okej, men då kör vi i och tar och tackar våra skärmsupportare på Patreon. Det är alltså de som stöttar oss med hundra kronor eller mer per månad som får sitt namn uppläst här. Och det är Alicia, Anders Nylund, Björn Jonsson, Dag Grunell, Kajetan Kazimierzak, Lars Nyström, Molly Haglund, Oskari Pannotby, Selim Gjortal, Styg Hengst och Tomas Nilsson. Tack så mycket till er och tack till alla andra som stöttar oss på Patreon och på alla andra olika sätt som ni supportar oss. Ja, det var någon som köpte merch häromdagen. Jag blev så här glad när det droppar in lite då och då. Exakt. Och ibland ser jag någon på jobbet som har vår merch, som inte går fram och skryter om det varje dag, utan bara såhär. Ja, men jag har er merch. Det är najs. Fint. Ja. Jag vet ju det, men det kanske inte är alla som har gjort det. Om man är ganska ny så kanske man redan vet att man inte bör använda Create, React, App, jag vet inte. Eller om man inte är frontenutvecklare. Jag lämnar inte ifrån den utvecklaren, men vad ska vi säga då? konfiggs och Babel-konfiggs, du måste, du har ju ändå haft, du har väl haft projekt där ni inte har straight-tracked-app, där ni har fått hålla på med allt jox. Ja, precis. Då var det helt enbyggd webpack och det var ju nice för att det var vissa saker i Creator Act App som inte kommer med automatiskt till exempel server-side-rendering och lite sådant som vi då behövde i den applikationen. Men ja, det är jobbigt att underhålla det också. Sen kan man ju ejecta sin Kreator-aktiv och gärda, gärda, gärda också, så att man kan ju komma runt det. Ja, och då hamnar man i något helvete mellan stadies. Ja, det är nästan ännu värre. Kväm och bla bla bla, det tog jätteråget tid, ja. Men det tog bort mycket av helvetet som innebär att jobba med frontend. Ge er inte in i det, för det är inte så jättemycket bättre nu, ska jag säga. Men det var i alla fall, jag skulle säga att det var synonymt med att starta ett reaktprojekt. Alltså det var såhär, det sker ju klart att när du startade såhär. Vissa vet inte. Alltså vissa har inte hört om att... Ja, i alla fall, det de inte har hört om är att React-teamet slutade rekommendera det för ett tag sen. Och det blev väl såhär, man slutade maintaina det projektet. Och man började rekommendera... Ja, det är det här som jag ska gå in på som är schaffsat här. Åh, alltid kul med schaffs. Ja, så det har varit tjafs. Som du säger, projektverktapp har inte haft stöd för allting som är mer modern webb i dag. Men nästan ingen nämnde, alltså det heter vitt, men de flesta tror jag säger vite. Folk som inte snackar franska. De kommer hata att vi säger vite. Hur säger du det? Jag säger vitt. Du säger vitt, ja. Men jag har ju läst franska i fyra år. Jaha. Fancy, vad gött. Ja, okej, men vissa kallar det vit. I alla fall. Vit är jättepopulärt ibland reaktutvecklare. Typ alla som körde projekt direkt upp, som fejlerade på att det inte var toppen längre, gick över till vitt. Det var svinenkelt att gå över till det toppen, liksom. Men ingen typ nämnde att ett alternativ är att du går över till vitt. Det är jätteenkelt. Så att många utvecklare blev väldigt arga och menade att React-teamet var partiska mot Witt. Och förstår inte hur community faktiskt arbetar. Jag skulle säga att de flesta har ju gått över till Witt istället för att migrera alltid till Next.JS. Alltså, det är mycket mer du får på köpet som du kanske inte behöver alltid. Ja. Nej, så de var såhär... De gick ju till och med så långt att de anklagade React-teamet för att vara köpta av någon som skrev såhär, of big framework. och React-teamet uppdaterade sitt blogg i lägge och hade lite mer balanserade, nyanserade rekommendationer, inklusive hur man kommer igång med vitt, utan att behöva byta till ett ramverk som Next.js. Så nu är fredan återställd, men iallafall, lite drama, men jag hoppas att ni har fått budskapet med er. Sluta använda Create Racked Up. Det är liksom officiellt dött. Mm. Alltid kul med lite drama, men det var fint att de blev vänner till slut. Gör frid och frid på jorden. Nästa grej. Inte så relevant för oss, för oss utvecklare kanske, men Amazon, du vet såhär, Alla stora företag har jobbat med AI, LLM, släppt någonting för att vara relevanta i AI. Och sådana har ju inte gjort det. Nej, men de gör ju så mycket annat, alltså. Jag tänker att de har ju hela AVS som är en av de världsledande cloud-providers och sånt. Behöver man verkligen doppa fingrarna i alla syltburkar? Absolut, absolut. Alltså har du Azure, AVS eller Google Cloud så behåvar du in pengar på att inte göra någonting i princip. Absolut, de har haft olika typer av LLM-tjänster i det. Men de har ändå inte riktigt varit med i gamet som någon som gör modeller, eller hur? Jag vet de har haft, vad heter den här, Code Whisper, men ändå, de har ju sin assistent, Alexa. Och det är väl där man förväntar sig att någon slags utveckling ska ske. Och nu äntligen så har de rullat ut läxa plus, eller i alla fall presenterat det, jag vet inte. Jag tror att man kan signa upp det, och det finns olika erbjudanden om du har Prime eller inte. Det är väl spännande. Alla de här Siri och Alexa är helt värdelösa. Du kan ju i princip inte göra någonting förutom att typ sätta på musiken eller släcklampan. Men samtidigt med det sagt så är det liksom så här miljoner och miljoner människor som ändå interagerar med Alexa och säger starta musiken eller släck lampan, så att... Jag vet inte vad det kommer leda till, men det är väldigt många användare som de introducerar features för. Och det kanske kommer att utvecklas så att man kan förstå hur folk använder det mer och mer. Men ja, de som vanligt hade en demo där de visade helt såhär Exempel som är helt, det är ingen som gör såhär i verkligheten. Det var typ såhär Nu kan du använda AIT för att beställa en Uber åt din kompis när din kompis kommer till flygplatsen. Gud vad krångligt scenario. Alltså det enda jag vill kunna med typ Siri är öppna min anteckning som heter Handlingslista och bakar och insatsmörts lite typ. Det går, men det är skitjobbigt att säga det. Ja, men den fattar inte handlingslista. Alltså nej, jag har i alla fall inte lyckats. Nej, vi hoppas att den är bättre, men jag är ju väldigt trött på de här exemplen som ingen i världen någonsin skulle göra. Man jobbar med något väldigt uppskyrt språk, men det är en id för, används kanske Det har hon typ inte sagt. och jag bara såhär, vadå vadå, jag tycker det var väl en rimlig, för någon som är ganska ny, Alltså att de hade blivit snabba att plugga, det var väl inte så dum förklaring, eller? Men vad menar de att, väljer vi hur hade du fel? Ja nej jag vet inte. Alltså, klart du kan köra andra saker i Visual Studio Code också. Men det är hemskt och du gör inte det. Nej, exakt. Ja, nej. Säg något i alla fall. Jag avskyr när folk föreslår det. Det är för att vi är färgade av Visual Studio som har allt. Okej, vi har förklarat vad det är nu. På dåligt sätt och folk skrattar säkert antagligen igen. Alltså, teman, det är ju typ bara lite Jason. Vad kan man slänga in för farlig kod där i? Eller ställ inga frågor. Just last words. Jag bara funderar, men visst är det klart, har man ont uppsåt så kan man ju lyckas göra det med det mesta. Jag är så oskyld och naiv och bara, hur skulle man kunna göra det i ett tema, men jag... Ja... Alltså, bra fråga. Jag har aldrig byggt ett tema. Tema vet ju såklart vad det är, men den ändrar väl inte bara, eller ändrar man bara liksom färg, liksom color black, för det är det de sa var i alla fall att det fanns mycket typ kod som gör, som har onödiga beroendet till saker, de körde några så här child-processer i VS Code, Vilket var väldigt märkligt för ett vanligt tema. Jag vet inte. Det får jag bort då. Då kan jag tipsa om världens bästa tema som jag använder på rubbet och det är Nord. Jag tycker det är så snyggt. Ja, just det. Det använder du. Vad använder jag? Jag använder typ Sublime... Någonting, koffe eller nåt sånt där, det är lite såhär... Lite brun, orange typ, va? Eller sublime, associerar jag med orange i alla fall. Ja, men det är ett färgglatt tema, men det är lite så här, det är lite mognare skulle jag säga. Det är bara skönt för ögonen, det är inte så skrikigt, men det är ändå färgglatt. Ja, okej. Om någon vill så kan vi göra ett avsnitt om alla teman vi har och alla vår uppsättning och allting som vi använder. Men då får ni önska det, för annars kommer jag tycka att det är pinsamt. Enthropic, också AI Stuff, de har släppt en ny version av sin populära LLM, version 3.7, som bygger vidare. Alltså klon då, eller? Just den här, alltså modellen heter Sonnet. Antropik är som OpenAI, och sen har du Chetki-Putee som är Claude. Och sen är sådant själva modellnamnet som typ O-One. Förmodligen. Ja, förmodligen igen. Alltså jag orkar inte tjej gissa i saker här för det är alltid fel säkert. De flesta benchmarks toppat ligan i liksom att vara en bra kodassistent och generera kod. Och den dök upp i juli 2024, men enligt Anthropics så ska 3.7 vara ännu bättre. Inte jättekonstigt att det ska vara bättre, men det ska vara bättre på kodning och specifikt front-end-utveckling. Som en del av det här så satsar man också på ett verktyg som heter Cloud Code som är en AI-agent som konkurrerar med liknande lösningar som typ Devin och andra sådana här AI-verktyg. Är det bara jag som tycker Claude Code inte var ett bra namn? Jag tyckte alls att det ligger bra i munnen. Ja, så kladd över taget. Ja, det blev lite för mig. Det blev lite äckligt. En äcklig. En glad kod, ja. En klad. Jag vet inte. Det låter som en butler, men det är okej. Ja, faktiskt. Här kan det vara. Alla dem låter lite så. Jag vet inte, det är ingen som har lyckats med ett produktnamn här. Alltså, Gemini kanske är det minst äckliga. Vår chat-GPT är äckligt. Nej, men det är bara så dåliga produkter. O1 eller vilken modell ska jag använda idag? 01 eller 03mini eller 40 eller... Det är så dålig bara så här produktpresentation. Men det är sagt också. De pratar om att de vill veta att det är jobbigt. eller för det du vill göra, det vore bra. I alla fall den tidiga versionen, Sonnet 3.5, blev ju jättefrangångsrik. De flesta IDs med generativa AI-funktioner började använda den. Men för GitHub Copilot, som du använder i Visual Studio, så dröjde det med stödet för det. Då hann andra IDs som typ Cursor och Windsurf plocka upp användare- i och med att de tillätts som ett 3.5. Men den här gången så har alla stora utvecklingsverktyg, inklusive GitHub Copilot, redan lovat stöd för 3.7. I tal om GitHub Copilot så släpper GitHub Copilot sin code review-funktion. Det ska bli spännande, för det har du ju pratat om, du vet att, Men en AI som kanske kan kolla igenom din pullerquest så att du kan få det att gå så mycket lida. Alltså att kunna ha åtminstone en första granskning innan man skickar upp den för att ha en peer. Eller hur? Jag har inte testat den och jag fick mail precis typ, tror igår, att min Copilot-licens har uppgraderats med den här funktionen för vi betalar för det på jobbet, så det ska bli jätteintressant att testa. Den rättar stafel, ni som klagade på stafel för något avsnitt sen. Men ja, det är jäkligt coolt. Sen tänker jag att den lär ju inte fatta kontexten särskilt bra. Alltså, själva featuren du implementerar, hur det hänger ihop. Alltså, det borde den ju inte kunna, men allt annat sånt här, att det ska... Ja, vad står fel och liknande? Skriv den, testa råtan också. Eller bara säger den typ så här, du borde testa detta, för här har det varit sjukt nice. Som den bara, du borde testa det här, här har du ett unit-test. Jag vet inte, vi får testa. Det stod bara att den föreslår tester. Ja. Så jag vet inte. Men ingen aning, men det låter ju som ett bra tillägg, men som du säger, den kanske inte kan skriva en bra purrkostsammanfattning åt den för att den saknar kontext. Det blir kanske så här, jag har ändrat detta, jag har ändrat detta, okej, men det är inte intressant om jag inte vet varför du ändrade detta. Är det inte bara för dåligt på att använda bra domänsspråk? Men ja, det är också ett... Man kan känna att man borde bli bättre på det. Och vidare till Google, vi måste ju nämna alla stora aktörer eller hur innan vi klarar. Google släpper sin kodassistent Gemini Code Assist gratis för privatpersoner. Tidigare så kostade den 22... 22,8 dollar i månaden. Vad? Otroligt. Särskast är... –Specifikt? –Ja. De hoppas vi på att råka in fler användare. För det här har de gjort med alla sina AI-verktyg. Först så ville de att alla skulle betala för det, men ingen ville betala för det, så nu försöker de tvinga oss att använda det i alla appar istället, För att nu var de såhär, okej, ingen vill betala för det, vi vill ju ha folks data. Så låt oss bara tvinga de användare att släppa det fritt. Ja, som sagt, jag vet inte hur många gånger man har hört det här med att om nånting är gratis, så betalar du ändå nånting och ofta ser du din data. Exakt. Ja, nej men så vi får se om de hinner i kapp Copilot och Cursor då. För företag kostar Gemini Code Assist fortfarande dock 54 dollar i månaden. Tack för den här genomgången. Väldigt bra påläst, jag slipper läsa nyheter. Varsågod. Jag kommer tänka på att vi borde ha tagit upp någonting om allting som varit med Firefox. Har du hört någonting om det? Ja, men jag orkar inte prata mer. Jag dricker vatten så får du berätta. Jag har inte alls förberett någonting, men jag har läst lite om det. De har uppdaterat sina Terms and Conditions nu och i princip första versionen sa ju mer eller mindre Alltså, vad du skriver och vad du ser för jobbigt. De ska väl förmodligen också göra någon form av AI-tränning eller något, kan jag gissa? Ja. De har ju blivit uppköpta också, men folk har slagit bakut nu och letar efter alternativa browsers. Det finns ju typ Libre Wolf till exempel som är en fork av Firefox, om man nu vill fortsätta använda Firefox men inte sälja ut sin själ. Sen finns det ju massa andra alternativ. Är man fin med att köra på Chromium så förespråkar ju både du och jag ARK. Mm. Och ja, nej, det finns ju tusentals alternativ. Brave och massa obskyr alternativ som jag knappt ens har hört talas om. Ja, men det där är tråkigt för jag har inte hört om dem, att de erbjuder att du kan betala någonting och få slippa undan det. För att jag förstår att folk behöver tjäna pengar, och som privatperson, alltså jag vill inte heller betala 200 spänn för att använda en browser men att de kunde ha haft en modell såhär att betala, jag vet inte, 20 spänn i månaden. Så hade nog väldigt många gjort det. Ja, kanske. Jag har inte faktagranskat detta nu, men en stor anledning att de har mindre pengar är för att Google har slutat supporta dem. Vi fick ju en lyssnarfråga också som vi kan ta och bränna av kanske. Jag tänker att den är inte så jättelång. Det är från vår vän Kajetan Kazmerchuk, vars namn ni har hört många gånger. fixa felstavningar och så vidare, och att bara stäcklösa det som finns i en Jira-ticket och inget annat. Flera arbetsplatser har, fullt förståeligt kanske, en policy om att en PR endast får innehålla lösningen på en feature eller bugg och inget annat. Samtidigt vill man ju inte att koden ska förfalla för att det inte finns tickets gir för något litet man precis har hittat. Och att skapa en ticket får en prioriterad och kanske jag får återkomma till en senare är ju rätt omständigt om det handlar om till exempel namnet på en lokalvariabel som är felstavat. Har ni råkat ut för det delen? Alltså... –där en PR endast får innehålla lösningen och ingenting annat. –Jag har aldrig varit med om det. –Inte jag heller, faktiskt. Jag har hört det som att det skulle vara ett problem på det sättet. Att man bara får göra det. Sen kan jag förstå att man inte vill trycka in hur mycket som helst. att folk diskuterar det här i ett tid, men aldrig att det finns en strikt policy. Nej. Jag tycker bara det låter helt sjukt att man ska behöva göra en ticket av det och få den prioriterad och att den ska gå igenom hela den här ordinarie processen. Det känns som nånting man borde diskutera fram. Jag vet inte. Kanske nånting att ta upp på ett retro och säga det här. Jag vill kunna lösa småsaker för att jag är helt med på det här scout-tänket, jag tycker det är klockrent. Ser man nånting som börjar fixas, om det bara är ett stavfel eller nån lintgrej som har blivit fel eller nånting, då har jag bara gjort det samma PR, om det är relaterat till det kontextet. till lite olika variabler och sånt, då kanske det är mer liksom, okej, kanske ska jag göra ett eget, men då hade jag ändå bara gjort det i en egen PR och inte skickat in den samtidigt. Ja, det kan bli tjafs så att man är oense för att jag, jag håller, jag tycker att man ska stada upp när det är så här ditt stav fel. Jag förstår absolut problematiken att du behöver refakturera en funktion, eller du ändrar kanske en massa stafel. Jag vet inte, du ändrar så här saker som känns små, men i och med att den här koden inte har tester, så kan du ha faktiskt, jag vet inte, introducera något nytt stav fel och det upptäcks inte förrän du har tryckt ut det, jag vet inte. Det skulle ju kunna vara till exempel om man använder så här magic strings. Och det är ju mycket lättare att detta trylla mellan stolarna om man bara gör det lite under radarn. radarn. Det blir ingen spårbarhet och du inte har en ticket att koppla dig till på det sättet. Jag har jobbat med en utvecklare, som jag har väldigt stor respekt för, men som var väldigt snabb och typ så här upptäckte att shit, det här behöver göras om, för att man behöver underhålla sin kod. Man ser en halvt år senare och bara, men va fan, är det jag skrivit? Men som kände att det var en bra idé att passa på. Och kanske gjorde en till PR då ens. Alltså försökte vara ändå såhär noga att det skulle vara lätt att code reviewa. Men jag minns att vi hade en QA-person då, som ibland gick i taket över det här, för att det var så här, Nu har du ju gjort massa ändringar. Hur vet du att det här funkar? Och det här smögs alltid mer, liksom, lite för QA-personen. För att den här utvecklaren visste ju att QA-personen skulle fråga. Och så var det också störigt för vissa som utvecklare. Ibland kom det en väldigt stor banne, men det här är bara en refakturering. Jag bara liksom gör om hela strukturen. Jag gör det mer kanske funktionellt, eller jag vill inte att det ska vara funktionellt, för det är så svårläst. Och då att sitta och granska det som kollega utan en ticket. Alltså det var ändå såhär, det kunde vara svårt. Ja men det känns som en lite större grej. Man kanske kan ha nån slags, är det mer än två minuters jobb att implementera och mer än femton minuter att testa, ja då får det bli en ticket av det. någon utvecklare, la upp en ticket och bara drog in den i typ developing och körde. Det tycker jag också är nice. Det låter som onöre bromskloss att man ska sitta och prioritera upp det och så vidare, och sen prioriteras det inte upp och så glömmer man bort den. Om det ändå är så litet att man gör det i samband så bara köra liksom. Ja. Enda gången jag skulle vilja lägga det i någon prior backlog är om det är ett större arbete. Ja. Ja, om det är en dagarbet eller en halvdag ens, då kan du inte bara smyga in den lite, så där. Ja, precis, för då sitter det ändå att ha prioriterat ner någonting annat. Man behöver ändå vara transparent mot alla i teamet och ha respekt för peon vars ansvar är att se till att det mest prioriterat jobbas på. Det gör det här, det går ganska snabbt, det tar bara en halv dag. Men de vill ändå ha lite koll och förstå vad som händer och varför ni lägger tid på det här. Ofta brukar man lägga in lite padding för maintenance-tasks och sånt. när man gör sprintplanning och sådant. Så jag tycker ändå att utrymmet borde finnas där. Det håller jag med om. Vad tror du? –Säger du? –Nu men, jag känner igen ett scenarii och det är såhär... Det här stör mig faktiskt väldigt mycket, bland saker som stör mig. Jag borde skriva upp det här någonstans, så att vi gör ett avsnitt om saker som stör mig med andra utvecklare. Säg att det är såhär... Ja men det tar 20% av din sprinttid att göra det här. Eller ens 50. Så de sätter sig på kvällarna och gör det här. Okej. Och påstår sedan, även om du har varit med om det, men jag har varit med flera gånger från olika personer. Det är så roligt att de gör det på kvällen. Men det är ändå någon som ska jobba med detta sedan och testa det. Definitivt har vi folk som lyssnar som gör så här. Ja, tror jag har gjort så någon gång också. Jag känner mig lite smått träffad. Du bara trycker in saker och åtminstone det. Någonting, bara såhär kommunikation typ, men ja, vad vill du säga? Nej, jag skulle säga, tror du det är en bra idé att man har någon generell typ förbättrings-ticket som man kan koppla till? Och att man då, för de flesta verktyg så kan du ju ändå skriva en kommentar till, alltså kopplingen till din ticket från din PR. För då löser man ju lite det här att man måste gå in och ska skapa en ticket och det är ändå lite extra overhead som blir ganska mycket om du bara ska fixa något litet stavfel eller liknande. Eller blir det bara en slasktratt? Nej, stafel är absolut samma på request. Alltså, som sagt, när det inte är sådana farliga stafel att man ändå råkar ta sända åt. Jag tycker det ska vara refekturering i PR-en, men jättegärna att det är en egen kommitt. Ja men typ, alltså så här, det här är denna sprintens förbättrings-ticket. Hit kan du koppla liksom små grejer. Jag vet inte själv om jag gillar det riktigt nämligen, men jag funderar på att det skulle kunna vara en lösning. Ja men är det så smått, alltså då tycker jag att det ska vara kopplat till, alltså då kan det ändå vara på den originalticket. Men absolut, är det någonting så här, oh, så så råkade jag se en helt annan fil, att det var någonting. Ja, jag vet inte. Å ena sidan blir det såhär, men gud vad bajsnördig man ska vara. Man kan inte ens fixa någonting litet utan att man ska skapa en ticket. Men på andra sidan är det inte så jobbigt att göra det, bara klicka på det plus och skriva en titel och varför man fixade det. Det beror på hur mycket du ska skriva. Vissa säger super strekt att du ska skriva given, when, then och as a developer. Nej, det är det man inte ska skriva. As a customer you want to... Refactor the system. Så. Men absolut att det ändå ibland byker upp då man måste Det är ju ett bra sätt att kunna undvika att man behöver göra sådana reflektureringar. Ja. som går att automatisera och är det en breaking change, ja, men då får man ha... Jag vet att vissa team hos oss där de får in breaking changes, De har typ en person som är ansvarig att ta hand om Breaking Change varje vecka. Så att alla vet att vilken är Madeleine som kommer att titta på det. Ja, faktiskt. Men det är schysst. Men jag tycker också i allt det här så får man väl ta in lite så här hur kritiskt är vårat system? Har du många miljoner användare, och går det ner på grund av ett stav fel så förlorar du så extremt mycket på det, så kanske man bör fundera på att ta någonting i Noggrant. någonting liksom och sånt där det kan vara jättestora implikationer om nånting händer. Eller, ja, andra kritiska system. Ja, det kommer hända fel, men det kan nog vara skönt om det sker ett fel på grund av nåt stafel. Det är ändå såhär, att du hade en ticket, att du skrev varför du gjorde det. Det kan nog kännas lite bättre ändå, att man gjorde så pass rätt, att man bara kunde. Hellre det än att det kommer fram att man har smugit om någonting och så har det blivit fel, då är det ju lite skämmigt. Alltså, då står man ju där med, ja, typ att man, såhär, bypassar the policies eller folk som är såhär, du vet, har en buddy som alltid godkänner en självomgest, alltså så. Man står i skambron. Ja, men man får fundera på hur viktigt en system är. Ja, hoppas det var en intressant diskussion iallafall. Om ett annat så var ju dina nyheter intressanta. Absolut. Men ja, vi hörs nästa vecka då. Det gör vi! Ha det bra allihopa!