Jag minns att vi hade en QA-person då som ibland gick i taket över det här för att Det var så här, nu har du ju gjort massa ändringar. Hur vet du att det här funkar? och det här smöks alltid mer Liksom lite för QA-personen Du lyssnar på Developers, podden där du får följa med oss, Sofia och Madde, på allt inom mjukvaruutveckling. Vi träffar spännande gäster, testar nya teknologier, söker inspiration och tar upp aktuella ämnen. Jag vet inte varför det har blivit så svårt att starta podden. Vi startar så här. Vi stelar. nej men det är bara så här jag sliter på saker att säga, känns det som. fast vi har en massa saker att säga men de kanske är såhär rants utanför techvärlden. Ja. eller? Ah nej jag vet inte Jag var såhär, du bara frågade, har du något att säga? Ja men jag hade kalas för min ettåring idag. det är inte heller så intressant att prata om Ska vi inte bara hoppa direkt in och tacka våra stjärnsupportrar på Patreon så sen snackar vi om vad vi ska snacka om. Jo, jag måste spara luft i mina lungor för det är så mycket teknigheter jag vet inte ens hur jag ska orka läsa igenom det här okej, men då kör vi och tackar våra skärmsupportrar på Patreon. Det är alltså de som stöttar oss med 100 kronor eller mer per månad som får sitt namn uppläst här. Och det är Alicia, Anders Nylund, Björn Jonsson, Dag Grunell, Kajetan Kazimierzak, Lars Nyström, Molly Haglund, Oskari, Penn Åtby, Selim Jorthal, Stig Hest och Thomas Nilsson. Tack så mycket till er och tack till alla andra som stöttar oss på Patreon och på alla andra olika sätt som ni supportar oss. Ja, det var någon som köpte merch häromdagen. blir jag så här glad när det droppar in Lite då och då. Exakt. och ibland ser jag någon på jobbet som har vår merch som inte går fram och skryter om det varje dag utan bara såhär, ja men jag har er merch Ja, fint. Ja, nej men låt oss hoppa in i nyheter. du har använt Create React App Eller hur? Jag vet ju det. det vet du att jag har men det är såhär, det kanske inte alla som har gjort det om man är ganska ny så kanske man redan vet att man inte bör använda Create Direct App. Eller om man inte är frontenutvecklare. Eller Mighty Fronten-utvecklare. Men vad ska vi säga då? Create Direct App var Alltså jag vet inte För att det fanns det kom nog precis när jag började jobba med react så att Det kändes som en game changer. men jag vet inte hur pass mycket game changer det var det kom 2016 och du tog bort så mycket av krånglet med att hålla på med boilerplate-kod för att konfigurera ett helt reakt projekt du vet såhär webpack, configs och Babel, Configs du har ju ändå haft du har väl haft projekt där ni inte har den har fått hålla på med allt jox. Ja, precis. då var det helt enbyggd webbpack och Det var ju nice för att där är vissa saker i Create React App som inte kommer med automatiskt. Till exempel server-side-rendering och lite sånt som vi då behövde i den applikationen. Men ja, det är jobbigt att underhålla det också. sen kan man ju ejecta sin creature actor och göra, göra, göra också så att man kan ju komma runt det Och då hamnar man i något helvete mellanstadies. Ja, jag minns att du har klagat på att vi skulle migrera till webpack 5 och bla bla bla Ja, det tog jättedålig tid. ja, det tog bort mycket av helvetet som innebär av att jobba med frontend ger inte in i det för det är inte så jättemycket bättre nu ska jag säga. på den röntgen. men det var i alla fall jag skulle säga att det var synonymt med att starta ett projektprojekt Alltså det var såhär, det är självklart att när du startar ett projektprojekt självklart använder du Create React App för att sätta upp allting och jag ser det fortfarande idag när folk lämnar in sin typ kod till techintervjuer, att folk fortfarande använder det, det är en sån vana man har. Även nu? Alltså med vitt och sånt? Ja, jag tror att vissa vet inte. Alltså vissa har inte hört om att i alla fall, det de inte har hört om är att React-teamet slutade Det rekommenderade jag för ett tag sedan. och det blev väl såhär man slutade maintaina det projektet om man börjar där det kommer Men ja, det är det här som jag ska gå in på som är tjafsat här. Åh, alltid kill med käft. Ja, så det har varit tjafs. som du säger direkt upp så här har inte haft stöd för allting som är mer modern webb idag så det är inte chockerande att det läggs ner men det hände drama under 72 timmar efter att de offentliga gjorde att det verkligen ska läggas ner helt. så jag ska sammanfatta dramat React-teamet gjorde ett blogginlägg där de uppmanade utvecklare att överge Create React App och att man ska gå över till Next.js, React Router, eller till och med bygga ett eget ramverk från grunden. Inte rekommenderat. inte rekommenderat, men liksom Det är de här sakerna du kan göra, men jag vet att de har varit såhär, men håll inte på att bygga från grunden, så de är väldigt använd typ Next.js jag tror att du har sett det kanske på hemsidan när man går in så är det såhär använda Next.js kanske de också rekommenderar och nästan ingen nämnde alltså det heter vitt men de flesta tror jag säger vite Folk som inte snackar franska Ja så att någon kommer hata att vi säger vite. Hur säger du det? jag säger vitt Du säger vitt. jag har ju läst franska i fyra år men ja Ja, okej, men vissa kallar det vitt. i alla fall, vitt är jättepopulärt ibland, React-utvecklare. typ alla som körde CraigDirectApp som firerade på att det inte var toppen längre, gick över till vitt. Det var svinenkelt att gå över till det toppen liksom. men ingen typ nämnde att så här, ett alternativ är att du går över till vitt, det är jätteenkelt så att många utvecklare blev väldigt arga och menade att React-teamet var partiska mot vitt och förstår inte hur communityt faktiskt arbetar. Jag skulle säga att de flesta har ju gått över till WIT istället för att migrera alltid till Next.js. Det känns mycket mer alltså visst, det är ju kanske bra om du ska bygga någonting stort och robust men det är mycket mer du får på köpet som du kanske inte behöver alltid. nej så de var såhär de gick ju till och med så långt att de anklagade React-teamet för att vara köpta av Nu har han skrivit såhär av big framework. Men vadå? alltså eller vem ligger bakom NextGIS egentligen? det är ett företag som heter Versel och folk har kanske hört om det i olika sammanhang. De har ju så här cloud-tjänster. Hållstik, vad är det? Hosting. exakt, de kör hosting de bygger Next.js grej, det är typ såhär nu kan jag vara ute på utvatten så insatt egentligen, men det är många projektteamet som bidrar eller som har gått in och börjat jobba i Fairnext, IS-projektet och vice versa. De är väldigt sammankopplade, så det blir lite såhär. Det blir väldigt färgad. Jag håller faktiskt med om det. Så det här Twitter-sjafset höll på i några dagar och det var ganska underhållande i alla fall när man såg posterna från det Och React-teamet uppdaterade sitt blogginlägge och hade lite mer balanserade, nyanserade rekommendationer inklusive hur man kommer igång med vitt utan att behöva byta till ett ramverk som Next.js. så nu är freden återställd men i alla fall lite drama men jag hoppas att ni har fått budskapet mer sluta använda Create Direct App. det är liksom officiellt dött. Ja men alltid kul med lite drama. Men det var ju fint att de blev vänner till slut. Ja, frid och frid på jorden. nästa grej inte så relevant för oss för oss utvecklare kanske, men Amazon du vet såhär, typ alla stora företag har jobbat med AI, alltså LLM släppt någonting för att vara relevanta Men sådana har ju inte gjort det. nej, men de gör ju så mycket annat alltså jag tänker de har ju hela AVS som är typ en av de världsledande cloud providers och sånt, behöver man verkligen doppa fingrarna i alla syltburkar. Absolut. absolut, alltså har du har du Azure AVS eller går i cloud så hovar du in pengar på att inte göra någonting i princip. Absolut, de har haft olika typer av LLM-tjänster i det. Men de har ändå inte riktigt varit med i gamet som någon som gör modeller, eller hur? Nej, nej, nej. Jag vet att de har haft Code Whisper, men ändå, de har ju sin assistent Alexa. Och det är väl där man förväntar sig att någon slags utveckling ska ske. och nu äntligen så har de rullat ut Alexa Plus eller i alla fall presenterat det, jag vet inte jag tror att man kan signa upp det och det finns olika erbjudanden om du har Prime eller inte, det är väl spännande alltså alla de här Siri och Alexa är helt värdelösa, du kan ju i princip inte göra någonting förutom att typ sätta på musiken eller släcklampan Men samtidigt med det sagt så är det liksom miljoner och miljoner människor som ändå interagerar med Alexa och säger starta musiken eller släck lampan. jag vet inte vad det kommer leda till Men det är väldigt många användare som de introducerar features för. Och det kanske kommer utvecklas så man kommer förstå hur folk använder det mer och mer. men ja, de som varligt hade de en demo där de liksom visade helt så här exempel som är helt det är ingen som gör så här i verkligheten Det var typ såhär, nu kan du använda AI för att beställa en Uber åt din kompis när din kompis kommer till flygplatsen. Gud vad krångligt scenario. alltså det enda jag vill kunna med typ Siri är att öppna min anteckning som heter handlingslista och lägg till smör när jag står med händerna fulla och bakar och insatsmötsligt. typ. Det går, men det är skitjobbigt att säga det. Ja, men den fattar inte handlingslista, alltså nej jag har i alla fall inte lyckats Vi hoppas att den är bättre men jag är ju väldigt trött på de här exemplen som ingen i världen någonsin skulle göra. folk beställer sin Uber själv inte ett verkligt case men det visar att de ger sig ändå in i det här ja men, AI-agenter Alltså försöka göra någon slags agent som alla andra håller på med. Vi får se vad som händer där. Någonting som är mer roligt för oss Visual Studio Code. känner du till och använt kanske? aldrig hört jag vet inte det är ju såhär, det är ju jätteväl typ alla var det nästan, eller? Det tror jag nog. om man inte jobbar med något väldigt obskurt språk, men det är en ID för används kanske oftast av Alltså nu vågar jag inte säga det Det känns som att javascript-människor använder Visual Studio Code. alltså min sambo frågade mig typ när han började plugga vad är skillnaden på Visual Studio och Visual Studio Code så sa jag typ såhär, ja men Visual Studio, det är typ för backend.net Official Studio Code är typ för fronten alltså så om man ska hårdra så har han sagt det på sin lia Och då hade de skrattat åt mig. och typ så, nej, det har hon och jag bara såhär Vadå vad är det alltså? Det var väl rimligt för någon som är ganska ny. Alltså detta var ju precis när man pluggade, det var väl inte så dum förklaring eller? Men vad menar de att Eller hur hade du fel? Ja, nej jag vet inte. Alltså klart du kan köra andra saker i Visual Studio Code också. Ja, men det är hemskt och du gör inte det. nej exakt Ja, nej. Sign out i alla fall. Ja, avskina folk föreslår det. förlåt min chef du är bäst, men liksom Han var så här, behöver du verkligen, vad jag skulle ha, IntelliJ? För jag var, behöver du verkligen IntelliJ? Det går ju att köra i Visual Studio Code. Jag var så här, jag tänker inte sitta med ett sådant full-fledged språk när jag har en full-fledged ID och sitta i Visual Studio Code med några skitextensions. nej, jag är benägen att hålla med Ja, det är för att vi är färgade av Visual Studio som har allt. okej, vi har förklarat vad det är nu. På ett dåligt sätt och folk skrattar säkert antagligen igen men i alla fall, de har ett väldigt populärt tema. Man kan ha väldigt många olika teman i den här Idin som heter material. och det är för att man har upptäckt inte misstänksam kod så materialsteam var väldigt väldigt populärt tema Det hade mer än 6 miljoner användare och det är inspirerat av Googles material design. Men nu är det alltså helt borta. Jaha, men vadå? Alltså, teman, det är ju typ bara lite JSON. Vad kan man slänga in för farlig kod där i? eller ställ inga frågor. Okej, men last words liksom. nej nej men jag bara såhär funderar Men visst, det är klart, har man ont uppsåt så kan man ju lyckas göra det med det mesta. jag är så oskyldig och naiv Hur skulle man kunna göra det i ett tema? bra fråga, jag har aldrig byggt ett tema någon som har byggt ett tema vet ju såklart men den ändrar väl inte bara eller ändrar man bara färg color, black för det de sa var i alla fall att Det de sa var att det fanns mycket typ kod som har onödiga beroende till saker. de körde några så här child-processer i VS Code vilket var väldigt märkligt för ett vanligt tema. nej, jag vet inte så det är jag för borta Då kan jag tipsa om världens bästa tema som jag använder på rubbet. Och det är ju Nord. Jag tycker det är så snyggt. Ja just det, det använder du. Ja men det gör jag. Jag använder typ Sublime, någonting koffe eller något sånt där. det lite såhär brun-orange typ va? Lite sublime associerar jag med orange i alla fall. det är ett färgglatt tema men det är lite så här Det är lite mognare skulle jag säga. det är bara skönt för ögonen Det är inte så skrikigt, men det är ändå färgglött. om någon vill så kan vi göra ett avsnitt om alla teman vi har och all vår uppsättning och allting som vi använder men då får ni önska det För annars kommer jag tycka det är pinsamt. Entropic också AI-stuff de har släppt en ny version av sin populära LLM version 3.7 som bygger vidare. Eller? Just den här alltså modellen heter Sonnet Ja, men det gör väl alla kronor eller? Ja, som används, jag vet inte om Claude är det fina namnet, jag fattar inte. det kanske är som antropik är som open AI och sen har du köttgibbet som är cloud och sen är sonnet själva modellnamnet som typ 01. Förmodligen. Ja jag orkar inte tjejer gissar saker här för det blir alltid fel säkert. Men det låter jätterimligt, i alla fall det har kommit en ny ny version av den och Just Sonnet 3.5 har ofta enligt de flesta benchmarks toppat ligan i att vara en bra kodassistent och generera kod. och den dök upp i juli 2024 Men enligt Antropix så ska 3.7 vara ännu bättre. inte jättekonstigt det ska vara bättre, men det ska vara bättre på kodning och specifikt frontend-utveckling. Och det som en del av det här så satsar man också på ett verktyg som heter Cloud Code som är en AI-agent som konkurrerar med liknande lösningar som typ Devin och andra sådana här AI-verktyg Är det bara jag som tycker att Claude Code inte var ett bra namn? Jag tycker inte alls att det ligger bra i munnen. Ja, såklart överhuvudtaget, ja det blev lite för mig, det blev lite äckligt Det är så klart kallad Ja, klart. Ja, jag vet inte. det låter som en butler men det var okej Faktiskt, det här kan inte vara. Alla de låter lite så. jag vet inte, det är ingen som har lyckats med ett produktnamn här, alltså Gemini kanske är det minst äckliga Vadå är kött GPT äckligt? Nej men jag vet inte, det är bara så dåliga produkter O-one, eller vilken modell ska jag använda idag? 01 eller O3 Mini eller 4-0, eller det är så dåligt bara såhär produktpresentation med det sagt också De pratar om att jag vill veta att det är jobbigt. du ska inte behöva sitta och välja bland sex modeller utan de ska typ automatiserar det att när du skriver en prompt så väljer de den bästa modellen för det du vill göra. Det vore ass bra. I alla fall den tidiga versionen, Sonnet 3.5, den blev ju jätte framgångsrik. Och de flesta IDs med generativ AI-funktioner började använda den. men för GitHub Copilot som du använder i Visual Studio och så dröjde det med stödet för det. Då hann andra Id som typ Cursor Windsurf plocka upp användare i och med att de tilläts som 1,3.5. Men den här gången så har alla stora utvecklingsverktyg inklusive GitHub Copilot redan lovat stöd för 3.7. På tal om GitHub Copilot så släpper GitHub Copilot sin Code Review-funktion. det ska bli spännande för det du har pratat om Du vet att, ja men, så här en AI som kanske kan kolla igenom din pull request. Ja det är skitbra Ja, alltså att kunna ha åtminstone en första granskning innan man skickar upp den för att ha en peer. Eller hur? Jag har inte testat den och jag fick mejl precis typ tror igår att min Copilot-licens har uppgraderats med den här funktionen för vi betalar för det på jobbet. så det ska bli jätteintressant att testa så vad den gör är att den ger feedback på pull requests går igenom och hittar uppenbara buggar. Den summerar ändringarna, den föreslår vilka tester du kan ha den rätta stavfel vi så klagade på stavfel för något avsnitt sedan Men ja, det är jäkligt coolt. Sen tänker jag att den lär ju inte fatta kontexten särskilt bra. Alltså själva featuren du implementerar, hur det hänger ihop Alltså det borde den ju inte kunna. men allt annat sånt här liksom att det ska ja, vad står fel och liknande och skriver en tester åt den också. eller bara säger den typ såhär du borde testa detta för det har ju varit sjukt nice om den bara, du borde testa det här Här har du ett unitest. Jag vet inte om vi får testa. Det stod bara att den föreslår tester. det kanske inte är bra att få sånt Ja Nej men Ingen aning men det låter ju som ett bra tillägg men som du säger den kanske inte kan skriva en bra på rukostsammanfattning åt den för att den saknar kontext, det blir kanske såhär jag har ändrat detta, jag har ändrat detta okej, men det är inte intressant om jag inte vet varför du ödrar detta. är det typ för dåligt på att använda bra domänsspråk. Ja det är också ett kan man känna att man borde bli bättre på det och vidare till Google Vi måste ju nämna alla stora aktörer, eller hur, innan vi är klara. Google släpper sin kodassistent Gemini Code Assist gratis för privatpersoner. Tidigare så kostade den 22,8 dollar i månaden. Otroligt särkonstig. Specifikt. De hoppas väl på att råka in fler användare. det här har de gjort med alla sina AI-verktyg. Först så ville de att alla skulle betala för det, men ingen ville betala för det så nu försöker de tvinga oss att använda det i alla appar istället för att nu var de såhär, okej, ingen vill betala för det vi vill ju ha folks data så låt oss bara tvingar de användare typ släpper det fritt. Ja, som sagt jag vet inte hur många gånger man har hört det här att om någonting är gratis så betalar du ändå någonting och oftast är det din data. exakt ja, nej men så Vi får se om de hinner i kapp Co-pilot och Cursor då. För företag kostar Gemini Code Assist fortfarande dock 54 dollar i månaden. det är ganska dyrt Eller vad kostar Co-Pilot? för företag vet jag faktiskt inte det är antagligen också dyrare för det är typ såhär, din data processas bara på en dedikerad server som de inte har tillgång till, de får inte träna på din data så där förstår jag att man får betala eller ja, vänta nej men här står det Jag vet inte, det här är ju Priser i dollar kan ju vara annorlunda på vår marknad men här står det att Gemini Code Assist kostar 54 och GitHub CodePilot Enterprise kostar 39 dollar. så den är dyrare men ja Det var nyheterna. Tack för den här genomgången. Väldigt bra påläst. Jag slipper läsa nyheter. Ja, varsågod Jag kommer att tänka på bara såhär, vi borde ju ha tagit upp någonting om allting som har varit med Firefox. Har du hört någonting om det. Ja men jag orkar inte prata mer. jag dricker vatten så får du berätta Jag har inte alls förberett någonting, men jag har läst lite om det. de har ju uppdaterat sina terms and conditions nu och i princip första versionen sa ju mer eller mindre. Vi kommer samla in all data du matar in i input-fält eller i vad du skriver över surfarjobbet. De ska väl förmodligen också göra någon form av AI-träning eller något kan jag gissa. de har ju blivit uppköpt också så att det är mer men folk har ju slagit bak ut nu och letar efter alternativa browsers. Det finns ju typ LibreWolf till exempel vet jag som är en fork av Firefox om man nu vill fortsätta använda Firefox men inte sälja ut sin själ sen finns det ju massa andra alternativ är man fin med att köra på Chromium så förespråkar ju både du och jag ARK och Och ja, nej, det finns ju tusentals alternativ. Brave och massa obskyra alternativ som jag knappt ens har hört talas om. det där är tråkigt för jag har inte hört om dem erbjuder att du kan betala någonting och få slippa undan det Jag förstår att folk behöver tjäna pengar. och som privatperson jag vill inte heller betala 200 spänn för att använda en browser, men att de kunde ha haft en modell betala 20 spänn i månaden så hade nog väldigt många gjort det. Ja, kanske. jag hörde, jag vet inte jag har inte faktagranskat detta nu, men att en stor anledning att de har mindre pengar är för att Google har slutat supporta dem. Google har ju supportat ganska många browsers mot att då få ha Google som default sökmotor och nu när de inte längre får göra det i och med de här lagarna som har trätt i kraft Så det är EU som har förstört detta. skiter de i att supporta för att då får de inte hit någonting av det Okej, så det är vårat fel, europeerna. Ja, exakt. Skilj på det. Okej, ja men då då ska jag inte säga något. fan vad de måste vara trötta på vi fick ju en lyssnafråga också som vi kan ta och bränna av kanske. Jag tänker att den är inte så jättelång. Det är från vår av en kajetan Kazmierczak som vars namn ni har hört många gånger. Han frågade såhär Hur löser man bäst konflikten mellan att vara lite av en scout och alltid lämna koden i bättre skick än när man fann den? Det vill säga fixa eventuella små saker när man ser dem, uppdatera paket, fixa felstavningar och så vidare. och att bara sträcklösa det som finns i en Jira-ticket och inget annat. Flera arbetsplatser har, fullt förståeligt kanske, en policy om att en PR endast får innehålla lösningen på en feature eller bugg och inget annat. Samtidigt vill man ju inte att koden ska förfalla för att det inte finns tickets i Jira för något litet man precis har hittat. Och att skapa en ticket, få den prioriterad och kanske återkomma till den senare är ju rätt omständigt om det handlar om till exempel namnet på en lokal variabel som är felstavat. har ni råkat ut för er dilemmat? Alltså det är bara såhär reagerade först på var att Flera arbetsplatser har en policy där en PR endast får innehålla lösningen och ingenting annat. Jag har aldrig varit med om det. Inte jag heller faktiskt Jag har liksom inte hört det som att det skulle vara ett problem på det sättet. Att man bara får göra det. sen kan jag ju förstå att man inte vill trycka in hur mycket som helst. Man får ju ha lite sunt förnuft då, men ibland så är det, ja ibland blir det ju att man måste lägga ihop vissa saker. Det har jag i alla fall gjort mig skyldig till. Ja, men jag definitivt vad med att folk diskuterar det här i ett team. Men aldrig att det har funnits en strikt policy. jag tycker bara det låter helt sjukt Att man ska behöva göra en ticket av det och få den prioriterad och att den ska gå igenom hela den här ordinarie processen. Det känns som någonting man borde diskutera fram. kanske någonting att ta upp på ett retro och säga det här att jag vill kunna lösa små saker. För att jag är helt med på det här scout-tänket. Jag tycker det är klockrent. Alltså såhär, ser man någonting som bör fixas om det bara är ett stavfel eller någon lintgrej som har blivit fel eller någonting då hade jag bara gjort det i samma PR om det är liksom relaterat till det kontextet men om man ser att det kanske är en funktion som skulle behöva refektoreras för att den är lite otydlig. Man kanske vill bryta upp det jättelånga till lite olika variabler och sånt. då kanske det är mer liksom okej Kanske ska göra ett eget. men då hade jag ändå bara gjort det i en egen PR och inte skickat in den samtidigt. Ja det är väl här det kan bli tjafs och att man är oense Jag tycker att man ska städa upp när det är såhär, det är ett stav fel men jag förstår absolut problematiken att du behöver refakturera en funktion eller är det typ såhär, du ändrar kanske stavfel jag vet inte, du ändrar så här saker som känns små, men i och med att den här koden inte har tester så kan du ha faktiskt introducerar något nytt stav fel och det upptäcks inte förrän du har tryckt ut det jag vet inte det skulle ju kunna vara till exempel eller om man använder såhär magic strings istället för att du har en konstant eller någonting i den enum så jämför du ett strängvärde och så har du ju plötsligt bytt strängvärdet och det är ju mycket lättare att detta trilla mellan stolarna har man bara gjort lite under radarn. Det blir ingen spårbarhet och inte har en ticket att koppla det till på det sättet Jag har jobbat med en utvecklare som jag har väldigt stor respekt för. Men som var väldigt snabb och upptäckte att shit, det här behöver göras om. för att man behöver underhålla sin kod man ser en halvt år senare och bara men vad fan är det jag har skrivit men som kände att det var en bra idé att passa på Och kanske gjorde en till PR då ens. alltså försökte vara ändå så här noga att det skulle vara lätt att code-reviewa, men jag minns att vi hade en QA-person då som ibland gick i taket över det här för att Det var så här, nu har du ju gjort massa ändringar. hur vet du att det här funkar och det här smögs alltid mer Liksom lite för QA-personen för att den här utvecklaren visste ju att QA-personen skulle fråga. Och så var det också störigt för vissa, alltså som utvecklare ibland kom det En väldigt stor. det här är bara en refakturering Jag bara liksom gör om hela strukturen. jag gör det mer kanske funktionellt eller jag vill inte att det ska vara funktionellt för det är så svårläst Och då att sitta och granska det som kollega utan en ticket. alltså det var ändå såhär det kunde vara svårt Ja, men det känns som en lite större grej. Man kanske kan ha någon slags. är det mer än två minuters jobb att implementera och mer än 15 minuter att testa. Ja, då får det bli en ticket av det. sen vet jag inte jag har ändå varit Scrum Master och jag skulle inte det är ett sur om någon utvecklare la upp en ticket och bara drog in den i typ developing du tycker också Det låter som om hon har ett bromskloss Så att man ska sitta och prioritera upp det och så vidare. och sen prioriteras det inte upp och så glömmer man bort den. som det ändå är så litet att man gör i samband så vad kör enda gången skulle jag liksom vilja lägga dig i någon priobacklog är att om det är ett större arbete om det är en dags arbete eller en halv dag ens då snackar vi liksom nej då kan du inte bara smyga in den lite sådär Ja precis för då sitter du ändå och har prioriterat ner någonting annat. Man behöver ändå vara transparent mot alla i teamet och ha respekt för pion vars ansvar är att se till att det mest prioriterade jobbas på. det är säkert helt okej för pen men man behöver liksom lyfta det och prata om det och det kan vara sjukt störande som utvecklare, man är såhär ni måste göra det här, det går ganska snabbt Det tar bara en halv dag. men de vill ändå ha lite koll och förstå vad som händer och varför Varför ni lägger tid på det här? ofta brukar man ju lägga in lite padding för typ maintenance tasks och sånt. När man gör sprint planning och sånt. Så jag tycker ändå att utrymmet borde finnas där. det håller jag med om Men vad tror du... Vad säger du? nej men jag känner igen ett scenario och det är såhär det här stövar mig faktiskt väldigt mycket bland saker som stör mig. Jag borde skriva upp det här någonstans så att vi kan göra ett avsnitt om saker som stör mig med andra utvecklare. säg att det är såhär Ja, men det tar 20% av din sprinttid att göra det här. Eller ens 50. och så säger vi att det här tar lite längre tid Är det lugnt att vi lägger in den här backloggen? och den här utvecklaren säger nej jag vill göra det nu eller säger det här kommer inte ta så lång tid Så det de gör istället är att de tycker det här är rätt roligt arbete. Så de sätter sig på kvällarna och gör det här. och påstår sedan även om du har varit med där, men jag har varit med det flera gånger från olika personer. det är så roligt att de gör det på kvällen Men det är ändå någon som ska jobba med detta sen och testa det. Granskare? alltså de personer är oftast så här nej men det är inga problem för någon och jag har suttit och gjort det här själv och hur kan du inte vara typ Du vet, hur kan inte alla bara vara tacksamma att jag sitter och gör det här på min fritid? men jag vill inte ha det så jag vill inte att det sitter folk och kodar hela nätterna. Alltså visst, jag hade gjort det någon gång men då försöker jag Jag vill inte att folk ska se att jag har gjort det. det ska inte stressa teamet att här sitter någon och kodar på kvällarna av intresse då har du på mig ett hobbyprojekt då Mm, det stör mig. Och definitivt har vi folk som lyssnar som gör så här. Jag tror jag har gjort så någon gång också. jag känner mig lite småtträffad Jag har ju träffat det själva också någon gång. Men det finns vissa som är väldigt så alltså med större grejer Så att de inte förstår att det är stort. och de insisterar på, du vet De låter inte den här podcasten vara i draft. att såhär För det är fint. Gör det på kvällen. Lägg upp en pull request och skapa en ticket. Så här lugna ner folk. Jag så preppar dem lite. jag vet att det är störigt men gör det här lilla extraarbetet för folk så att du inte bara trycker in saker åtminstone och det. Någonting bara såhär kommunikation typ Men ja, vad ville du säga? nej, jag skulle säga Eller tror du det är en bra idé att man har någon generell typ förbättringsticket? alltså som man kan då kopplat till och att man då För de flesta verktyg kan du ju ändå skriva en kommentar kopplingen till din ticket från din PR. för då löser man ju lite det här att man måste gå in och du ska skapa en ticket det är ändå lite extra overhead som blir ganska mycket om du bara ska fixa något litet stavfäll eller liknande. eller blir det bara en slasktratt. nej alltså stavfel absolut samma pull request Alltså, som sagt, när det inte är när det inte är farligaste avfel att man ändå råkar att ta sönderåt. Jag tycker det ska vara refakturering i PR men jättegärna att det är en egen kommit, du vet här har jag gjort arbetet och här har jag stödat upp Absolut. Men prata om man kunde ha en ticket som är generell. Som du kopplar till. Som bara slasktrattar allting. Ja men typ. Alltså så här, det här är denna sprintens förbättringsticket. hit kan du koppla liksom små grejer. jag vet inte själv om jag gillar det riktigt nämligen. Men jag funderar på att det skulle kunna anlösning. Ja men är det så smått, alltså då tycker jag det ska vara kopplat till alltså då kan det ändå vara på den originalticket men absolut är det någonting såhär så råkade jag se en helt annan fil att det var någonting jag vet inte å ena sidan blir det såhär Men gud vad bajsnödig man ska vara. Man kan inte ens fixa någonting i litet utan att man ska skapa en ticket. men å andra sidan är det inte så jobbigt att göra det. Bara klicka på plus att skriva en titel och vad man fixade typ. Det beror på hur mycket du ska skriva. Alltså vissa är ju superstrikt att du ska skriva liksom given, when, then och typ as a developer Nej, det är det man inte ska skriva. As a customer you want to refactor the system det är det som Det är ju vajsnödigt. nej det får man ju inte göra nej men jag vet inte vad vi har i vårat team och det har vi haft i andra team är att vi har en feature eller Epic i Jira som heter typ så här technical improvements, depth, ideas och kommer du på någonting så kan du lägga in en task där för framtida grejer eller så när du ser någonting nu, nu, nu så har du en feature och lägger den under liksom Ja, så hade vi också mitt senaste team. Det där kunde vara verkligen högt och lågt. man måste rensa ut de här också har jag märkt, för ibland ligger det bara saker som ingen någonsin tar upp. Men jag tycker Det är schysst att skriva en rad så här. För det är för en själv. för man själv minns inte vad jag har skapat att den här tickade för ett halvt år sedan och det finns bara en titel med Every Factor blablabla service och så bara, men vad är det jag vill reflektuera i det? Varför? och så är det ingen annan som kan plocka upp den nej man ska inte önska så mycket man glömmer Alltså har vi svarat på ett omens? Frågan var ju, har ni råkat ut för er dilemmat? Ja, eller jag har absolut haft diskussioner. Jo. sen har jag, alltså de senaste sju åren har ju jobbat i samma projekt och där var vi hade vi turen att ha väldigt förstående, PO men absolut att det ändå ibland dyker upp då man måste prioriterade mot något annat men en sista sak jag tänkte på kanske. För han nämnde ju också typ såhär uppdatera paket till exempel mycket kan man ju faktiskt automatisera Man kan ju ha dependabot och sånt för att uppdatera paket. då blir det ju inte lika mycket att du själv måste hitta tiden och trycka in det nu kommer jag ihåg att jag läste någonstans i någon tråd när vi pratar om Linters att Caten sa att han hatade linters. Jag blev så här chockad och bara Jag tycker man hatar linters. det är ju ett bra sätt att kunna undvika att man behöver göra sådana refektureringar ja nej men det är mycket som går att automatisera är det en breaking change ja men då får man ha Jag vet att vissa team hos oss där han får in breaking changes de har typ så här en person som är ansvarig att ta hand om Breaking Change varje vecka så att alla vet att Den här veckan är det Madeleine som kommer Jag är on breaking change duty. Ja, faktiskt. Så det är ju skysst. Men jag tänker också i allt det här så får man väl ta in lite såhär, hur kritiskt är vårat system. alltså har du många miljoner användare och att såhär går det ner på grund av ett stav fel så är det liksom, du förlorar så extremt mycket på det Så kanske man bör fundera. Ja, eller om det är en bank eller någonting liksom och sånt där det kan vara jättestora implikationer om någonting händer. andra kritiska system det kommer hända fel men det kan nog vara skönt om det sker ett fel på grund av något stavfel man gjorde det är inte såhär att du hade en ticket att du skrev varför du gjorde det Alltså det kan nog kännas lite bättre ändå att man gjorde så pass bara rätt Att man bara kunde. hellre det än att det kommer fram att man har smugit om någonting och så har det blivit fel, då är det ju lite skämmigt alltså då står man ju där med ja typ att man bypassade policies eller folk som är såhär, du vet har en buddy som alltid godkänner för request så är skämbron Ja, man får fundera på hur viktigt ens system är. hoppas det var en intressant diskussion iallafall om inte annat så var ju det en nyhet och intressanta. Absolut Men ja, vi hörs nästa vecka då Det gör vi. Ha det bra allihopa.