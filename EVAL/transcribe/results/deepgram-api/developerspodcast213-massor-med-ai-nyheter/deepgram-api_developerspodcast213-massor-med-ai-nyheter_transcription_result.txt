Jag minns att vi hade en KA person som ibland gick I taket över det här för att det var så här. Nu har du gjort massa ändringar. Hur vet du att det här funkar? Det här smögs alltid med lite för Kivra-personen. Du lyssnar på Developers, podden där du får följa med oss, Sofia och Madde, på allt inom mjukvaruutveckling. Vi träffar spännande gäster, testar nya teknologier, söker inspiration och tar upp aktuella ämnen. Jag vet inte varför det blir så svårt att starta podden? Vi startar här. Vi stela. Men det är bara att jag sliter på saker att säga känns det som. Fast vi har massa saker att säga, men de kanske är så här rants utanför techvärlden. Ja, nej, jag vet inte. Jag har ett kalas för min ettåring idag. Det är inte heller så intressant att prata om. Ska vi inte bara hoppa rakt in och tacka våra skäner borta på Patreon så sen snackar vi om vad vi ska snacka om. Jo, jag måste spara luft I mina lungor för det är så mycket tekniker att så här. Alicia, Anders Nylund, Björn Jonsson, Dag Kronell, Kaiathan Kasimirchak, Lars Nyström Haglund, Oscari, Per Notby, Cely Mjukhall, Stig Häst och Thomas Nilsson. Tack så mycket till er och tack till alla andra som stötte oss på Patreon. Patreon och på alla andra olika sätt som ni supportrar oss. Ja, det var någon som köpte merch häromdagen. Blev jag så glad när det shopparade in lite då och då. Ibland ser jag någon på jobbet som har vår merch som inte går fram och skryter om det varje dag utan bara så här, men jag har er merch. Det är najs. Låt oss hoppa in I nyheter. Du har använt Jag vet inte för att det fanns. Det kom nog typ precis när jag började jobba med react så att det kändes som en game changer. Men jag vet inte hur pass mycket game changer det var. Det kom 2016 och det tog bort mycket av krångligt med att hålla på med all boiler plait kod för att konfigurera ett helt reaktor projekt. Det vet jag. Webbhack, konfig och babel konfig. Du måste ju. Du har ju ändå. Har väl haft projekt där ni inte har Creetct app när ni fått hålla på med allt jox. Ja, precis. Men det är jobbigt att underhålla det också. Sen kan man ju ersätta sin createct och då hamnar man I något helvete mellanstadie. Jag minns du har klagat på typ så vi skulle migrera till webbPAC 5 och blablabla. Det tog jättebra tid. Men det tog bort mycket av helvetet som innebär av att jobba med fronten. Ge er inte in I det för det är inte så jättemycket bättre nu ska jag säga. Jag skulle säga att det var synonymt med att starta ett rect projekt. Det var så här, det är självklart att när starta ett rect projekt. Självklart använder du Create rect app för att sätta upp allting och man ser det. Jag ser det fortfarande idag när folk lämnar in sin. Kod till tech intervjuer, att folk fortfarande använder det. Det är en vana man hör. Även nu, alltså med vitt och sånt. Ja, jag tror att vissa vet inte. Vissa har inte hört om att I alla fall. Det de inte hört om är att React teamet slutade ju rekommendera det för ett tag sedan och det blev väl så här. Man slutade maintaina det projektet och man började rekommendera. Ja, det är det här som jag ska gå in på som är tjafsat här. Alltid kul med tjafs. Ja, så det har varit tjafs. Som du säger, korrekt, korrekt up. Har inte haft stöd för allting som är mer modern webb idag, så det är inte chockerande att det läggs ner. Men det hände drama typ under 72 timmar efter att de offentliggjorde att det verkligen ska läggas ner helt. Så jag ska sammanfatta drama. React teamet gjorde ett blogginlägg att överge Kreativa och att man ska gå över till Next GSct router eller till och med bygga ett eget ramverk från grunden. Inte rekommenderat, inte rekommenderat, men liksom detta. Det är de här sakerna du kan göra. Men jag vet att de har varit så här, men håller inte på att bygga det från grunden. Men de är väldigt så här använd upp Next. Jag tror att du har sett det kanske på hemsidan när man går in. Amen ex. Ex. Ex. Eregaz kanske de också rekommenderar. Nästan ingen nämnde. Det heter vitt, men de flesta tror jag säger vite. Folk som inte snackar franska. Någon kommer hata att vi säger vite. Men hur säger du det? Du säger vitt. Ni har ju läst franska I 4 år, men jag. Men vissa kallar det vit. Ja, I alla fall. Vitt är jätte populärt bland react utvecklare, typ alla som körde CREct direct app som fick reda på att det inte var toppen längre, gick över till vitt. Det var svinenkelt att gå över till det. Toppen liksom. Men ingen typ nämnde att ett alternativ är att du går över till vitt. Det är jätteenkelt så att många utvecklare blev väldigt arga och menade att reakttivet var partiska mot vitt och förstår inte hur communityt faktiskt arbetar. Jag skulle säga att de flesta har ju gått över till vitt istället för att migrera allting till Next. Yes, det är mycket mer. Är det Det är ett företag som heter Vercell. Folk har kanske hört om det I olika sammanhang. De har ju cloud-tjänster. De kör hosting, de bygger en XES. Grede, det är typ så här, nu kan jag vara ute på ytvatten, så inser jag inte, men det är nog många I React teamet som bidrar eller som har gått in och börjat jobba I Förnex, TIS-projektet och vice versa någonting, de är väldigt sammankopplade. Så det blir lite så här, det blir väldigt färgat. Jag håller faktiskt med om det. Så det här Twittershafsat höll på I några dagar och det var ganska underhållande I alla fall när man såg posterna från det. Men till slut lugnade ner sig och reakt teamet uppdaterade sitt blogginlägg och hade lite mer så här balanserade nyanserade rekommendationer, inklusive hur man kommer igång med. Vitt utan att behöva bita till liksom ett ramverk som XTS. Så nu är freden återställd, men I alla fall lite drama. Men jag hoppas att ni har fått budskapet med er sluta använda Creat Ract up. Det är officiellt dött. Men alltid kul med lite drama. Men det var fint att det löste sig att de blev vänner till slut. Ja, frid och fröjd på jorden. Nästa grej. Inte så relevant för oss utvecklare kanske, men Amazon. Alla stora företag har jobbat med AI, alltså LLM släppt någonting för att vara relevanta I AI. Amazon har inte gjort det. Men de gör ju så mycket annat. Jag tänker om man ju hela AVS som är typ en av de världsledande Cloud priders och sånt. Behöver man verkligen doppa fingrarna I alla syltburkar? Absolut, absolut. Har du Azure AVS eller Google Cloud så hovvar du in pengar på att inte göra någonting I princip. Absolut, de har haft olika typer av LLM-tjänster I det. Men de har ändå liksom inte riktigt varit med I gamet som någon som gör modeller, eller hur? Nej, nej, nej. Och vi vet, de har haft, vad heter den här, codewhisper, men ändå. De har ju sin assistent Alexa och det är väl där man förväntar sig att någon slags slags utveckling ska ske. Och nu äntligen så har de rullat ut Alexa plus eller iallafall presenterat det. Tror att man kan signa upp det och det finns olika erbjudanden om du har prime eller inte. Det är väl spännande. Alla de här Siri och Alexa är helt värdelösa. Nu kan jag I princip inte göra någonting förutom att typ sätta på musiken eller släcka lampan. Men samtidigt med det sagt så är det liksom miljoners miljoner människor som ändå interagerar med lex och säger starta musiken eller släck lampan. Jag vet inte vad det kommer leda till, men det är väldigt många användare som de introducerar features för och det kanske kommer utvecklas så man kommer förstå hur folk använder det mer och mer. Men de som vanligt hade de en demo där de visade helt exempel som är helt, det är ingen som gör så här I verkligheten. Det var typ så här, men nu kan du använda AI för att beställa en Uber åt din kompis när din kompis kommer till flygplatsen. Krångligt scenario. Det enda jag vill kunna med typ Siri är öppna min anteckning som heter handlingslista och lägg till smör när jag står med händerna fulla och bakar och insattssmör slut. Det går, men det är skitjobbigt att säga det. Ja, men den fattar inte handlingslista. Jag är väldigt trött på de här exemplen som ingen I världen någonsin skulle göra. Folk beställer sig nu själv, inte ett verkligt case, men det visar att de ger sig ändå in I det här AE-agenter, alltså försöker göra någon slags agent som alla andra håller på med. Får se vad som händer där. Någonting som är mer roligt för oss, Visual Studio Code känner du till och använt kanske? Aldrig hört. Jag vet inte, det är väl så här. Det är jätteväl typ alla varje nästan om, eller tror jag nog. Om man inte jobbar med något väldigt så obskyrt språk, men det är en ID för används kanske oftast av Alltså, nu vågar inte jag säga det. Det känns som att flest Javaskript människor använder vi körstyrcode code. Min sambo frågade mig när han började plugga vad är skillnaden på Visual studio och Visual studio code? Så sa jag typ Visual studio är typ för Backend. Net och Visual studio code är typ för frontend. Så har han sagt det på sin LIA och då hade de skrattat åt mig. Och typ nej, det har hon typ sagt. Och jag bara så här, vad jag skitt, det var väl en rimlig för någon som är ganska ny. Alltså, detta var ju precis närmare och pluggade. Det var inte så dum förklaring. Men vad menar de att, eller hur hade du fel? Nej, nej, jag vet inte. Såklart du kan köra andra saker I Visual Studio Code också. Ja, men det är häftigt och du gör inte det. Nej, exakt. Nej, signa not I alla fall. Jag avskyr när folk föreslår det. Förlåt min chef, du är bäst. Behöver du verkligen Intellig? Det går ju köra I Visual Sturecode. Jag tänker inte sitta med ett sånt fullflögd språk när jag har en fullflögd id och sitta I Visual Sture cob med skit extentions. Nej, jag är benägen att hålla med. Ja, men det är för att vi är färgade av Visual studio som har allt. Vi har förklarat vad det är nu på dåligt sätt och folk skrattar säkert antagligen igen. Men I alla fall, de har ett väldigt populärt tema. Man kan väldigt många olika teman när den här. Den här som heter Material och det är för att man har upptäckt inte. Mistingsam kod. Som material I en var väldigt, väldigt populärt tema. Det hade mer än 6000000 användare och det är inspirerat av Googles material design. Göra det med det mesta. Jag är så oskyldig och naiv och bara hur skulle man kunna göra det temat? Ja, alltså bra fråga har aldrig byggt tema. Någon som har byggt tema vet ju vad det är, men den ändrar väl inte bara Eller ändrar man bara liksom färg liksom Color black? För det de sa var att det fanns mycket typ kod som har onödiga beroende till saker. De körde några child processer I VSCode, vilket var väldigt märkligt för ett vanligt tema. Jag vet inte, så det är för borta. Då kan jag tipsa om världens bästa tema som jag använder på rummet och det är Nord. Jag tycker det är så snyggt. Just det, det använder du. Vad använder jag? Jag använder typ supplyme, någonting, koffein eller något sånt där. Bryme, associerar jag med orange I alla fall. Det är det. Det är ett färglärt tema med det lite så här, lite mognare skulle jag säga. Det är bara skönt för ögonen. Det är inte så skrikit, men ändå färglärt. Om någon vill så kan vi göra ett avsnitt om alla teman vi har och alla vår uppsättning och allting som vi använder. Då får ni önska det, för annars kommer jag tycka det är pinsamt. Och allting som vi använder. Då får ni önska det, för annars kommer jag tycka det pinsamt. Entropic, också AI-stuff. De har släppt en ny version av sin populära LM version 37. Just den här modellen heter Sonnet. Men det är väl alla som används. Jag vet inte om klar är det fina namnet bara. Det kanske är som entropic är som OpenAI och sedan har du kött GPT som är klar och sedan är sådannet själva modell namnet som typ ON. Förmodligen. Jag orkar inte tjej gissa saker här för det är väl inte fel säkert. Men det låter jättedimligt ifall det har kommit en ny ny version av den och just Sonnet 35 har ofta enligt de flesta benchmark toppat I att vara en bra kodassistent och generera kod. Den dök upp I. Juli 2024, men enligt Antropics så ska 3007 vara ännu bättre. Inte jättekonstigt att det ska vara bättre, men det ska vara bättre på kodning och specifikt frontdöende utveckling. Och det som en del av det här så satsar man också på ett verktyg som heter Cloud Code som är en AI agent som konkurrerar med liknande lösningar som typ Devin och andra såna här verktyg. Jag är bara som tycker att Cloud Code inte var ett bra namn. Inte alls det ligger bra I munnen. Ja, så klart. Ja, det blev lite äckligt. Jag vet inte. Det låter som en butter. Men det är faktiskt. Alla dem låter lite. Jag vet inte. Det är ingen som lyckas med ett produkt namn här. Gemna kanske är det minst äckliga. Vad är chatt GPT EC? Nej, vi vet inte vad så dåliga produkten. O one eller vilken modell ska jag använda idag? O one eller O3 mini eller for O eller De pratar om att jag vill veta att det är jobbigt. Du ska inte behöva sitta och välja bland liksom 6 modeller utan de ska typ automatisera det att när du skriver en prompt så väljer de den bästa modellen för det du vill göra. Det vore bra. I alla fall, den tidiga versionen, Sony 35 blev ju jätteframgångsrik och de flesta IDs med generativ AI funktioner började använda den. Men för GitHub Copilot som Som du använder I Visual studio så dröjde det med stödet för det. Då hann andra ID som typ curser, winsurf. Upp användare I och med att de tillats sådan ett 35. Men den här gången så har alla stora utvecklingsverktyg, inklusive GitHub, redan lovat stöd för 37. På tal om GitHub Copilot så släpper GitHub sin code review funktion. Det ska bli spännande för det har du har pratat om. Du vet att en AI som kanske kan kolla igenom din på request. Alltså kunna åtminstone en första granskning innan man skickar upp den för att en peer. Eller hur? Jag har inte testat den och jag fick mejl precis typ tror igår att min coopy licens har uppgraderats med den här funktionen för jag har liksom vi betalar för det på jobbet. Ska bli jätteintressant att testa. Så vad den gör är att den ger feedback på Puruquest, typ går igenom och hittar uppenbara buggar. Den summerar ändringarna, den föreslår vilka tester du kan Den rättar stavfel, klagade på stavfel från något avsnitt sen. Men ja, det är jäkligt coolt. Sen tänker jag att den lär ju inte fatta kontexten särskilt bra. Alltså själva. Fet churn du implementerar, hur det hänger ihop. Alltså det borde den ju inte kunna. Men allt annat sånt här, att det ska vara stavfel och liknande. Skriver den, testar åt den eller bara säger den typ så här du borde testa detta för det har varit skjut nice om den bara, du borde testa här det här. Här har du ett unittest. Vi får testa. Det stod bara att den liksom föreslår tester. Nej, men ingen aning. Men det låter ju som ett bra tillägg. Men som du säger, den kanske inte kan skriva en bra purkost sammanfattning åt den för att den saknar kontext. Det blir kanske så här Jag har ändrat detta, jag har ändrat detta. Okej, men det är inte intressant om jag inte vet varför du ändrade detta. Är du så bara för dålig på att använda bra domänspro? Det är också ett Man känner att man borde bli bättre på det. Och vidare till Google. Vi måste ju nämna alla stora aktörer eller hur hinner vi klara? Google släpper sin kodassistent Gemini code Assist gratis för privatpersoner. Tidigare så kostade den 22.8 dollar I månaden. Otroligt särkonstig. Specifikt. De hoppas vi på att råka in fler användare. Det här har de gjort med liksom alla sina AI verktyg. Först så ville de att alla skulle betala för det, men ingen ville betala för det. Så nu försöker de tvinga oss att använda det I alla appar istället för att nu har de så här okej, ingen vill betala för det. Vi ville folks data så låt oss bara tvinga de användare det typ släppa det fritt. Ja, som sagt, jag vet inte hur många gånger man har hört det här med att om någonting är gratis så betalar du ändå någonting och oftast ger din data. Exakt. Ja, men så vi får se om de hinner ikapp Copilot och kurser. För företag kostar Gemini code Assist fortfarande dock 50 54 dollar I månaden. Det är en svikt. Eller vad kostar Copilot? Företag vet jag faktiskt inte. Det är antagligen också dyrare, för det är typ så här, din data processas bara på en dedikerad server som de inte har tillgång till. De får inte träna på din data. Där förstår jag att man får betala. Eller här står det. Jag vet inte, det här är ju priser I dollar, det kan ju vara annorlunda på vår marknad, men här står det att Ggem Icode Assist kostar 54 och GitHub CoPilot enterprise dollar, så den är dyrare. Men ja, det var nyheterna. Tack för den här genomgången, väldigt bra påläst. Jag slipper läsa nyheter. Jag kommer tänka på att vi borde ju tagit upp någonting om allting som varit med Firefox. Har du hört någonting om det? Ja men jag orkar inte prata mer. Jag tycker allt den så får du berätta. Jag har inte alls förberett någonting men jag har läst lite om det, de har ju uppdaterat sina terms and conditions nu. I princip första versionen sa ju mer eller mindre vi kommer samla in all data du matar in I liksom inputfält eller I vad du skriver och surfar rubbet. De ska versionen också göra någon form av AI-träning eller något kan jag gissa. De har blivit uppköpta också så att det är mer. Men folk har ju slagit bak ut nu och letar efter alternativa browsers. Det finns ju typ så här Libray Wolff till exempel vet jag som är en folk av Firefox. Om man nu vill fortsätta använda Fagrafox men inte sälja ut sin själ. Det finns ju massa andra alternativ. Är man fine med att köra på Chromeium så förespråkar ju både du och jag och ja nej, det finns ju tusentals alternativ. Brave och massa obskyrura alternativ som jag knappt ens hört talas om. Det där är tråkigt för jag har inte hört om dem, att de erbjuder att du kan betala någonting och få slippa undan det. Jag förstår att folk behöver tjäna pengar. Och som privatperson, alltså jag har inte heller betalat 200 spänn för att jag använder browser, men de kunde haft en modell så här, betala 20 spänn I månaden. Så hade nog väldigt många gjort det. Ja, kanske. Jag hörde, jag vet inte, jag har inte faktagranskat detta nu, men att en stor anledning att de har mindre pengar är för att Google har slutat supporta dem. Skiter de I just supporta för att då får de inte ut någonting av det. Okej, så det är vårat fel? Ja, exakt, skil på det. Okej, men då ska jag inte säga något. Farmar, de måste vara trötta på oss I USA. Vi fick ju en lyssnarfråga också som vi kan ta och bränna av kanske Jag tänker den är inte så jättelång Det är från vår vän Kahathan Kasimirchak, vars namn ni har hört många gånger Han frågar såhär: Hur löser man bäst konflikten mellan att vara lite av en scout och alltid lämna koden I bättre skick än när man fann den? Det vill säga fixa eventuella små saker när man ser dem uppdatera paket, fixa felstavningar och så vidare. Och att bara sträcklösa det som finns I en giraticket och inget annat. Flera arbetsplatser har fullt förståeligt kanske en policy om att MP PR endast får innehålla lösningen på en feature eller bugg och inget annat. Samtidigt vill man ju inte att koden ska förfalla för att det inte finns tickets gira för något litet man precis har hittat. Och att skapa en ticket, få den prioriterad och kanske jag får återkomma till den senare är ju rätt omständigt om det handlar om till exempel namnet på en lokal variabel som är felst. Har ni råkat sa? Det jag bara reagerade först på var att flera arbetsplatser har en policy där man Där en PR endast får innehålla lösningen och ingenting annat. Jag har aldrig varit med om det. Inte jag heller faktiskt. Jag har liksom inte hört det som att det skulle vara ett problem på det sättet att man bara får göra det. Sen kan jag förstå att man inte vill trycka in hur mycket som helst, man får lite sunt förnuft då. Men ibland blir det att man måste lägga ihop vissa saker. Det har jag I alla fall gjort mig skyldig till. Definitivt var med att folk diskuterar det här I ett team. Men aldrig att det finns en strikt policy. Jag tycker bara det låter helt sjukt att man ska behöva göra en ticket av det och få den prioriterad och liksom att den ska gå igenom hela den här ordinarie processen. Det känns som någonting man borde diskutera fram. Alltså, jag vet inte, kanske någonting att ta på ett retro och säga det här. Jag vill kunna lösa små saker för att jag är helt med på det här scouttänket. Jag tycker det är klockrent. Ser man någonting som bara fixas och om det bara är ett stavfel eller någon lint grej som har blivit fel eller någonting, har jag bara gjort det samma PR om det är relaterat till det kontexten. Men om man ser att det kanske är en funktion som skulle behöva faktureras för att den är lite otydlig, man kanske vill bryta upp det jättelånga till lite olika variabler och sånt, då kanske det är mer okej. Ska göra ett eget, men då hade jag ändå bara gjort det en egen PR och inte skickat in den samtidigt. Ja, det är väl här. Det kan bli tjafs så att man är oense för att jag tycker att man ska städa upp när det är så här ditt stav fel. Men jag förstår absolut problematiken att du behöver fakturera en funktion. Eller är det typ så här? Du ändrar kanske massa stavfel. Jag vet inte, du ändrar saker som känns små, men I och med att den här koden inte har tester så kan du Jag introducerar något stavfel och det upptäcks inte förrän du har tryckt ut det. Jag vet inte. Det skulle ju kunna vara till exempel om man använder så här magic strings. Alltså att du istället för att du har en konstant eller någonting I den enum så jämför du ett strängvärde och så har du plötsligt bytt strängvärde. Det är mycket lättare att detta trillar mellan stolarna om man bara gör lite under radarn. Det blir ingen spårbarhet och du inte har en ticket att koppla det till på det sättet. Nej, för jag har jobbat med en utvecklare som jag har väldigt stor respekt för, men som var väldigt snabb och typ så här upptäckte att shit, det här behöver göras om för att man behöver underhålla sin kod. Man ser en halv år senare och ba, men vad fan är det jag skriv? Men som kände att det var en bra att passa på. Och kanske gjorde en till PR då ens. Alltså försökte vara ändå så här noga att det skulle vara lätt att code Rovio. Men jag minns att vi hade en QA person då som ibland gick I taket över det här. För det var så här. Nu har du gjort massa ändringar. Hur vet du att det här funkar? Och det här och det här smögs alltid mer liksom lite för QA-personen för att för att den här utvecklaren visste ju att QA-personen skulle frågas. Och så var det också störigt för vissa som utvecklare. Ibland kom det. En väldigt stor bad. Men det här är bara en fakturering. Jag bara liksom gör om hela strukturen. Jag gör det mer kanske funktionellt eller jag vill inte att det ska vara funktionellt för det så svårläst. Och då att sitta och granska det som kollega utan en ticket. Alltså det var ändå så här, det kunde vara svårt. Ja, men det känns som en lite större grej. Man kanske kan någon slags liksom är det mer än 2 minuters jobb att implementera och mer än 15 minuter att testa? Ja, då får det bli en ticket av det. Sen vet jag inte, jag har ändå varit scram master. Jag skulle inte bli sur om någon utvecklare la upp en ticket och bara drog in den I typ developing och körde. Det tycker jag också är najs. Det låter som onödig bromskloss att man ska sitta och prioritera upp det och så vidare och sen prioriteras det inte upp och så glömmer man bort den. Enda gången jag skulle vilja lägga dig I någon priobacklog är att om det är ett större arbete, om det är en dags arbete eller en halv dag ens, då snackar vi liksom, nej, då kan du inte bara smyga in den lite så där. Ja, precis. För då sitter du ändå och har prioriterat ner någonting annat. Man behöver ändå vara transparent mot alla I teamet och respekt för Pion vars ansvar är att se till att det mest prioriterar jobbas på. Är säkert helt okej för Pn, men man behöver liksom lyfta det och prata om det. Och det kan vara typ så här, och det kan vara sjukt störande som utvecklare. Man är så här, ni måste göra det här, det går ganska snabbt, det tar bara en halv dag. Men de vill ändå lite koll och förstå vad som händer och varför varför ni lägger tid på det här. Ofta brukar man ju lägga in lite padding för typ maintenence tasks och sånt. Jag tycker ändå utrymmet borde finnas där. Det håller jag med om. Jag känner igen ett scenario och det är så här, det här stör mig faktiskt väldigt mycket bland saker som stör mig. Borde skriva upp det här någonstans så att vi gör ett avsnitt om saker som stör mig med andra utvecklare. Säg att det är så här, men det tar 20 procent av din sprint tid att göra det här. Ens 50. Men och så säger vi att det här tar lite längre tid I det lugnt att vi lägger in den här backloggen. Den här utvecklaren säger nej, jag vill göra det nu eller säger det här kommer inte ta så lång tid. Så det de gör istället är att de tycker det här är rätt roligt arbete så de sätter sig på kvällarna och gör det här och påstår sedan, jag vet inte om du har varit med om det, men jag har varit med det flera gånger från olika personer. Det är så roligt att de gör det på kvällen. Men det är ändå någon som ska jobba med detta sedan och testa Granskade. De personerna är oftast men det är inga problem för någon och jag har suttit gjort det här själv. Och hur kan du inte vara typ? Hur kan inte alla vara tacksamma att jag sitter och gör det här på min fritid? Men jag vill inte det så. Jag vill inte. Jag vill inte att det sitter folk sitter och kodar hela nätterna. Jag har väl gjort det någon gång, men då försöker jag liksom Jag vill inte att folk ska se att jag har gjort det. Det ska inte stressa teamet att här sitter någon och kodar. Kvällarna av intresse. De höll på med ett hobbyprojekt då. Det stämmer. Definitivt har vi folk som lyssnar som gör. Jag tror jag har gjort så någon gång också. Jag känner mig lite småttträffad. Jag är träffad själv också någon gång. Men det finns vissa som är väldigt så med större grejer. Att de inte förstår att det är stort och de insisterar på Du vet att de låter inte den här purrukosten vara I drau. För det är fine. Gör det på kvällen, lägg upp en purrukost och skapa en ticket. Så här lugna ner folk. Alltså preppa dem. Vet att det är störigt, men gör det här lilla extraarbetet för folk så att du inte bara trycker in saker. Åtminstone det. Någonting. Vad säger kommunikation. Ja, vad vill du säga? Jag skulle säga, Tror du det är en bra att man har någon generell typ förbättringticket som man kan koppla till och att man då För de flesta verktyg så kan du ju ändå skriva en kommentar till kopplingen till din ticket från din PR. Då löser man ju lite det här att man måste gå in och du ska skapa en ticket och du ska alltså det är ändå lite extra overhead som blir ganska mycket om du bara ska fixa något litet stavfel eller liknande. Eller blir det bara en liksom slask tratt? Nej, stavfel absolut samma pull request. Alltså som sagt, när det inte är farliga stavfel att man ändå råkar ta sönder något. Jag tycker det ska vara en fakturering I PRN, men jättegärna att det är en egen Jag har gjort arbetet och här har jag städat. Men prata om man kunde en ticket som är generell som du kopplar till. Som bara slasktrattar allting. Ja, men typ alltså så här. Det här är denna sprintens förbättring. Hit kan du koppla liksom små grejer. Jag vet inte själv om jag gillar det riktigt nämligen, men jag säger att det skulle kunna vara en lösning. Ja, men är det så smått, då tycker jag det ska vara kopplat till. Då kan det ändå vara på den originalticket. Men absolut är det någonting så här, åh så råkade jag se en helt annan fil att det var någonting. Ja, jag vet inte. Och en ena sida blir så här, men gud vad bajsnödig man ska vara. Man kan inte ens fixa något litet utan att man ska skapa en ticket. Men å andra sidan är det inte så jobbigt att göra det. Bara så här: Klicka väl plus och skriva en titel. Och varför? Vad har man fixat Det beror på hur mycket du ska skriva. Vissa är supersträckt att du ska skriva. Som heter typ så här technical Improyment, stept idees. Och kommer du på någonting så kan du lägga in en task där för framtida grejer. Eller så när du ser någonting nu, nu, nu så har du en feature att lägga den under. Så hade vi också mitt senaste team. Där kunde vara verkligen högt och lågt. Ja, man måste rensa ut de här också har jag märkt. För ibland ligger det bara saker som ingen någonsin tar upp. Men jag tycker det är schysst att skriva en rad så här, för det är för en själv, man själv minns inte. Jag har skapat den här artikeln för ett halvt år sedan och det finns bara en titel som är reffaktter bla bla service. Vad är det jag ville refuktera I? Så varför? Och så är det ingen annan som kan plocka upp den. Nej, man ska inte önska hur mycket man glömmer. Alltså har vi svarat ketan ens? Frågan har ju, har ni råkat ut för dig dilemmat? Ja, eller jag har haft diskussioner. De senaste 7 åren har jag jobbat I samma projekt och där hade vi turen att väldigt förstående P. O. Men absolut att det ändå ibland dyker upp då man måste prioritera det mot något annat Men den sista saken jag tänkte på kanske Han nämnde också typ såhär uppdatera paket till exempel Mycket kan man ju faktiskt automatisera Man kan ju typ såhär, en enda-bot och sånt för att uppdatera paket Då blir det ju inte lika mycket att du själv måste hitta tiden och trycka in det och så Kommer jag ihåg att jag läste någonstans I någon tråd när vi pratade om Linters, att Kettan sa att han hatade Linters. Jag blev chockad chockad. Hur kan man hata Linters? Det är ju ett bra sätt att kunna undvika att man behöver göra sådana här flyktingareringar. Ja, men det är mycket som går att automatisera och är en breaking change, då får man Jag vet att vissa team hos oss där de får in breaking change, de har typ En person som är ansvarig att ta hand om breaking change varje vecka. Så alla vet att när veckan är det Madeleine som kommer. Ja, faktiskt. Så det är ju Men jag tycker också I allt det här så får man väl ta in lite så här. Hur kritiskt är vårat system? Alltså, har du många miljoner användare och att så här går det ner på grund av ett stavfel fel så är det liksom förlorar så extremt mycket på Kanske man bör fundera. Ja, eller om det är en bank eller någonting liksom och sånt där det kan vara jättestora implikationer om någonting händer. Ja, och det kommer hända fel. Men det kan nog vara skönt om det sker ett fel på grund av något stavfel man gjorde. Du ändå så här att du hade en ticket, att du skrev varför du gjorde det. Det kan nog kännas lite bättre ändå att du att man gjorde så pass rätt att man bara kunde. Hellre det än att det kommer fram att man har smugit om någonting och så har det blivit fel. Då är det ju lite skämmigt. Alltså då står man ju där med. Typ att man bypassade policies eller folk som är så här, du vet har en Buddy som alltid godkänner. En schysst. Man får fundera på hur viktigt ens system är. Hoppas det var en intressant diskussion I alla fall. Om inte annat så var dina nyheter intressant. Absolut. Vi hörs nästa vecka då. Det gör vi. Det bra allihopa. Hejdå.