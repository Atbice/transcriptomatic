Jag tror verkligen att om du knappar runt i det du utvecklar lokalt med tangentbordet och ser till att du kan komma åt allting. Du kan fylla i allting och du öppnas någon modal eller någonting så sitter fokus rätt och du hamnar inte plötsligt bakom modalen. När den stängs så är du kvar där du var, du behöver inte navigera genom hela jordhålet igen och att liksom bara slå igång en skönlösare i 45 sekunder och bara liksom, ja men det känns som att det Mejka känns för mig, då är mjukare förmodligen hyfsat sänds för andra. Målet är inte att man ska täcka 100 % av alla problem som kan uppstå, utan det är bara att få de lågt hängande frukterna, helt enkelt, utan att behöva göra det separat. Gör man det redan i den lokala utvecklingen, då kanske majoriteten av det som finns inom läskig lång kravlista som är liksom två kilometer lång. Det kanske är majoriteten av det redan löst. Hej och välkomna till Kodsnack. Jag heter Fredrik, som vanligt, och idag hemma med mig Johan. Hej Johan! Hej! Vem är du? Vad gör du? Jag är en utvecklare som jobbar på SBAB till vardags, där sitter jag sedan relativt nyligen i ett nystartat designsystemteam. Vi har varit där i ett antal år nu. Jag tror att vi är inne på det sjunde året. Jag har gjort lite annat under min tid. Jag tror att det är mitt tredje team. Eller jag vet att det är min tredje tid. Men ja, precis. Så det är lite det som vi sitter med och vi jobbar ganska mycket också med tillgänglighet. För det kom med ett nytt tillgänglighetskrav eller tillgänglighetsdirektiv just nu. Just det, så det tar upp väldigt mycket av inte bara vår uppmärksamhet utan hela utvecklingsorganisationens egentligen. Ja, så ni har ett designsystemteam. Var det så? Ja. Hur kom du till det? Har du varit inne på designspåret och kommit in på det teamet eller kommit från något annat spännande håll? Nej, alltså jag... Jag har väl varit intresserad av designspåret lite grann. En gång i tiden för en 15 år sedan så tror jag att jag trädde in i utvecklingsvärlden ifrån att ha lekt lite grann med design. Jag har nog ändå liksom, det ligger någonstans i ryggmärgen, även om jag inte är en designer eller u-läxare på det sättet då. Men jag tror väl att jag tycker ju att i de allra flesta tillfällen så tycker jag att den tekniska biten av det är det mest intressanta. En liten bakgrund kring det är att vi, vi har ju på jobbet då så är vi väl just nu så är vi cirka 20-25 stycken utvecklingsteam och jag har fått lite siffror här, 135 stycken utvecklare och testare där jag tror att det är ett par stycken. Ja, jag vet inte. Men majoriteten är ju utvecklare då. Vi sitter och jobbar på lite olika sätt och det ändrar ju sig lite över tid också, men man jobbar ju ganska autonomt och man jobbar i ganska många olika appar. Vi har haft lite olika sätt hur vi levererar från applikationer, både internt och externt och till privata kunder och företagskunder och allting sånt. Och det har varit väldigt många appar. De har ju en tendens att bli lite utdaterade. Kanske kopierar en lösning som man gjorde där och sen klistrar man in det i den nya öppen och ser man ändringarna där och så blir det inkonsekvent till släppt. Det var väl jämfört med så det började 2018, hur många år sedan det nu är, det började bli tre år sedan. Precis, jag skulle säga tre. Ja, jag skulle också se att det är 20-20 ändå samma år. Ja, men exakt. Nej men så då började vi lite inofficiellt helt enkelt. ett gäng utvecklare som satte lite olika utvecklingsteam, vi lyckades få att vi kunde sitta, typ en eftermiddag i veckan eller något sånt, Ja, men tar du med dig lite grann? Rent från allas eget intresse så att säga. Ja, man hade ju sett det här behovet och sen så tror jag att sedan dess så har vår design och UX-avdelning också växt ganska rejält. Men på den tiden så var det inte lika många. Nej. Men vi hade ju ändå rätt nära dialog med dem och de såg ju om några det här problemet. Det kändes verkligen som att det finns ingen röd tråd någonstans. Nej men så då började vi liksom bara se sig, men vad är det vanligaste? För vi har inte heller fått något kommittiment på att underhålla det här enligt något strukturerat. Nej, just det. Så då blev det så här, men väldigt mycket handlar det om formulär. Vi ska samla in data i ansökningsflöden och det är liksom man ska göra överföringar och allt vad man nu gör. Så vi började i den änden egentligen och bara försöka, vi vet inte nödvändigtvis vad som är rätt, vad som ser rätt ut, Men det viktigaste är kanske att det ser likadant ut. Vi gjorde ju ett litet bibliotek egentligen som vi distribuerade med internt internerna MPM Registry och sen så visste vi då att det kan ju, om vi fokuserar mer på API och inte tänker så mycket på att skylta med några detaljer kring look-en-fil så kan vi ju ändå ganska flexibelt uppdatera det över tid när vi vet mer om vad som är rätt visuellt. Så det var så det började och det har jag egentligen hållit på så sedan dess fram till Q2 i 2024. Så första april där i krokarna så satte vi officiellt igång ett team. Ja. Men det här projektet har ju levt eller projekt, jag vet inte vad man ska kalla det. Det har ju levt lite inofficiellt så det har ju varit såhär periodvis har man hunnit jobba lite mer på det och periodvis har man inte hunnit jobba någonting alls på det. Det har ändå varit i användning hos ett antal team sedan 2018. Så det var helt enkelt ett NPM-paket med UV-komponenter. Ja exakt. Ganska begränsad dokumentation i anslutning till det då. Sättet som det skiljer sig idag är ju att vi, det är ju ett helhetsgrepp mer kring. Designsystem omfattar ju mer än bara kod och design egentligen också, man kan ju dra det till att det kan handla om copywriting, bildmaner och alla möjliga grejer. Och det där har vi ju inte riktigt en röstning för ännu, men På sikt hoppas vi att vi ska kunna centralisera det, även om vi inte själva står för innehållet nödvändigtvis så ska man inte behöva liksom, Vart finns det här? Finns i sjön, typ. så får man läsa upp det, utan att man mer kanske kan ha en samlingsplats där man hittar dokumentation och relevant information som utvecklar designer. Man kanske kan hitta till relaterade resurser också. Jag behöver inte dem är skrivna där. Ja, för det var ju en sån grej, intressant grej. kände jag när jag började fundera inför vårt snack, just det där med hur stort eller litet paraply är ordet designsystem? Det känns som att på ett sätt så kan det bli hur brett som helst nästan. Och det finns väldigt mycket nyttigt som man kan baka in under det här, som du säger, hur skriver man text? Det kanske inte är det första man tänker på, men det är ändå en grej som dyker upp när det gäller att få saker att se ut och kännas på samma sätt över en massa olika saker man bygger. Ja, jag tror att du och jag jobbar ju på relativt liknande utmaningar, bygger en del användarupplevelser i fronten, applikationer. kan man ju precis och ett helt gäng team som gör saker som... Ja, men en idolvärld skulle nog se ut och fungera ganska exakt likadant i många fall. Inte alla, men många. Det här med koppit till exempel, det beror ju lite på. Jag tror att en intressant grej som vi kanske kan komma in på är hur vi arbetar och samarbetar med vår UX-designavdelning nu och de som är faktiskt dedikerade resurser i vårt nya team. Men just det. Historiskt så känns det som att det inte är helt ovanligt att det blir lite vattenfalligt. Ja. Vi kanske sitter i en pipeline där man har så mycket i pipeline att utvecklarna sitter helt fokuserade på det. Och då blir det lite så att typ affärsanalytiker och UX:are kanske då springer före på nästa grej. Och så blir det lite mer av en överlämning än vad man kanske skulle önska alla gånger. Då är det ju ganska klassiskt att man till exempel, Men vad händer om det blir fel då? Om man nu försöker skicka in det här och det inte funkar för någon down stream-tjänst där nere, Då är det ganska vanligt att man inte nödvändigtvis har tänkt på det i typ en designleverans. kvent och att man behöver inte vara expert på copywriting, utan man kan hitta lite resurser och sen räcker det kanske en bra bit på vägen. Jag tror att man kan fånga en del lågt hängande frukter på att vi kommer framåt utan att vi behöver fråga någon annan avdelning, hjälp, typ. Var det jätteintressant att utmana det här med amakommunikationen och de här flödena av att få saker gjorda av tid. Som du sa precis i början där, det är väldigt lätt att man använder det där läget. Ja men ibland blir det lite gjort och sen går en jättelång period och ingenting händer för att Nej, men man har 17 andra saker som Man kanske både är och framförallt bedöms som viktigare just då. Ja, och det kanske man... Vi har ju hållit på med det här nu. Vi konstaterade att det var mer än tre år. Det känns som att få ett commitment på att kunna göra det här också, där har ju det här tillgänglighetsdirektivet varit. Det var ju lite det som var... Ja men det var det som fick skjuts i den prioriteringen. För det är ju också så att det är ju en utav våra stora fokusområden är ju just tillgänglighet att försöka dels baka in tillgänglighet där vi kan. om det är då i vårt komponentbibliotek. Tack. Sen finns det ju delar av tillgängligheten om hur ett helt flöde hänger ihop som är svårt att Ja, just det. Automatisera. Men det är ju en av de grejerna som jag tror fick organisationen att komma med på, Nu startar vi ett team kring det. Jag har nog personligen velat ha ett team kring det i alla de här åren nu. Nu har det egentligen skett, för det är ju så att tillgänglighet är ju viktigt. Men jag vet inte, man har kanske inte riktigt insett det, eller att man har tänkt att det är viktigt, Men det måste ju också konkurrera med andra projekt. Då finns det ju bankvärden, massa regulatoriska grejer och det är kanske stora systembyten och då är det ju ibland svårt och liksom, ja, det här är viktigt. Tyvärr, vi hinner inte. Nej, precis. Det är fortfarande bara näst viktigast. Ja, exakt. Och det kanske är liksom, jag tror att Drivet av vår UX-avdelning och så har vi ändå, jag tror att det var, Det här har skrivit ner lite siffror och lite informationer. 2019 så började vi jobba lite mer dedikerat med tillgänglighet, men det blev ju, då har vi ju samarbetspartners som är experter på det som kommer in och hjälper oss och så gör man en analys och översyn över våra flöden. Men då blev det lite mera punktinsatser. Så jag tror inte vi lärde oss tillräckligt mycket för att ta det vidare nödvändigtvis, utan man gjorde en on-review och så åtgärdade man lite fel där. Jag tror inte vi lärde oss mindsetet hur vi ska utveckla tillgängligt, utan det drevs nog mest av enskilda individer, typ av skälar, i de olika teamen. Det vi försöker göra nu tillsammans med det här projektet som då drivs parallellt som är tillgänglighetsprojektet egentligen. Det är ju att försöka få lite mer långsiktighet i det och inte se det som ett projekt som tar slut. Utan att vi måste få in det i vårt arbetssätt mer och process. Ja, precis. Och själva teamet för designsystemet, hur stort är det ungefär? Ja, just nu ser vi två ut. Eller just nu, vi har samma uppställning sedan start. Två utvecklare är vi som har varit med och inofficiellt petat på det här projöet. Det som fanns innan, just det. Och sen så är vi faktiskt, vi är typ tre UX-are. En utav våra UX:are är ju en fulltidsresurs som är fortsättningsvis designsystemet. Två av dem har lite andra åtaganden också. Men sen är vi en produktägare och det tillkom i samband med att vi startade teamet och tycker jag är kanon, för man är inte nödvändigtvis alltid så bra på det som utvecklar. Nej, men det är ju det. Det är det. Designer. Här kan skillnaden när man har en bra produkt ägare på plats. Jaha, oj vad mycket. Vad mycket mer rakt på sak, tydligt vissa grejer blev plötsligt. Ja, nu men exakt. Bara att vi håller rätt riktning och inte... Jag menar, som utvecklare, du känner kanske likadant men att det är ganska lätt att ramla ner i lite kaninhål ibland. Jo, jag har gjort det en gång kanske. Ja, jag har nog också kanske gjort det en eller två gånger. Och sen en team chef har vi. Så vi är väl, ja, vad blir det? typ 5. De här femtio. Det funkar ganska roligt för eftersom det är ett nystartat team och vi har ju inte, Vi har ju kvar det här som hade tagits fram innan, men vi har ju inte så mycket att lägga sig. Utan det är väldigt mycket. Det är ju väldigt mycket green field egentligen, att man får ta reda på ganska intressanta grejer. Vi vet ju att vi vill göra underlättar för våra utvecklare och designkollegor, framförallt. Och det övergripande målet handlar väl om att vi vill bidra till att bli effektivare produktutveckling. Sen så vill vi ju göra den här gamla, det som startade initiativet från början, att se till att det blir en konsekvent användarupplevelse och att vi liksom följer vår branding och att det ska bli lätt att göra rätt på det. Och sen är det ju då tillgänglighet som är. Men det som är intressant är att vi har fått upptäcka hur vi ska jobba i den här konstellationen med den här produkten. För det blir ju en intern produkt. Ja visst. Och det är ju väldigt kul eftersom att du har ju dina slutanvändare intill dig. Ja, så det är väldigt mycket feedback. Men då har vi fått prova oss fram och vi jobbar lite grann i kvartal. Det känns som att vi provar ett arbetssätt och sen så behåller vi det som känns bra inne i nästa kvartal och så kanske vi skruvar på något annat. På senaste kvartalen så har vi i alla fall, vi jobbar i två stycken arbetsmöten per vecka där vi försöker sitta hänson och jobba tillsammans både utvecklarna och UX:a. Och det gör ju att det här samarbetet mycket tätare än vad det var i åtminstone de timmen jag var mindre. Då känns det som att man kan ta vissa beslut som träffar både vår kodbas och våran i det här fallet Figma. Och det känns som att det har varit väldigt värdefullt. Men, ja, så ser teamet ut. Ja, just det. Och det är så ni jobbar arbetsmöten. Så tycker de sen så jobbar man mer. Ja, på varsitt håll, resten av. Ja, jag tror att det är lite. Det är ju lite speglar väl hur utvecklingsteamen jobbar också. Nu jobbar inte vi med de vanliga produkterna på samma sätt, så jag kan svara exakt för hur genomsnittsupplevelsen är, såklart, utvecklingsteam. Man är ju autonoma, så vi vill ju jobba agilt. Alla team har väl i princip sin egen twist på vad det innebär när det är ceremonier. Vissa kör någon kamban, variant och andra kör sprintar. Ja visst, det finns heller vad som passar just det teamet. Känner jag igen också? Ja, precis. Men hur är det, vad äger eller driver eller kontrollerar era team kontra andra team? Jag tänker så här. Att ni gör en del komponenter förstår jag ju, här kommer den standardkomponent för att göra den här saken. Blir det då att man drar in nya komponenter som tillhör det inom citationstecken, ett annat team förut, eller hur funkar flödet mellan er och övriga team? Dels så fanns det ett antal komponenter som vi då förvaltar vidare. Just det, utvecklar. Och det andra handlar vi om att försöka snabba upp vilka behov vi har och att inte nödvändigtvis viss kommitta allt för långt fram i tid utan att försöka vara lyhörda och snabbrörliga. Men komponenter är väl en ganska central del i det. Vi har fokkat ganska mycket på dokumentationen kring det också. Det är bra tycker jag. Men jag tycker personligen lite grann att det är lite en first class-sittesen i den leveransen också, Så att det är inte bara så att det finns en hink med komponenten. Varsågod. Det fick du där ute. utan att man försöker ha det i åtanke. Och i och med det så får vi ju bygga vår egen pipeline med hur vi levererar vår produkt. Vår produkt består ju på kodsidan av bibliotek, som man lyfter in via en penn. Och sen så består den i tillägg av dokumentation. Och det har ju också varit en annan lite kul grej, för det har ju inte nödvändigtvis funnits en färdig pipeline för de andra teamen har inte riktigt haft det behovet. behovet. Där har man ju fått vara med och dyka upp det enligt de behov man har. Det blir lite andra saker att tänka på där med att det här ska ju versionshanteras och versionshanteringen är ju någonting som är väldigt viktig för att säkerställa att det blir stabilt i livet. Vi försöker förhålla oss till semantisk versionshantering och att man ska kunna Man litar på att saker och ting funkar och om någonting har breakats så ska man få reda på det och kunna ta hänsyn till det. Men annars så är det ju, jag tror att det där är också lite grann i rörelse. Vad är det vi... Vi kommer att äga som team. Vad är våra produkter egentligen? Det finns ju ganska mycket material som är utspritt på någon kunskapsbank här och sen så finns det något externt kemiskt där för något ändamål. Jag tror i nuläget så är det mycket fokus på tillgänglighet, så jag tror att jag tycker att det är lite intressant och spännande att jag vet inte riktigt exakt hur det kommer se ut. Nej, vi kommer försöka se till att lyssna på våra användare och forma det därefter. Det är väl då det blir bäst också? Ja, och tillgängligheten om vi ska gå in lite mer i detalj på det så är det ju För de som eventuellt inte vet det då så är det ju en ny lag så den träder i kraft den 28 juni. Och det här vet jag att de som har varit drivande, de har ju sagt det, men förr eller senare så dyker det där datumet upp för fem år sedan så kändes det som jättelångt bort. Men nu är det ju all hands on däck. Se till att vi liksom Och det är väl en vidare utveckling av de lagkraven som redan gäller för offentlig sektor, så har man varit inne på myndigheter och sjukvård och så där, så har ju de redan mycket av de här kraven, Nu utökas det till att gälla privata aktörer också. Ja, okej. Så från ett visst håll kan man se det som en breddning av någonting som redan fanns. Ja, just det. Och sen är det väl, det är också en gräns, vilka som omfattas ju också lite, det är lite luddigt och här vill jag bara sklappa lite grann också. Jag har ju försökt känna att jag har någorlunda koll på det här, men det känns som att när det gäller alla de här, Bara ta av det så säger vi det i passage. Ja men exakt. påstår att såhär funkar det och sen så kanske jag har missat någon paragraf. Allt det här är vår uppfattning utifrån det som vi har hört och sett och sådär. Vi är inte lagtolkade. Nej, jag har försökt koka ner det till såhär pragmatiskt. Vad är det som gäller? Just det. Men ja, så nu är det ju ett antal typer av tjänster egentligen som omfattas av det här och det kommer ju på sikt att utökas till flera så träffas man inte av det här i nuläget så kommer man säkerligen att göra det. Det är ju, ja men inom relativt, snar framtid. Och det betyder i praktiken att det finns ju en europeisk standard som är till för tillgänglighet och inkluderande i EU. En utav aspekterna, de allmänna kraven som man omfattas av, det är ju de här WCAG. Just det, om det är någon sorts spis för så spisar det upp sig. Det ska funka så här helt enkelt. färgkontraster och allt vad det är. Sen finns det lite branschspecifika krav som beroende på om man är i bransch så kan det vara extra saker som man måste tänka på. I vårt fall då som bank så omfattas vi av begripligt språk. Och det betyder ju att det ska vara lätt att ta till sig innehållet. Det ska åtminstone finnas möjlighet att, om någonting står på massa faktarmer och så, så ska man ju också kunna se det på något sätt som går att begripa, även om man inte nödvändigtvis är i finansbranschen. Det är ju faktiskt ett underbart glas. Ja, när jag tycker det också. Tycker du att... Sen är det ju så att de bästa lösningarna för det här är ju lika tillgängliga för alla från början. Så att det inte blir någonting man bara lägger ett lager på lager. Vill du ha lite mer till innan? Får du slå på det här läget? Precis. Och sen är det lite administrativa krav. Så omfattas man av det här direktivet måste man också arbeta med dokumentation och liksom rapportera sina tillgänglighetsbrister. Och då finns det någonting som kallas för en tillgänglighetsrödogörelse som man behöver ha då. Och det är typ en listning någonstans på sin sida som hålls uppdaterad på. rädd på. Det här är de bristerna som finns, typ förklarar varför och länka om det finns något mer mera tillgängligt alternativ och lite sånt där då. Och sen så tror jag också att man behöver nog ha en kommentarsfunktion så att liksom användare av din tjänst ska kunna rapportera in det här om de stöter på något. Så det är egentligen lite grann visa. Vi är medvetna om vad vi klarar och inte klarar av att vi jobbar på den. Ja, precis. Om man nu kommer till vad det får för påföljder ifall man inte uppfyller de här kraven så tillgänglighetsredogörelsen är nog en ganska viktig del i det. Men vi är medvetna om det och vi... Ja, just det. Vi är på bollen, just det. Lite sådana här fann man att det fanns någon slags relaterad känsla i vissa delar när GDPR var på tapeten och höll på att införas. Ja, men alltså en grej. Det fanns ju jättestora stränga påföljder, men det fanns också en ton av att visar du att du jobbar aktivt med det här och rapporterar när ni har problem så kommer det att visa en rätt anda också. Ja, men exakt. Så tolkar jag det i alla fall. Ja, men precis. Det känns ju lite som att även om jag tror att man förväntas väl bara Kompliant med det här när 28 juni-inträdet så går det ju säkert såhär, men vi har inte hunnit helt enkelt. Ja, men om man kan visa, om vi har tagit det, det här är det viktigaste i det här sammanhanget, vi kan visa att vi har tagit det, att vi håller på med resten. Ja, men exakt, exakt. Sen kanske man kan komma till den punkten om vilka omfattas då? Så det tycker jag verkar lite svårt. Det är lite av, i vissa branscher så känns det väldigt tydligt. typ e-handel. är ju en utav dem som omfattas av det här. Ja, det är rätt lätt att veta om man är i handel eller inte. Exakt och banktjänster. Det känns jättelätt. Men sen är det så här elektroniska kommunikationstjänster och det finns lite exempel. Jag tror vi kan säkert lägga in några bra länkar i beskrivningen också. Adeln funderar. Från Telestyrelsen har de någon sorts introduktion till tillgänglighetsdirektiv. och då säger de elektroniska kommunikationstjänster som till exempel uppkoppling och abonnemang, Telefonsamtal, e-post, SME:s chatt, videosamtaltjänster, men det kan säkert vara fler. Ja, jag tänker det nu. Det kan de bli ganska brett nu. Ja, men exakt. Och sen såhär streamingtjänster, medietjänster typ. Det är väl en av dem. Sen är det vissa tjänster för persontransporter. Vissa tjänster. Ja, så det vill lämna utrymme för tolkning. Banktjänsten nämnde vi och så e-böcker behöver vara tillgängliga och e-handelstjänsten. Det är ju en ganska stor sektor som omfattas. Sen är det så tror jag att det är vissa fysiska typer, alltså om man har betalningsterminaler eller olika typer av automat, Så tror jag att de också omfattas. Men jag för mig att jag läste någonstans att har man liksom en sån fysisk grej ute, så tror jag att det finns någon regel kring att om den står där idag, Så kan den stå kvar tills den är en viss ålder. Ja, det känns ju sansat. Man kan säkert försöka utbilda sig om man har fattat sådant eller inte, men jag skulle väl förespråka att man kanske ändå tänker på tillgängligheten. Jag vet inte, alltså för mig så har det varit lite grann. Jag har inte riktigt varit så bra att tänka på tillgängligheten historiskt, men ju mer man har fokuserat på det så har det ju låst upp lite grann. Det är typ ett nytt gränssnitt i din app. Ja, det är det som är så spännande. Ju när du får in vanan att Liksom, jag kan... Jag har kort kommandot för att starta skärmläsaren. Jag kan de vanliga navigeringssätten. Då får du helt plötsligt ett nytt gränsligt för din app som finns Se till att få en bra mönnerupplevelse på. För mig i alla fall så är det jättemotiverande. Jag tycker det är jättekul att ändå säga, för det kan ju vara helt förfärligt. Jättemånga roliga exempel när det är såhär, ja men du kan typ hoppa igenom 48 element som bara säger Pilt. Ganska svårt att veta. Vad är det då liksom? Ja, men exakt. Så jag tycker att det känns som att det är viktigt utan tvekan, men det är också någonting som, ja men jag tycker det är roligt. Det känns som att man har låst upp en ny, liten dimension här i sitt utvecklande och vad man levererar när det gäller bra använderupplevelser. Ja, men exakt. Ja men lite trevliga incitament att bygga saker på mer genomtänkta sätt och... Ja. Man gjorde första versionen av sin webbapplikation och så är allting en div med olika styling på. Kom in exakt. Alltså skapa på att ha en A, HRF, en vanlig länk. Ibland är det inte bara bra för tillgänglighet, det är faktiskt ganska bra för alla att se att här funkar den funkar som en vanlig länk, den ser ut som en vanlig länk. Ja, men exakt. Alla sådana där grejer. Och den går att navigera och har vi gjort det bra att navigera med skärmläsare så blir det ofta bra att navigera med tangentbordet också. Bara kunna tabba genom saker i en vettig ordning är ju väldigt nyttigt för precis alla. Just det, alltså jag tror att det är en sån här grej som man kanske inte ens Man tänker knappt på det när man sitter och utvecklar och när man sitter och utvecklar så blir man lite hemmablind också. För du är inte nödvändigtvis. den tilltänkta målgruppen för den appen du utvecklar. utan jag ska bara utveckla. Jag tror att man, du har ju säkert använt olika system även om de är webbaserade, där man bara säger Alla de här tangentbords som var så tabba att navigera med olika sorters kortkommandon eller eller när vi gör subtil-tagenter och så vidare. Det bara funkar. Ja. Det är ju en trevlig överraskning. Raskning. Precis. Och det skulle ju lika gärna kunna vara defaulten. Ja, men exakt. Det borde vara lite jobbat. Sabba till. Ja, men jag tror att för vår del, så en av våra, det som vi försöker bidra med när det gäller utvecklingen är att Alla kanske inte ska behöva vara tillgänglighetsexperter för att vi ska kunna leverera ett bra resultat. Dels baka in det när det finns och går, men också uppmana kanske till att man har det mindsetet att, Men blev man när du sitter i lokal utveckling? Tryck igång självmjälsen. Jag tror att man behöver gå någon liten Man behöver gå någon liten crash course i hur skärmläsaren funkar, för den kan vara ganska överväldigande när man sätter igång den. Man har ju hört när den drar igång på 180 kilometer i timmen och spottar ur en massa information. Ja visst, det är så proffsen använder den. Ja, och man kan ju ställa in den precis så som man vill. Jag tror att ännu av de viktigaste, nu sitter jag på Mac. Det är säkert lite olika beroende på vilken och de använder ju en inbyggd voiceover. Men jag tror att den viktigaste tangenten är kontrolltangenten. För den får den att bara vara tyst. Den pausar uppläsningen. Så när du sätter igång den och du bara vill få, nu måste jag tänka, då kan man alltid trycka in kontroll innan man gör sin nästa grej. Men jag tror att det är nog inte mer än kanske fem, sex, sju stycken kommandon. Man behöver kunna för att kunna använda den effektivt nog för att fånga mycket av de här lågt hängande frukterna. Och då kanske det också är så här, gör man det redan i den lokala utvecklingen? Då kanske majoriteten av det som finns inom läskig lång kravlista som är två kilometer lång. Det kanske är majoriteten av det redan löst. Och sen kanske man, de här som är lite mindre problem som är lite svårare att upptäcka, Dem kan man säkert behöva åtgärda ändå när det är någon sorts testprocess eller review senare. Jag tror verkligen att om du knappar runt i det du utvecklar lokalt med tangentbordet och ser till att du kan komma åt allting. Allting du kan fylla i allting och du öppnas någon modal eller någonting så sitter fokus rätt och du hamnar inte plötsligt bakom mandalen. När den stängs, så är den ju kvar. där du var, du behövde inte navigera genom hela jag-hålet igen och att liksom bara slå igång en självlösare i 45 sekunder och bara, Men det känns som att det kan kännas för mig då. Då mickar det förmodligen hyfsat svenskt för andra. Och sen så är det ju mer också. Visst, är man proffsanvändare av det här så kan det hända att det finns insikter som man själv inte kan eller. Men jag tror målet är inte att man ska täcka 100% av alla problem som kan uppstå, utan det är bara att få de lågt hängande frukterna, helt enkelt. Jag vågar använda hat. Ja, precis. Snabbt och jättestort tack till alla som stöttar oss på Kofi. Du kan bli en av dem genom att surpa in på kobindesträckfiber.com/kodsnack och slänga iväg antingen en engångssumma eller ett månadsvis stöd. stöder oss på en nivå en kaffedrickare för fem euro eller mer i månaden så får ett gäng trevliga klistermärken i brevlådan. Söderås på Nymån Barrista för tio övriga ner i månaden så får du dessutom, förutom klistermärkena, ett stort tack precis här, tusen tack till Michel, Albin Gråen, Anders Legrell, Brotheringo och Tobbe Lundberg. Alla ni som stöder oss hjälper till att göra podden möjlig och ju fler ni blir, desto bättre podd kan vi göra. Ibland har vi sponsorer i podden, men det är faktiskt ert stöd som gör att vi börjar kunna täcka kostnaderna för podden varje månad. Vill du stöda oss på andra sätt så går det naturligtvis utmärkt att recensera podden i din poddspelare. Sätter betygeln en stjärna, oavsett om det är Spotify, Apples podcaströller, någon helt annan app eller berättar helt enkelt om ett avsnitt för någon som du tror skulle gilla podden. Och just nu har vi precis släppt ett helt nytt sätt att stötta. Vi har ett klistermärke till försäljning. I Kofibutiken så finns ett trepack klistermärken om livet som agilelokförare framhimproviserat i en milt urspårade diskussionsstråd häromveckan. Vi ser i stöd för alla safe ut och höra därute och få den där sköna känslan i magen av att bidra till kodsnacks, fortsätta resa. Men kom ihåg, du är en fantastisk person, oavsett om du stöttar oss eller ej. Jag antar att det fortfarande gäller att man får rätt mycket gratis att jag använder standardkomponenter också istället för att finna sina egna. Ja, du tänker på så här inbyggda element i... Ja, precis. Det känns som en snaggare som fortfarande driver förbi mina massor av flöden med en av dem. om att gör inte din egen ersättning för en knapp eller något i onödan utan se till att det verkligen Verkligen behövs och då har du rätt mycket att implementera om det ska bli lika tillgängligt som en standard. Om du går divhållet. Ja, men inte stoppa. Nej, men så är det definitivt. Det finns ju många inbyggda element som är mer semantiska som man kan ruta sig mot. Men sen är det ju lite så. Det beror lite på. När det kommer till de här tillgänglighetskraven så Och just WCAG kanske specifikt då, så jobbar man ju i olika nivåer, då är det liksom A, dubbel A och trippel A. Och jag tror om jag inte minns fel här för att någon får rätta mig om jag har fel. Men jag tror att den här nivån som man ska uppnå är dubbel A. Det kan hända att det skiljer sig lite beroende på vilken typ av problem det är. men tippla i den högsta ambitionsnivån. Jag menar, det kan man ju lika gärna sikta på då om man, ja, men precis orimligt. Jag har kollat lite på WCAG några gånger och det känns som att den högsta nivån kan vara ganska utmanande ganska ofta, har jag för mig. Ja, men jag tror det är säkert att ha en balans där. Att man inte liksom. Men av var väl ofta ganska rimlig, man kan säga såhär, ja men det här förstår jag ju, dels vad jag ska göra och varför och dels hur vi har kommit dit. Och sen dubbela. Men det här är samma, fast mer ambitiöst på något sätt. Och så tripplar oss här nu, nu kan det bli mycket. Ja, nämen exakt. Jag tror att det som du säger stämmer ju 100% att återuppfinner inte hjulet om man inte måste. När det kommer till de komponenterna som vi levererar så försöker vi ju inte återuppfinna hjulet, Även om det är en komponent som inte nödvändigtvis går att bara bygga, den finns inte i browsern. Det kanske är en lite mer interaktiv komponent som vi kräver. Nu finns det ju ett inputfält för datum, men vi kanske behöver ha ett sätt att man ska kunna ange en range av datum och vi vill ha det som en bra upplevelse. Samma visst, får man om man ska bocka en flygbiljett eller hotellnatt eller något sådant där? Och då måste man ju gå lite utanför vad som finns inbyggt. Och det som vi försöker tänka på där, och som jag kanske skulle uppmana ifall det är någon annan som sitter i liknande utmaningar. Även om det är så att det här finns kanske en färdig komponent för i något oftersälvbibliotek ute i ekosystemet. Så försöker vi ändå säga, ja, det kanske är rimligt för oss att bara gå på den lösningen. Men då sättet vi tänker på det då är att sätta ett eget interface av hur skapighet ser ut. Och det kan vi säkert inspireras av hur det ser ut där, men även om det är näst intill en etiatmattning så är det en explicit. Vi lägger in det, för då blir det inte ett implicit beroende på just den komponenten, då skulle vi ju sedan kunna se, men vill vi bygga den kasten eller behöver vi bygga den kasten eller finns det kommer det en ny aktör eller något nytt bibliotek som funkar ännu bättre. Så det är väl en av de nyckelstrategierna som vi försöker tillämpa. Var och en är för komponent så är API:et, det är lite heligt. Det försöker vi se till att vi har en uppfattning om hur vi och där är det ju såklart liksom Det är svårt att säkerställa att det blir så, men att såhär, är det liksom Är det intuitivt, är det flexibelt och flexibelt som jag menar, är det flexibelt för att vi kanske vill ändra vår lösning under huvudet på sikt? Precis. Jag har en kollega som jobbar med rätt mycket med våra komponenter. Vi har ett litet sådant projekt också. Han har ju sagt exakt samma grej så här, ja men vi ska se till att slå in det för att vi använder ett designbibliotek nu ganska mycket. Men hans ambition är ju det. Allting som vi har som gemensamma komponenter ska vara inslaget precis så att vi inte blir beroende av det bibliotek. För just nu sitter vi stenhårt fast i en del äldre projekt. katastrof för att försöka uppdatera en mejl. Exakt och jag menar det skulle väl även om du då tar den approachen så kanske majoriteten av biblioteket ändå använder någonting som färdigt. Ja, men då är det i alla fall så förlitar du dig helt och hållet på deras API. Då sitter du ju lite i händerna på dem också. Ja, men nu har vi gjort en ny major-uppdatering som breakar en massa grejer. Då har man åtminstone en chans att motverka det. Kan vi då, om vi nu inte bara kan byta komponent i samband med det, kan vi åtminstone se till att vårt API som vi tillhandahåller går att mappa om till vad som ändrat. Så det tycker jag är typ en key take away i sammanhanget. Och sen när det gäller lite grann så som vi snackar om med hur vi försöker snappa upp behoven från organisationen. Så jag tror ju, och där har vi ju i samband med UX också, det som är intressant med våra täta samarbete, Det är att man kommer från olika perspektiv. Från kådsidan så har vi ett visst perspektiv, och särskilt när det gäller versionshanterade kod som... Det finns vissa spelregler helt enkelt. På designsidan så kanske det inte riktigt har varit lika känsligt med sånt. utan då har vi behövt närma oss varandra och synka sinsemellan så att vi kan inte springa före alla gånger på designsidan Liksom bara göra en ändring, för det är inte riktigt så det funkar på kådsidan. Nej, precis. Men så tror jag att en annan grej som vi försöker vara i synk kring, det är ju att man vill ju att det ska vara konsekvent. Och därmed så vill man att det ska finnas vissa konstrains kanske, så att det inte är så att, ja men vi kan göra på helt olika sätt. Jappar, det där är intressant, ja. Men jag tycker personligen så tycker jag att jag har under de här åren så har man ju ändå både konsumerat ganska mycket innehåll ifrån ekosystemet och ifrån diverse fat-leaders och så vidare. Ja, min uppfattning är att den här flexibiliteten behöver vara lite snurrig än vad man tror ändå. Någonting? Ja men det är så trist när du sitter där i din app och så är det så här, Jag behöver måla lite utanför linjerna, men det går inte. Då får jag bara kasta ut allt och göra det helt från skrattet. Det blir ju inte hållbart där heller. Nej, men på så sätt så ser vi att en viss flexibilitet behöver ändå finnas i alla komponenter. Så sättet vi ser det på är att det är lite mer high level-komponenter och lite mer low level-komponenter. Och det finns ju en herrans massa namn på sådana typer av om det är Tommy Design eller vad som helst. Vi försöker tänka lite enklare på det. En high level komponent, det är ett lite mer specifikt användar liksom ett ljuscase. Man kan använda det med ett ganska begränsat API. ganska mycket uppinjens inbakade. Men det gör ju också att Det är ju ganska flexibelt för oss att se till att det fortsätter att funka utan större ändringar. Sen vartefter vi märker att, för då kan vi lösa kanske 80% av ett visst behov. Sen så kommer vi till de andra behoven och då kan vi utifrån det vi vet då så kan vi börja bryta ner det till lite mera looleval komponenter. Och då kanske man kan, då kommer ofta de här insikterna om API-design som hade vi tagit det här valet så hade vi kanske kunnat stödja, utan att man går alltför långt ner i tid där behov inte vet att vi har. Vissa sådana där grejer blir ändå tydliga. Rent intuitivt så känns det som att det här valet hade varit flexibelt, även om vi ser framför oss att vi vill göra lite annorlunda också i framtiden. Men om man säger high level i det här fallet, är det typ en sån avancerad datumväljare som vi pratar om innan? Är det en hajlev, eller? Vad vill du vara? Ja, det är svårt med de man drar gränserna. Jag skulle se det som tänkt på tabeller, till exempel, och vi har inte supermånga tabeller ännu i biblioteket, men jag bara tar det som ett exempel. För där kan man ju se framför sig att en lång level version av sådana komponenter kan ju mappa väldigt nära hur det funkar i hotellen. Så att du jobbar med Rose och header och olika typer av celler och så vidare. men en high level-komponent kanske tar en lista av data som den kan mappa om till det där huvudet. Och för ganska många EU-skisser så räcker det. Då är det ganska märkligt, så då kan du använda en komponent, skicka in datan som du kanske måste bara skruva lite grann på hos hassar. Och sen så får den ta väl. Och istället för att, ja visst, då ska jag göra typ 88 rader kod här för att göra min tabell med mappar igenom saker och så vidare. Just det. Ett exempel, ett annat exempel är kanske att när man jobbar med inmatningsfält i formulär så består ju de under huvudet av ganska... Alltså de är ju rätt nära elementen i browsern som input och så vidare. Vi har till exempel en komponent som är en textfild. Och då kombinerar ju den själva inputfältet med ett sätt att sätta en label på den och ett eventuellt valideringsfel så sköter ju den om kopplingarna där, sinsemellan under huven. Labour blir associerat med impotfältet och valideringsfelet också, utan att du som konsument behöver liksom så här, Men hur var det nu? Ska den vara orialabel, biel, orialis, grabby? Sådant. Så det är det jag tänker på, men det är ju Jag tror att vi har stött på många gånger att man bara Men är det här en höjare? Till slut så kanske man hamnar i någon av tomhikdesignen då. Ja, men det kanske både och. Det är en ständig utmaning att få till den där balansen. Ja men det här kan ju en jättefin komponent. Men jag behöver skicka in 300 saker till den för att den ska funka. Kan jag tänka om i det här så jag slipper det? Ja men då kanske man på en sån här level. Och det är också, jag vet inte vem det var som hade ett sånt tak någon gång, men att som pratade just om API-design på någon konferens. Man har ju sett exempel på en reaktkomponent som har typ 38 proffs för att man har byggt på vartefter. Man har kommit över just det, vi måste stödja det här också. Då är det bättre att separera det till helt olika komponenter. Så att det blir lättare att underhålla övertid. Så det är väl lite av dem. Tankarna och det är mycket av det i kompensens, men delar av det har man ju liksom på något sätt absorberat under de här åren som har stött lite mot det här, Även om det inte har varit ens huvudsakliga arbetsuppgifter. Nej men precis. Det finns ju ett stort värde också i att få sådant som du säger Komma en svensk grej att få dem uttalade och utskrivna. Det är ju en väldigt stor nytta i sig. Annars är det ju någon i teamen som tycker att något lite annorlunda är, ja men det här är väl kommelsen, Så har man plötsligt dragit iväg på två spår igen, fast man inte var avsikten. Och det en utmaning är ju att, som jag nämnde där, vi två som är utvecklade i teamet just nu har ju jobbat med det här innan så frågan är vad som är inne i våran ryggmärg och vad som... Jag tror att det kan finnas en utmaning i att försöka få ner det här på ett enkelt och överskådligt sätt. Det här är ett mindset som vi tillämpar. Så att just det. För det blir ju svårt. Jag vet faktiskt inte riktigt var gränsen går. Vart lämnar du typ ena hjärnhälvan på oss två och möter det någon dokumentationssida någonstans? Just det, där har vi säkert ett jobb att göra. Om man ser till framtiden och att man skulle omborda någon ny, någon försvinner och så vidare, Försöka de grundprinciperna som man på något sätt lutar sig mot nu, som säkert kan ändras också, såklart. Men det här är det vi förhåller oss till nu. Istället för att ha en uppsättning regler som blir omfattande och komplicerade och grannelära så är det såhär. Vi försöker ha några grundläggande principer som vi tänker på när vi tar fram komponenter och vad vi än tar fram egentligen. Ja visst, och lyckas man få ner sånt om en text eller bilder. eller vilket material det är, då har man ju något som är väldigt, väldigt nyttigt. Som du sa innan, allt man levererar den inte bara komponenter, utan det är informationen runt omkring kan ju vara supervärdefull även om den kommer. Svårare att få fatt i ibland. Det är ju också en intressant grej, för att ibland våra utvecklingsteam så sitter majoriteten av dem just nu och jobbar i reaktaplikationen. Och det har ju då pragmatiskt sett varit våran. Våran. Alltså det var så det började och det är fortfarande så. Det betyder att jobbar man i något annat än reakt och mobilappen, eller jobbar man i något av de andra bolagen som ingår i samma koncern, så kan man inte nödvändigtvis ta del av komponenterna. För de är ju lite specifika. Just det. Så då blir ju riktlinjer och liksom design token så sånt blir ju desto viktigare. Och sen så är det ju såklart också jätteintressant att fundera på hur skulle vi kunna brygga gapet mellan olika ramverk och kanske till och med olika plattformar. Men hittills, teamet har ju varit verksamt i tre kvartal ungefär nu, så vi har inte känt att det känns inte så pragmatiskt att börja gå utanför till något ramverksugnostiskt, När så stor procentandel av allihopa ändå sitter, liksom, "Nej, det blir mer reakt". Men det är ju definitivt en fråga för nära framtid förmodligen. Ja, det är som du säger, det är ju lokt hängande frukt igen. Vad är vettigt att börja med? Vad får vi stor utdelning på det? Ja, och det kanske inte har skrivit generellt dokument för alla typer av gränssnitt i. Nej, men exakt. Ser man det, håller man sig på webben och tänker att såhär, men hur kan vi stödja? Vi vill ju förmodligen, eller vi kanske inte kommer att jobba med React i en massa år fram. Det kanske vi gör, men då kommer man ju onekligen att tänka på sånt som webbcomponents. web components. Jag tycker också att det där är också lite svårt, för jag tycker när man läser om webbkomponents, Så där är det också ganska polariserat. Use the plattform gänget och så hör man Libour eller Framework outhers? De just det. Då tycker jag att det blir lite svårt, för det känns som att Det är därför jag har varit lite försiktig med att skynda mig in i det. För det känns som att jobba i huvudsak med reakt. Då vore det ju synd om man ska behöva hoppa genom en massa Leopolds för att webbcombonens React ska samspela. Ja men, eller hur? Och webbkonditionen låter ju så bra på pappret, men är det så bra i praktiken? Man kommer till alla komplexa detaljer som kära och dem och hur lirar liksom ramverken och domen egentligen. För många av ramverken går ju en annan väg när det gäller hur de renderar appar. Ja, precis. Som är lite mer... Ja, vad är det man kallar det, typ Lazy Rendered medan domen traditionellt är Eagley Rendered liksom? Samspelar det verkligen och så här? Visst, det kanske är liksom... Jag har nog inte helt satt mig fullständigt in i det, men det är definitivt någonting som vi har lust att titta på lite sen. Och det kan ju hända att delar av utbudet av komponenter funkar kanon som webbuppgången. om de är ganska enskilda. Det är liksom ingen komponent som rappar en massa annat, utan det kanske är typ en daypicker. Eller någonting som är en Leafnode typ i hierarkin av alla. Ja, just det. Nej, det känns inte nödvändigtvis som en silverbullet, men det där vill vi ändå utforska det. För det är ju... Jag tror att tittar man i ekosystemet bara i Sverige av andra distanssystem och det gör vi ju liksom själva mycket också. Det finns ju liksom i arbetsförmedlingen och SJ har vi inspirerats ganska mycket av. Så de kan vara superbra in och titta på. Ja, SJ har, jag tror att de relativt nyligen har gjort ett omtag på sin, jag vet inte, det är någon sorts SJ-design eller något sådant. Så de har gjort ett bra arbete och det kan man hämta mycket inspiration för. Vissa andra så jag vet jag ska inte svära på hur de gör kring det, men vissa andra kör ju 100% webbkomponus. Jaha, de gör det. Det funkar säkert jättebra, men jag tror att det... Vi vill få ut forskare i framtiden helt enkelt och se vad det är. Sen vet jag inte, det är ju inte helt otänkbart att landskapet ändrar sig lite grann heller, nu när AI är på stort intåg och utvecklingen går så pass snabbt som det gör. Men precis det skulle det vara intressant, för det sa det ju precis innan vi började spela in här att det kan ju mycket väl komma att påverka. Ja, var ni bygger och vad man gör och hur? Och det var en sån grej som jag inte hade slagits av förrän du sa det? Nej, jag vet inte om jag hade slagits av det själv för några veckor sedan heller, men vi har pratat lite mer om det, för det har ju säkert inte gått någon förbi att det hände saker på AI. Och kanske från utvecklarperspektiv så har man ju traditionellt, man kanske är tänkt på så här, men vad betyder det här för mig? Det är det här för mitt yrke. Men om man bortser från det så tänker jag ju liksom att våra användare som vi bygger tjänster och appar för idag, Hur ser deras interaktion med de apparna ut i framtiden? Delar av det kommer säkert att övergå till att vara någon sorts assistent. Man kanske pratar och ber om eller chattar eller någonting, så vissa sådana här stora, komplexa flöden, deklarationer eller liksom du ska ansöka om bolån eller vad det nu är. Det kan ju vara ganska omfattande och komplexa formulär, det kanske är någonting som skulle vara jättebra som ett chattflöde i framtiden, För då kan du ställa frågor under tiden om det är någonting som du undrar just det. Men sen tror jag personligen att vi kommer säkerligen att ha kvar grafiska gränssnitt för diverse grejer. Men det är också så att i vår interna produkt och dess framtid så blir det ju någonting som man har kommit underfund med nu, Det här måste vi ändå tänka på. Ja. Hur ser framtiden ut kring det liksom? Ja, just det. Vart är vi på väg? Det finns ju liksom så här, vad är det de kallar det? De kallar det Computer Vision. Visserligen så är det faktiskt typ att datorn tar skärmdumpar och faktiskt navigerar. Då behövs det ju ändå ha ett gränssnitt. Det är ju bara bra då om det är tydligt och tillgängligt. Om den exakta tillgängligheten lönar sig igen. Ja, men exakt. Och det är klart, det måste väl kunna finnas någon aspekt också där det blir andra interaktioner som man kanske vill presentera saker på andra sätt. Det kanske får ett annat behov av visningskomponenter som kan visas uttagna ur sitt sammanhang. Det är inte så att vi har jättestort formulär, men jag vill presentera resultatet och då har jag resultatkomponenten, men jag har inte resten av informationen runt omkring. Man kanske vill integrera inåtningsfält i det här flödet också, för att istället för att allt hela tiden ska vara en fritext och typ en GPT-rapper, så känns det som att det kanske är en mix av båda väderna. Men jag tycker det är svårt att veta vart vi är på väg och det är väldigt spännande att se. Det är väl lite så som vi snackade om innan, att man får försöka vara snabb på att inte sitta inlåst i, så nu jobbar vi med det här i två år och sen så ser vi hur det blir när det är. att man är snabbrörlig och håller örat mot rälsen igenom. Exakt. Det blir nästan mer intressant när man tänker sig också, när man inser att det kan komma sådana grejer. Det finns fler aspekter att tänka på än bara de som man anför sig precis nu. Ja, nej men exakt, och det tror jag gäller, som man går in på temat med AI och utveckling också. Där tycker jag också att det är lite svårt att veta. För precis som i webbkomponen så är det också ganska polariserande åsikter om det. All inre layout. Vem ska man tro på? Vem ska man tro på? Har de som är åt ena hållet i alla andra hållet ett incitament, kanske att se gillså? Ja, visst. Ja, själv har ju vi har ju använt AI framförallt under en längre stund nu för dokumentation För att försöka hitta ett konsekvent och professionellt språk, men också lite blank canvas-grej, att man får, vi ska dokumentera en knapp, Eller vi ska dokumentera en komponent som gör det här. Ge mig ett utkast och så tar vi det därifrån liksom. Ja, jag skrev en låt och började med. Jag tror att min personliga resa när det gäller AI assisterad utveckling har ju varit såhär, att man har ju fått den här wow-faktorn. Och sen har den på något sätt efterföljts av en, ja, typ att den kör fast och liksom, man liksom, man bråkar med den här AI inför att liksom komma framåt. Framåt, men ju mer man fortsätter, ju mer ute på situationer och så, blir det. Ja, men exakt. Lite grann väldigt bra beskrivning. Men den har ju kommit i omgångar också. Nu finns det ju liksom ännu bättre integration mellan en AI-arkent och en editort, till exempel. Och det har också blivit en wow-faktor. Men det känns också som att man kommer till, och man förstår ju att när den har den här tjejen av sat-grejen, att den kan liksom typ prompta sig själva, prova, autrams och så vidare. så förstår man ju att resultatet blir mer träffsäkert, Men det känns ju någonstans också som i slutändan, hur de fungerar, gissar sig ändå till vad som är rimligt att göra härnäst. så att det känns som att hittills så har jag fått några sådana där wow-faktorer, Men ändå känt i slutändan av när det har gått två dagar. Lilla handen om Facebooken är över. Men då stöter man på de här friktionerna och där det liksom... Ja, men exakt. Det tar stopp på ungefär samma stil som sist, fast på att det blir lite annorlunda. Nej, jag känner mig väldigt mycket också. Och samtidigt så pratar jag ju med folk, ja men vi genomarbetar med dem som verkligen, det känns som att de verkligen har hittat arbetssätt ihop med AI som verkligen funkar för dem. Och de blir genuint mycket snabbare på att göra saker. Och jobba på det sättet och det kanske hade varit ett sätt som inte alls passar mig för att jag är gammaldags och vill sitta och titta på koden utan då blir störd av förslag mitt i eller. Nej, men om man vill ju, alltså det är henne av de grejerna som jag tycker är tråkigast med det. Jag vill ju prov, för jag tror också att såhär, i någon grad så kommer väl det här, man kommer väl nästan att vara så illa tvungen att använda det för att behålla en viss produktivitet kanske. Sen så tror jag inte att man behöver förlita sig på det helt och hållet. Nej, det är ju frågan. Precis, det är frågan. Jag tänker såsom för min del. Jag jobbar ju vim, och jag tycker det är lite vimt specifikt, och jag älskar ju liksom det att skriva. Jag tycker det är det jag i sig är så kul. Men den, när man jobbar i terminalen så, då är det inte nödvändigtvis så att det är inte där ny funktionalitet kring det här kommer först. Och då blir man så här okej, men ska jag testa någon nöd? Jag det tar det här för att prova, men jag tror jag delade in åsikten, Men jag vill ju typ sitta utan distraktioner och bara få göra det som. För det ger mig glädje liksom. Ja. Och samtidigt så är det ju onekligen så att när jag har Co-pilot påslagen är Visual Studio Code. Jag vill ju kanske egentligen inte ha så mycket av intelligensen eller andra situationer. Däremot att den ibland funkar som en väldigt mycket smartare autokomplettering. Ja, spara tid helt enkelt. sparar mig ju lite tid då och hjälper med att hålla avslutande grej och samtidigt hålla tankegivet. Så det är väldigt balansgång. Det är både störande och lite hjälpsamt samtidigt. Ja, men exakt. Det kan vara mycket frustrerande också. Ja, visst. hårt in på AI-utvecklingen så kan vi vara några andra som sitter i ett hörn och känna storkån på att vi skriver väldigt pålitliga små saker med minsta möjliga kod som handverksmässigt skriven. Hur mycket mer förutsägbar? Jo, precis, för det är väl också en av aspekterna, att både när det gäller liksom... Ja, men producera kod kanske är en aspekt i sig, men säg alla de här bildgenereringarna. Ja, det är ju inte som att du får samma resultat. Nej, det är samma fråga. Det blir lite svårt. Vad är det egentligen som kommer ut? Det kommer säkert funka, men det är där i den valparken. Ja, men precis. Det är som att prata med någon slags drömgenerator. Det händer något i en dröm och så tror man att det här är samma sak plötsligt, allting runt omkring en dans. Nej, exakt, exakt. Men jag tror alltså, det kommer väl vara viktigt att fortsätta vara nyfiken på det i alla fall så att man liksom inte frånskriver det helt och hållet. Men för namnet är det. Användare till en rimlig grad där det känns som att det är gynnaren och inte att man bara till slut sitter då. Men det kanske... Vem vet? Jag vet vad det är på väg. Vi stämmer av igenom två år och ser vad som faktiskt hände. Är det något mer vi borde få med innan vi är avslutad för idag? Jätteintressant. Jag tror inte det. Jag tror vi har varit inom det mesta som jag har tankarna. Det är väl i så fall, jag tror att det finns några länkar som vi kanske skulle kunna lägga in i någon beskrivning. Ja, men exakt. lägger ner massor med länkar, inklusive till SJ:s designsystem också. Jag tycker trivsamt att de har gjort en sajt för sitt designsystem som bara visar komponenter, men den känns samtidigt 100% SJ, så de har verkligen lyckats få till en enhetlig känsla på det på ett ganska stiligt sätt. Ja men det är ju också såhär, det är lite powermove att liksom lägga sig in. Lite så jämnt. Det känns som att såhär, det... Vi hade säkert också kunnat tänka oss att göra det i framtiden, men vi har inte vågat göra det ännu. Det hade inte liksom förutsett tillräckligt skyltfönster, vänligt material kanske. Nej, jag kan helt förstå resonemanget. Men som sagt, vi lägger in sånt också om du. Och om du kommer på några fler grejer som vi borde länka med så tar vi med dem också, så folk massvis tittar på. Jättebra. Ja, men då så. Tack så jättemycket Johan för att du ville vara med. Ja, tack för att jag fick vara med. Tack för att just du lyssnar på kodsnack och du vill stödja oss varför inte tipsa en bekant om podden Eller lämna en recension i till exempel iTunes eller något annat ställe där det går att sätta betyg på poddar. Du kan också stödja oss genom att köpa sig en kopp kaffe på kofi, kobindesikfi.com/kodsnack Alla pengar går direkt till att göra podden Bättre och trevligare. Du kan också komma och hänga i vår slakkanal, länk finns på kodsnack.se, precis som alla andra länkar och all annan info kopplat till varje avsnitt. Sist men inte minst finns det också en länk till vår spreadjobbutik där du kan köpa tröjor och andra prylar med kolsäcktryck. Återigen, tusen tack för att du lyssnar i hörseln. Jag kallar den här svenska drömmen. Men ankomsten seriöst ut som måste vara live och kompetens. Ingen anledning att komma tillbaka till dig. Har du träffat dem i staket eller har du stått där inne på mängden?