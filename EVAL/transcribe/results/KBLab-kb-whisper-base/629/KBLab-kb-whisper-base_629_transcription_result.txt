Jag tror verkligen att om du knappar runt i det du utvecklar lokalt med tangentbordet och ser till att du kan komma åt allting, Du kan fylla i allting och du öppnas någon modal eller någonting så sitter fokus rätt och du hamnar inte plötsligt bakom modalen. När den stängs så är du kvar där du var. Du behöver inte navigera genom hela gehålet igen. Och att liksom bara kunna slå igång en självlösare i 45 sekunder och bara liksom Men det känns som att det makear känns för mig. Då mekar det förmodligen hyfsat sens för andra. Målet är inte att man ska täcka 100% av alla problem som kan uppstå, utan det är bara att få de lågt hängande frukterna. Helt enkelt. utan att behöva göra det separat. Gör man det redan i den lokala utvecklingen, Då kanske majoriteten av det som finns i någon läskig lång kravlista som är två kilometer lång. Majoriteten av det är redan löst. Hej och välkomna till Kodsnack. Jag heter Fredrik, som vanligt. Idag har jag med mig Johan. Hej! Vem är du? Vad gör du? Jag är en utvecklare som jobbar på SBAB till vardags. Här sitter jag sedan relativt nyligen i ett nystartat designsystemteam. har varit där. Ett antal år nu. Jag tror att vi är inne på det sjunde året. Jag har gjort lite annat under min tid, jag tror att det är mitt tredje team. Eller jag vet att det är min tredje tid. Men ja, precis. Så det är lite det som vi sitter med och vi jobbar ganska mycket också med tillgänglighet. För det kommer ju ett nytt tillgänglighetskrav eller tillgänglighetsdirektiv just nu. just nu. Just det, så det tar upp väldigt mycket, inte bara vår uppmärksamhet, utan hela utvecklingsorganisationens egentligen. Ni har ett designsystemteam nu. Var det så? Hur kom du till det? Har du varit inne på designspåret och kommit in på det teamet? eller kommit från något annat spännande håll. Nja, jag har väl varit intresserad av designspåret lite grann. En gång i tiden för en 15 år sedan så tror jag att jag trädde in i utvecklingsvärlden ifrån att ha lekt lite grann med design. Det ligger någonstans i ryggmärgen även om jag inte är en designer eller UX:are på det sättet. Men jag tror väl att jag tycker att i de allra flesta tillfällen så tycker jag att den tekniska biten av det är det mest intressanta. Men lite bakgrund kring det är att vi har ju på jobbet och så är vi väl. Just nu är vi cirka 20-25 utvecklingsteam och jag har fått lite siffror här. 135 stycken utvecklare och testare. Där jag tror att, så det är ett par stycken. Ja, och jag vet inte, men majoriteten är ju utvecklare då. Vi sitter och jobbar på lite olika sätt och det ändrar sig lite över tid också. Men man jobbar ju ganska autonomt och man jobbar i ganska många olika appar. Vi har haft lite olika sätt hur vi levererar frontendapplikationer, Både internt och externt och till privata kunder, företagskunder och allting sånt. Det har varit väldigt många appar. De har ju en tendens att bli lite utdaterade, Man kanske kopierar en lösning som man gjorde där. Sen så klistrar man in det i den nya appen och ser man ändringarna där och sen blir det ju inkonsekvent Det var väl egentligen så det började 2018, hur många år sedan det nu är. Ja, det är ganska typ sju år sedan. Jag skulle säga tre. Ja, jag skulle också säga att... Latt efter 2020 är ändå samma år. Ja, men exakt, exakt. Då började vi lite inofficiellt helt enkelt. Ett gäng utvecklare som satte lite olika utvecklingsteam. Vi lyckades få att vi kunde sitta en eftermiddag i veckan eller något sånt och ta det och prenumerera lite grann. rent från allas eget intresse, så att säga? Ja, man hade ju sett det här behovet och sedan så tror jag att sedan dess så har våran design och UX-avdelning också Växt ganska rejält. på den tiden så var det inte lika många. Så vi hade ju ändå rätt nära dialog med dem och de såg ju om några det här problemet. Det kändes verkligen som att det inte finns någon röd tråd någonstans. Nej, men så då började vi liksom bara och sista, men vad är det vanligaste? För vi har ju inte heller fått någon kommitt men på att underhålla det här enligt något strukturerat. Nej, just det. Så då blev det så här. Men väldigt mycket handlar om formulär. Vi ska samla in data i ansökningsflöden och man ska göra överföringar och allt vad man nu gör. Så vi började i den änden egentligen och bara försöka liksom såhär, vi vet inte nödvändigtvis vad som är rätt. Vad som ser rätt ut, men det viktigaste är kanske att det ser likadant ut? Vi gjorde ju ett litet bibliotek som vi distribuerade med en internt npf-registry. Och sen så visste vi ju då att om vi fokuserar mer på API:t och inte tänker så mycket på att skylta med detaljer kring luckenfil, så kan vi ju ändå ganska flexibelt uppdatera det över tid när vi vet mer om vad som är rätt visuellt. Så det var så det började och det har egentligen hållit på så sedan dess fram till Q2 i 2024. Så första april där i krokarna så satte vi officiellt igång ett team. Men det här projektet har ju levt eller projekt, jag vet inte vad man ska kalla det, det har ju levt lite inofficiellt. Så det har ju varit såhär, periodvis har man hunnit jobba lite mer på det och periodvis har man inte hunnit jobba någonting alls på det. Men det har ändå varit i användning hos ett antal team sedan 2018. Det var helt enkelt ett NPM-paket med UI-komponenter då? Ja, exakt. Ganska begränsad dokumentation I beslutning till det då. Sättet som det skiljer sig idag är ju att vi Det är ju ett helhetsgrepp mer kring, designsystem omfattar ju mer än bara kod och design egentligen också. Man kan ju dra det till att det kan handla om copywriting, bildmaner och alla möjliga grejer. Och det där har vi ju inte riktigt en lösning för ännu, men nej. På sikt så hoppas vi att vi ska kunna centralisera det. Även om vi inte själva står för innehållet nödvändigtvis så ska man inte behöva liksom, ja men vart finns det här? Finns i sjön, typ. Och så får man läsa upp det. där man mer kanske kan ha en samlingsplats där man hittar både dokumentation relevant information som utvecklar designer. Men man kanske kan hitta till relaterade resurser också, även om de inte är skrivna där. Det var en sån intressant grej. Kände jag när jag började fundera inför vårt snack? Just det där med hur stort eller litet paraply är ordet designsystem. Känns som att på ett sätt så kan det bli hur brett som helst nästan. Och det finns väldigt mycket nyttigt som man kan baka in under det som du säger. Hur skriver man text? Det är det första man tänker på men det är ändå Det är verkligen en grej som dyker upp när det gäller att få saker att se ut och kännas på samma sätt över en massa olika saker man bygger. Ja, vad jag tror att du och jag jobbar ju på relativt liknande utmaningar. Bygger en del använder upplevelser i fronten interna applikationer. Precis, och ett helt gäng team som gör saker som Ja, men en idealvärld skulle nog se ut att fungera ganska exakt likadant, i många fall. Inte alla, men många. Just det här med Koppi till exempel, det känns ju som att det beror lite på. Jag tror att en intressant grej som vi kanske kan komma in på hur vi arbetar och samarbetar med vår UX och designavdelning nu och de som är dedikerade resurser i vårt nya team. Men historiskt så känns det som att det inte är helt ovanligt att det blir lite vattenfalligt. Ja. Vi kanske sitter i en pipeline där man har så mycket i pipelinen att utvecklarna sitter helt fokuserade på det. Och då blir det lite så att typ. affärsanalytiker och UX:are kanske då springer före på nästa grej och så blir det lite mer av en överlämning än vad man kanske skulle önska alla gånger. Och då är det ju ganska klassiskt då att man till exempel säger: Men vad händer om det blir fel då? Om man nu försöker skicka in det här och det inte funkar. downstream-tjänst där nere. Just det. Då är det ganska vanligt att man inte nödvändigtvis har tänkt på det i typ en designleverans och då är det jättevärdefullt och ha lite riktlinjer kring det och att vi kan försöka hjälpa till att det ändå blir konsekvent. att man behöver inte vara expert på copywriting, Utan man kan bara hitta lite resurser. och sen räcker det kanske en bra bit på vägen. Men jag tror att man kan fånga en del lågt hängande frukter på att vi kommer framåt utan att vi behöver fråga någon annan avdelning av hjälp. Jag har varit jätteintressant att utmana det här med kommunikationen eller flödena och få saker gjorda och ta tid. Som du sa precis i början där, det är väldigt lätt att man hamnar i det där läget. Ja men ibland blir det lite gjort och sen går jag en jättelång period och ingenting händer för att Nej. 17 andra saker som kanske både är och framförallt bedöms som viktigare just då? Ja, och det kanske man... Nu... Vi har ju hållit på med det här nu. Vi konstaterade att det var mer än tre år. Det känns som att få ett commitment på att kunna göra det här också. Det här har ju det här tillgänglighetsdirektivet varit. Det var ju lite det som var, ja men det var det som fick skjuts i den prioriteringen. För det är ju också så att en utav våra stora fokusområden är ju just tillgänglighet, och försöka dels baka in tillgänglighet där vi kan. Om det är då i vårt komponentbibliotek. Sen finns det ju delar av tillgängligheten om hur ett helt flöde hänger ihop Som är svårt att... Ja, just det. men det är ju en av de grejerna som jag tror fick organisationen att gå med på. Ja, men nu startar vi ett team kring det. och personligen velat ha ett team kring det i alla de här åren nu. Men nu har det äntligen skett, för det är ju så att tillgänglighet är ju viktigt, Men jag vet inte, man har kanske inte riktigt insett det, eller att man har tänkt att det är viktigt, men det måste ju också konkurrera med andra projekt. Och då finns det ju liksom, i bankvärlden så är det ju massa regulatoriska grejer och det är kanske stora systembyten och då är det ju ibland svårt att liksom, ja det här är viktigt, men tyvärr, vi hinner inte. Nej, precis. Det är fortfarande bara näst viktigast. Ja, exakt. Och det kanske är, jag tror att drivet av vår UX-avdelning så har vi ändå, jag tror att det var, Jag har skrivit ner lite siffror och lite information här. 2019 så började vi jobba lite mer dedikerat med tillgänglighet. Men det blev ju, då har vi ju samarbetspartners som är experter på det som kommer in och hjälper oss och så gör man en analys och översyn över våra flöden, men då blev det lite mer punktinsatser. Så jag tror inte vi lärde oss tillräckligt mycket för att ta det vidare nödvändigtvis, Utan man gjorde någon review och så åtgärdade man lite fel där. Jag tror inte vi lärde oss mindsetet hur vi ska utveckla tillgängligt, Utan det drevs nog mest av enskilda individer, typ av själar. I de olika teamen. Så det vi försöker göra nu tillsammans med det här projektet som då drivs parallellt som är tillgänglighetsprojektet egentligen. Det är ju att försöka få lite mer långsiktighet i det. Och inte se det som ett projekt som tar slut, utan att vi måste få in det i vårt arbetssätt mer. Och process. Ja, precis. Själva teamet för designsystem, hur stort är det ungefär? Ja, just nu ser vi två ut... Eller just nu, vi har samma uppställning sedan start. Två utvecklare är vi som har varit med och inofficiellt petat på det här Projö, Det som fanns innan, just det. Och sen så är vi faktiskt Vi är typ tre UX:are. En av våra UX:are är en fulltidsresurs Som är på sista designsystemet. Ja. Två av dem har lite andra åtaganden också. Men sen är vi en produktägare och det tillkom ju i samband med att vi startade teamet och tycker jag är kanon. För man är inte nödvändigtvis alltid så bra på det som utvecklare kanske. Det är ju det. Det är ju det. Designer. Man verkar skillnaden när man har en bra produktlägere på plats. Jaha, oj vad mycket mer rakt på sak och tydligt vissa grejer blev plötsligt. Ja, exakt. Bara att vi håller rätt riktning och inte... Ja, femmorna som utvecklar, du känner... Du kanske likadant, men det är ganska lätt att ramla ner i lite kaninhål ibland. Jo, jag har gjort det en gång kanske. Ja, jag har nog också kanske gjort det en eller två gånger. Och sen en teamchef har vi. Så vi är väl, ja, vad blir det? Typ fem. Nummer 57. Nej men så... Och det funkar ganska, det är ganska roligt för eftersom det är ett nystartat team och vi har ju kvar det här som hade tagits fram inofficiellt innan, Vi har ju inte så mycket att lägga sig. Det är väldigt mycket, liksom. Det är ju väldigt mycket greenfeel egentligen. Och man får ta reda på ganska intressanta grejer. Vi vet ju att vi vill göra underlätta för våra utvecklare och designkollegor framför allt. Det övergripande målet handlar väl om att vi vill bidra till att det blir effektivare produktutveckling. Sen så vill vi ju göra den här gamla, det som startade initiativet. Från början, att se till att det blir en konsekvent använder upplevelse och att vi liksom följer vår branding och att det ska bli lätt att göra rätt på det. Och sen är det ju då tillgänglighet som är här. Men det som är intressant är ju att vi har ju fått, Ja men vi har ju fått liksom upptäcka hur ska vi jobba i den här konstellationen och med den här produkten? För det blir ju en intern produkt. Ja, ja visst. Och det är ju väldigt kul eftersom att du har ju dina slutanvändare intill dig. Ja. Så det är väldigt mycket feedback. Vi har fått prova oss framåt, vi jobbar lite grann i kvartal. Det känns som att vi provar ett arbetssätt och sen så behåller vi det som känns bra inne i nästa kvartal. Och så kanske vi skruvar på något annat, men just det. På senaste kvartalen så har vi i alla fall, vi jobbar i två stycken arbetsmöten per vecka, Där vi försöker sitta hanson och jobba tillsammans. Både utvecklarna och UXA. Och det gör ju att det här samarbetet är mycket tätare än vad det var, Åtminstone de teamen jag var med i. Då känns det som att man kan ta vissa beslut som träffar både vår kodbas och och våran, i det här fallet, Figma. Och det känns som att det har varit väldigt värdefullt. Men ja, så ser teamet ut. Ja, just det. Det är så ni jobbar. Arbetsmöten. Två stycken och sen så jobbar man mer? Ja, på varsitt håll resten av. Ja, jag tror att det är lite speglar väl hur utvecklingsteamen jobbar också. Nu jobbar vi inte med de vanliga produkterna på samma sätt så jag kan väl inte svara exakt för hur genomsnittsupplevelsen är det såklart. utvecklingsteam. Men man är ju autonoma. Så man får ju liksom, vi vill ju jobba agilt. Och så alla team har väl i princip någon sin egen twist på vad det innebär. Så klart ceremonier. Vissa kör någon camban variant och andra kör sprintar och japp. Ja, visst. Det finns alla. Vad som passar just det teamet. Känner jag igen också? Väldigt svårt men precis. Vad äger, driver eller kontrollerar ert team kontra andra team? Jag tänker så här. Att ni gör en del komponenter förstår jag ju. Här kommer en standardkomponent för att göra den här saken. Blir det då att man drar in nya komponenter som tillhör det inom citationstecken, ett annat team förut? Hur funkar flödet mellan er och övriga team? Dels så fanns det ju ett antal komponenter som vi då förvaltar vidare. Ja, just det, utvecklar. Det handlar om att försöka snappa upp vilka behov vi har. Och att inte nödvändigtvis kommit alltför långt fram i tid utan att vi försöker vara lyhörda och snabbrörliga. Men komponenten är väl en ganska central del i det. blir det. Vi har fokat ganska mycket på dokumentationen kring det också. Det är bra. Men jag tycker personligen lite grann att det är en first class citesen i den leveransen också. Så att det är inte bara så. Det finns en hink med komponenter varsin hostafigur där. Utan att man försöker ha det i åtanke. Och i och med det så får vi bygga vår egen pipeline med hur vi levererar vår produkt. Våra produkter består ju på kodsidan av bibliotek som man lyfter in via NPM. Och sen så består den i tillägg av dokumentation. Och där, det har ju också varit en annan. Lite kul grej, för det har inte nödvändigtvis funnits en färdig pipeline för det, för de andra teamen har inte riktigt haft det behovet. Så där har man ju fått vara med och bygga upp det enligt de behoven man har. Det blir lite andra saker att tänka på där. Det här ska ju versionshanteras och versionshanteringen är ju någonting som är väldigt viktig för att säkerställa att det blir stabilt. Vi försöker förhålla oss till semantisk versionshantering och att man ska kunna lita på att saker och ting funkar Om någonting har breakats så ska man få reda på det och kunna ta hänsyn till det. Men annars så är det ju, jag tror att det där är också lite grann i rörelse. Vad är det vi kommer att äga som team? Vad är våra produkter egentligen? Det finns ju ganska mycket material som är utspritt på någon kunskapsbank här. bank här och sen så finns det något externt kemis där för något ändamål. Så jag tror i nuläget så är det mycket fokus på tillgänglighet. Så jag tror att jag tycker att det är lite intressant och spännande att jag vet inte riktigt exakt hur det kommer se ut. Jag tror att vi kommer försöka se till att lyssna på våra användare och forma det därefter egentligen. Det är väl då det blir bäst också? Ja och tillgängligheten om vi ska gå in lite mer i detalj på det så är det ju, för de som eventuellt inte vet det så är det ju ett ny lag. och den träder i kraft den 28 juni. Och det här vet jag att de som har varit drivande, de har ju sagt det, men förr eller senare så dyker det där datumet upp. Efter fem år kändes det som jättelugnt bort. Ja, ja, visst. Men nu är det ju all hands-on-deck. Se till att vi liksom. Man kan väl säga att det är en vidareutveckling av de lagkraven som redan gäller för offentlig sektor. Som man har varit inne på, myndigheter och sjukvård och sådär, så har ju de redan mycket av de här kraven. utökas det till att gälla privata aktörer också. Ja, okej. Så från visst håll kan man se det som en breddning av någonting som redan fanns? Ja, just det. Och sen är det väl, det är också en gräns, vilka som omfattas är också lite, det är lite luddigt. Och här vill jag brasklappa lite grann också. jag har ju försökt, liksom känner att jag har någorlunda koll på det här, Men det känns som att när det gäller alla de här, bara ta det jag säger men det är på salt. Ja men exakt, påstår att såhär funkar det och sen så kanske jag har missat någon paragraf. Allt det här är vår uppfattning utifrån det som vi har hört och sett och så där. Inte lagtolkad. Jag har försökt koka ner det till pragmatiskt. Vad är det som gäller? Just det. Men ja, så nu är det ett antal typer av tjänster som omfattas av det här. Det kommer ju på sikt att utökas till flera. Så träffas man inte av det här i nuläget så kommer man säkerligen att göra det inom relativt snar framtid. Och det betyder i praktiken att det finns ju en europeisk standard som är till för tillgänglighet och inkluderande i EU. Och en utav aspekterna, de allmänna kraven som man omfattas av, det är ju de här WCAG. Just som är någon sorts specifikation som spelar upp såhär. Det ska funka så här helt enkelt. färgkontraster och allt vad det är. Sen finns det lite branschspecifika krav. Som beroende på vad man är i för bransch så kan det vara extra saker som man måste tänka på. I vårt fall då som bank omfattas vi av begripligt språk. Och det betyder ju att det ska vara lätt att ta till sig innehållet. Det ska åtminstone finnas möjlighet att om någonting står på massa faktermer så ska man också kunna se det på något sätt som går att begripa även om man inte nödvändigtvis är i finansbranschen. Det är ju faktiskt ett underbart krav. Ja, jag tycker det också. Sen är det ju så att de bästa lösningarna för det här är ju lika tillgängliga för alla redan från början. Så att det inte blir någonting man bara lägger ett lager på lager. Exakt. Vill du ha lite mer till innan? Det här läget. Precis. Och sen är det lite administrativa krav. Så omfattas man av det här direktivet så måste man också arbeta med dokumentation Och liksom rapportera sina tillgänglighetsbrister. Och då finns det någonting som kallas för en tillgänglighetsredogörelse som man behöver ha då. Det är typ en listning någonstans på sin sida som hålls uppdaterad på det här är de bristerna som finns, förklara varför och länka om det finns något mera tillgängligt alternativ och lite sånt där. Och sen så tror jag också att man behöver nog ha en kommentarsfunktion så att användare av din tjänst ska kunna rapportera in det här om de stöter på något. Så det är lite grann visa, Vi är medvetna om vad vi klarar och inte klarar av att vi jobbar på det? Ja, just det. Om man nu kommer till vad det får för påföljder ifall man inte uppfyller de här kraven så tillgänglighetsredogörelsen är nog en ganska viktig del i det. Vi är medvetna om det och vi. Ja, just det. Vi är på bollen, typ. Just det. Jag fann att det fanns någon slags relaterad känsla i vissa delar när GDPR var på tapeten och höll på att införa. Det fanns ju jättestora stränga påföljder Men det fanns också en ton av att visar du att du jobbar aktivt med det här och rapporterar när ni har problem så kommer det att visa en rätt anda också. Ja men exakt. Så tolkar jag det i alla fall. Ja, men precis. Det känns ju lite som att även om jag tror att man förväntar sig väl bara Confliant med det här när 28 juni-inträdet, så går det ju säkert så här. Men vi har inte hunnit helt enkelt. Ja. Om man kan visa, om vi har tagit det här är det viktigaste i det här sammanhanget. Vi kan visa att vi har tagit det och att vi håller på med resten. Ja, men exakt, exakt. Sen så kanske man kan komma till den punkten. Vilka omfattas då? Det tycker jag verkar lite svårt. I vissa branscher känns det väldigt tydligt, typ e-handel. är ju en utav dem som omfattas av det här. Ja, det är rätt lätt att veta om man är e-handel eller inte. Exakt, och banktjänster. Det känns jättelätt. Men sen är det så här elektroniska kommunikationstjänster. Och det är också så här, det finns lite exempel. Jag tror vi kan säkert lägga in några bra länkar i beskrivningen också. Ja, det fungerar. Från Post och telestyrelsen så har de någon sorts introduktion till Det här är EU:s tillgänglighetsdirektiv. och då säger de elektroniska kommunikationstjänster som till exempel uppkoppling och abonnemang, Telefonsamtal, e-post, sms, chatt, videosamtalstjänster. Men det kan säkert vara fler. Ja, jag tänker det. Det kan nog bli ganska brett. Ja, men exakt. Och sen så här streamingtjänster, medietjänster typ. Det är väl en av dem. Och sen så är det vissa tjänster för persontransporter, vissa tjänster. Ja, så det lämnar utrymme för tolkning. Banktjänsten nämnde vi och så e-böcker behöver vara tillgängliga och e-handelstjänster. Det är en ganska stor sektor. Ja, som omfattas. Sen tror jag att det är vissa fysiska, typ om man har betalningsterminaler eller olika typer av automater, så tror jag att de också omfattas. Men jag för mig att jag läste någonstans att har man liksom en sådan fysisk grej ute så tror jag att det finns någon regel kring att om den står där i dag så kan den stå kvar tills den är en viss Ålder eller något sådant. sansat. Man kan säkert försöka utbilda sig i om man omfattas eller inte. Men jag skulle väl förespråka att man kanske ändå tänker på tillgängligheten. Ja. För mig så har det varit lite grann. Jag har inte riktigt varit så bra att tänka på tillgängligheten historiskt, Men ju mer man har fokuserat på det så har det ju låst upp lite grann. Det är typ ett nytt gränssnitt i din app. Ja, det är det som är så spännande. Ju när du får in vanan att jag har kortkommandot för att starta skärmläsaren. Jag kan de vanliga navigeringssätten. Då får du helt plötsligt ett nytt gränssnitt för din app Som man kan se till att få en bra användarupplevelse på. För mig i alla fall så är det jättemotiverande. Jag tycker det är jättekul att ändå såhär, för det kan ju vara helt förfärligt. Det finns jättemånga roliga exempel när det är så här: Ja, men du kan typ hoppa igenom 48 element som jag säger. Bild, bild, bild. Ganska svårt att veta vad. Vad är det då? Ja, men exakt. Exakt. Så jag tycker att det känns som att det är viktigt utan tvekan, Men det är också någonting som jag tycker är roligt. Det känns som att man har låst upp en ny liten dimension här i sitt utvecklande och vad man levererar när det gäller bra användarupplevelse. Ja, men exakt. Exakt. Man får lite trevliga incitament att bygga saker på, mer genomtänkta sätt och... Ja, man gjorde första versionen av sin webbapplikation och så är allting en div med olika styling på. Stajling på. Ja men exakt. Och sen ska man på att ha en AHF, en vanlig länk. Ibland är det inte bara bra för att, för tillgänglighet är faktiskt ganska bra för alla att se att Här har vi en vanlig länk. Den funkar som en vanlig länk. Den ser ut som en vanlig länk. Ja, men exakt. Alla sådana grejer. Den går att navigera och har vi gjort det bra och navigerar man skärmläsare så blir det ofta bra att navigera med tangentbordet också. Bara att kunna tabba igenom saken i en vettig ordning är ju väldigt nyttigt för precis alla. Just det, jag tror att det är en sån här grej som man kanske inte egentligen tänker knappt på när man sitter och utvecklar. När man sitter och utvecklar så blir man lite så här hemmablind också. För du är inte nödvändigtvis den tilltänkta målgruppen för den appen du utvecklar. Utan du... Jag ska bara utveckla den. Jag tror att man, du har ju säkert använt olika system även om de är webbaserade, Man bara säger att alla de här tangentbords, liksom tabba, att navigera med olika sorters kortkommandon, eller appealtangenter och så vidare. Det bara funkar. Det är ju en trevlig överraskning. Precis, och det skulle ju lika gärna kunna vara default. Ja. Ja men exakt, det borde vara lite jobb att sabba till. Ja, jag tror att för vår del, en av det som vi försöker bidra med när det gäller utvecklingen, Alla kanske inte ska behöva vara tillgänglighetsexperter, för att vi ska kunna leverera ett bra resultat. Dels baka in den när det finns och går, men också uppmana kanske till att man har det. insättet, men redan när du sitter i lokal utveckling, tryck igång skärmläsaren. Jag tror att man behöver gå någon liten crash course i hur skärmläsaren funkar Så den kan vara ganska överväldigande när man sätter igång den. Man har ju hört liksom när den drar igång på liksom 180 kilometer i timmen och spottar ur massa information. Javisst, det är så proffsen använder den. Ja, och man kan ju ställa in den precis så som man vill. Jag tror att en av de viktigaste, nu sitter jag på Mac, det är säkert lite olika beroende på vilken, och då använder jag den inbyggda voice-over. Men jag tror att den viktigaste tangenten är kontrolltangenten. För den får den att bara vara tyst. Den liksom pausar uppläsningen. Så när du sätter igång den och du bara vill få, Nu måste jag tänka här. Då kan man alltid trycka in kontroll, innan man gör sin nästa grej. Ja. Jag tror att det är nog inte mer än kanske fem, sex, sju stycken kommandon. Man behöver kunna för att kunna använda den effektivt nog för att fånga mycket av de här lågtängande frukterna. Och då kanske det också är så här, gör man det redan i den lokala utvecklingen, då kanske majoriteten av det som finns i någon läskig lång kravlista, Som är två kilometer lång. Kanske majoriteten av det är redan löst. Ja. Sen kanske man, de här som är lite mindre problem som är lite svårare att upptäcka, Dem kan man säkert behöva åtgärda ändå när det är någon sorts testprocess eller review senare. Jag tror verkligen att om du knappar runt i det du utvecklar lokalt med tangentbordet och ser till att du kan komma åt allting, Du kan fylla i allting och du öppnas i någon modal eller någonting så sitter fokus rätt och du hamnar inte plötsligt bakom modalen. När den stängs så är jag kvar där du var. behöver inte navigera genom hela hjulet igen. Och att liksom bara kunna slå igång en självlösare i 45 sekunder och bara liksom Det känns som att det makar käns för mig, då makar det förmodligen hyfsat sens för andra. Sen så är det ju också, visst är man proffsanvändare av det här. Så kan det hända att det finns insikter som man själv inte kan ännu. Jag tror målet är inte att man ska täcka 100% av alla problem som kan uppstå. Utan det är bara att få de lågt hängande frukterna. Det går att använda. Ja, precis. Ett snabbt och jättestort tack till alla som stöttar oss på koffei. Du kan bli en av dem genom att surfa in på kobindestrakfi.com/kodsnack och slanga iväg antingen en engångssumma eller ett månadsvis stöd. Stödjer oss på nivån kaffedrickare för fem euro eller mer i månaden så får du ett gäng trevliga klistermärken i brevlådan. Stödjer du oss på nivån Barista för tio euro eller mer i månaden så får du dessutom, förutom klistermärkena, ett stort tack, precis här. Tusen tack till Michelle, Albin Groen, Anders Legell, Brother Ingo och Tobbe Lundberg. Alla ni som stöder oss hjälper till att göra podden möjlig och ju fler ni blir desto bättre podd kan vi göra. Ibland har vi sponsorer i podden, men det är faktiskt ert stöd som gör att vi börjar kunna täcka kostnaderna för podden varje månad. Till stöd av oss på andra sätt så går det naturligtvis utmärkt att recensera podden i din poddspelare. Sätt i betyg eller en stjärna, oavsett om det är Spotify, Apple, Spodicastrull eller någon helt annan app, Eller berätta helt enkelt om ett avsnitt för någon som du tror skulle gilla podden Och just nu har vi precis släppt ett helt nytt sätt att stötta. Vi har ett klistermärke till försäljning. I Koffebutiken så finns det tre packlistermärken om livet som agile lokförare, Framin provocerade i en milt urspårad diskussionstråd häromveckan. Visa ditt stöd för alla sejf-utövare där ute och få den där sköna känslan i magen av att bidra till Kodsnacks fortsätta resa. Men kom ihåg, du är en fantastisk person, oavsett om du stöttar oss eller ej. Jag antar att det fortfarande gäller att man får rätt mycket gratis, så att säga, av att använda standardkomponenter också istället för att finna sina egna. Ja, du tänker på inbyggda element. Ja, men precis. Det känns som en grej som fortfarande drivs för bevingivningarna. Massor de flöder med ena mellan rummet. Men gör inte din egen ersättning för en knapp eller något i onödan Utan se till att det verkligen, verkligen behövs. och då har du rätt mycket att implementera om det ska bli lika tillgängligt som en standard. så ja, om du går divhållet, Ja, som en äckelskapa. Nej men så är det definitivt. Det finns ju många inbyggda element som är mer semantiska, som man kan luta sig mot. Men sen är det ju lite så. Ja, det beror lite på. När det kommer till de här tillgänglighetskraven och just WCAG Kanske specifikt då så jobbar man ju i olika nivåer. Då är det liksom A, dubbel A och trippel A. Jag tror, om jag inte minns fel, någon får rätta mig om jag har spelat. att den här nivån som man ska uppnå är dubbel A. Det kan hända att det skiljer sig lite beroende på vilken typ av problem det är. Tiple-A är då den högsta ambitionsnivån. Jag menar, det kan man ju lika gärna sikta på då om man... Precis, orimligt. Jag har kollat lite på BCAG några gånger och det känns som att den högsta nivån kan vara ganska utmanande. ganska ofta har jag för mig. Ja, men jag tror säkert att ha en balans där, så att man inte... Ja, men A var väl ofta ganska rimliga. Man kan säga att det här förstår jag, dels vad jag ska göra och varför och dels hur jag kommer dit. Och sen dubbelavvaktare. Ja men det här är samma fast mer ambitiöst på något sätt. Mm. Mm. Oj, nu kan det bli mycket. Ja, nej men exakt. Jag tror att det som du säger stämmer ju 100% att återuppfinna hjulet om man inte måste. Jag vet inte, när det kommer till de komponenterna som vi levererar så. Försöker vi ju inte återuppfinna hjulet, även om det är en komponent som inte nödvändigtvis går att bara bygga. Den finns inte i browsern. Det kanske är någon lite mer interaktiv komponent som man kräver. Nu finns det ett inputfält för datum, men vi kanske behöver ha ett sätt att man ska kunna ange en range av datum och vi vill ha det som en bra upplevelse. Så man får, om man ska bocka en flygbiljett eller hotellnatt eller något sånt där. Exakt. Och då måste man ju gå lite utanför vad som finns inbyggt. Och det som vi försöker tänka på där och som jag väl kanske skulle uppmana ifall det är någon annan som sitter med liknande utmaningar. Även om det är så att man det här finns kanske en färdig komponent för i något oftershjälfbibliotek ut i ekosystemet. så försöker vi ändå säga ja, det kanske är rimligt för oss att bara gå på den lösningen. Men då sättet vi tänker på det då är att sätta liksom ett eget interface av, Ja, men hur ska IT se ut? Och det kan vi säkert inspireras av hur det ser ut där. Men även om det är näst intill en etthetmattning så är det en explicit liksom. Vi lägger in det för att då blir det liksom inte ett implicit beroende på just den komponenten. Då skulle vi ju sen kunna se så här. Vill vi bygga den kasten eller behöver vi bygga den kasten? Finns det kommer det en ny aktör eller något nytt bibliotek som funkar ännu bättre. Så det är väl en utav de nyckelstrategierna som vi försöker tillämpa. Vad det än är för komponent så är API:et, det är lite heligt. Det försöker vi se till att vi har en uppfattning om hur vi... Och där är det ju såklart, det är svårt att säkerställa att det blir så. Är det intuitivt? Är det flexibelt? Och flexibelt så menar jag bara, är det flexibelt för att vi kanske vill ändra vår lösning under huven på sikt då? Precis. Jag har en kollega som jobbar rätt mycket med våra komponenter. Vi har ett litet sånt projekt också. Han har ju sagt exakt samma grej. Men vi ska se till att slå in det för att vi använder ett designbibliotek nu Ganska mycket. Men hans ambition är ju att allting som vi har som gemensamma komponenter ska vara inslaget precis så att vi inte blir beroende av bibliotek. För just nu sitter vi stenhårt fast i framförallt i en del äldre projekt. Katastrof att försöka uppdatera en mady. Exakt och jag menar det skulle det väl. Även om du då tar den approachen så kanske majoriteten av biblioteket ändå använder någonting som är färdigt. Ja, men då är det i alla fall, alltså förlitar du dig helt och hållet på deras API. Då sitter det lite i händerna på dem också. Nu har vi gjort en ny majoruppdatering som breakar en massa grejer. Ja. Då har man åtminstone en chans att... Ja, men motverka det genom att säga, okej, kan vi då, om vi nu inte bara kan byta komponent i samband med det, kan vi åtminstone se till att vårt API som vi tillhandahåller går att mappa om till vad som än är ändrat. Så det tycker jag är... Ja men det är typ en key take away. i sammanhanget. Sen när det gäller lite grann så som vi snackade om med hur vi försöker snappa upp behoven ifrån organisationen. Så jag tror ju, och där har vi ju i samband med UX också, det som är intressant med våra täta samarbete är att man kommer ifrån olika perspektiv. Från kodsidan så har vi ett visst perspektiv och särskilt när det gäller versionshanterade kod som liksom, det finns vissa spelregler helt enkelt. Precis. på designsidan så kanske det inte riktigt har varit lika känsligt med sånt, utan det är liksom, Då har vi behövt närma oss varandra och synka sinsemellan. Vi kan inte springa före alla gånger på designsidan eller bara göra en ändring för det är inte riktigt så det funkar på kodsidan. Nej, precis. Men sen så tror jag att en annan grej som vi försöker vara i synk kring, det är ju att man vill ju att det ska vara konsekvent. Och därmed så vill man ju att det ska finnas vissa konstrains kanske så att det inte är så att vi kan göra på helt olika sätt i olika appar. Det där är intressant, ja. Men jag tycker personligen så tycker jag att... Alltså, under de här åren så har man ju ändå både konsumerat ganska mycket innehåll ifrån ekosystemet och ifrån diverse thought-leaders och så vidare. Min uppfattning är att den här flexibiliteten behöver vara lite större än vad man tror ändå. Någonstans säger jag till någonting. Ja men det är så trist när du sitter där i din app och så är det så här. Jag behöver måla lite utanför linjerna, men det går inte. Då får jag bara kasta ut allt och göra det helt från scratch. Det blir ju inte hållbart det heller. På så sätt ser vi att en viss flexibilitet behöver ändå finnas i alla komponenter. Så sättet vi ser det på är ju typ att det är lite mer Med high level-komponenter är det lite mer low level-komponenter. Och det finns ju en herrans massa namn på sådana typer av atomic design eller vad som helst. Vi försöker tänka lite enklare på det. En high level komponent. är ett lite mer specifikt användar liksom ett ljuscase. Man kan använda det med ganska begränsat hopp i. Ganska mycket av Opinions inbakade. Det gör ju också att det är ganska flexibelt för oss att se till att det fortsätter att funka utan större ändringar. vartefter vi märker att för då kan vi lösa kanske 80 % av ett visst behov. Sen så kommer vi till de andra behoven och då kan vi ju liksom utifrån det vi vet då Så kan vi börja bryta ner den till lite mera low-level-komponenter. Kanske man kan, då kommer ofta de här insikterna om API-design, som hade vi tagit det här valet så hade vi ju kanske kunnat stödja utan att man går alltför långt ner i just det tida behov vi inte vet att vi har. Vissa sådana där grejer blir ändå tydliga. Rent intuitivt känns det som att det här valet hade varit flexibelt, Även om vi ser framför oss att vi vill göra lite annorlunda också i framtiden. Men om man säger hi-level i det här fallet, är det typ en sån avancerad datumväljare som vi pratade om innan? Är det en high level? Ja, det är svårt med om man drar gränsen också. Självklart. Vi ser det som tänkt det på tabeller till exempel och vi har inte supermånga tabeller ännu i biblioteket. Jag bara tar det som ett exempel för där kan man se framför sig att en Long level version av sådana komponenter. mappa väldigt nära hur det funkar i HTML:en så att du liksom säger: Du jobbar med Rose och Hedder och olika typer av celler och så vidare. Men en high level komponent kanske tar en lista av data som den kan mappa om till det där under huven. För ganska många ljuscases så räcker det. Då är det ganska märkligt, du kan använda en komponent, skicka in datan som du kanske måste bara skruva lite grann på. Och sen så får den ta med. Och istället för att, javisst, då ska jag göra typ 88 rader kod här för att bara göra min tabell med att mappa igenom saker och så vidare. Så det är väl ett exempel? Mm. Ett annat exempel är kanske att när man jobbar med inmatningsfält i formulär så består ju dem under huven av ganska, alltså de är ju rätt nära elementen i browsern som input och så vidare. Till exempel en komponent som är en textfield då. Då kombinerar den själva inputfältet med ett sätt att sätta en label på den och ett valideringsfel, Så sköter ju den om kopplingarna där sinsemellan under huven. Labour blir associerad med inputfältet och valideringsfelet också. Utan att du som konsument behöver liksom såhär, men hur var det nu? Ska den vara Aria label biale? Sådana för. Så det är det jag tänker på. tänker på, men jag tror att vi har stött på många gånger att man säger: Är det här en hyer level abstraction? Men till slut så kanske man hamnar i någon Atomic Design ändå. Jo, men kanske både och. Det är en ständig utmaning att få till den balansen. Ja, men det här kan jag göra en jättefin komponent. Men jag behöver skicka in 300 saker till den för att den ska funka. Kan jag tänka om i det här så jag slipper det? Ja men då kanske man, på en sån härilevel. Jag vet inte vem det var som hade ett sånt tak någon gång. Men att som pratade just om Opea Design på någon konferens. Man har ju sett exempel på en react-komponent då som har typ 38 props. För att man har liksom byggt på. Vart efter. Ja just det, vi måste stödja det här också. Då är det bättre att separera det till helt olika komponenter. Så att det blir lättare att underhålla över tid. Så det är väl lite av de tankarna. tankarna och det är mycket av det i common sense men delar av det har man ju liksom på något sätt absorberat under de här åren som har stött lite mot det här, även om det inte har varit ens huvudsakliga arbetsuppgifter. Nej men precis. Det finns ju ett stort värde också i att få sådant som du säger, kommande sense-grejer, att få dem uttalade och utskrivna. Det är ju en väldigt stor nytta i sig, för annars är det ju någon i teamendal som tycker att något lite annorlunda är det. Det här är väl kommen sen, så har man plötsligt dragit iväg på två spår igen. Fast man inte var avsikten. Och en utmaning är ju att, som jag nämnde där, vi två som är utvecklade i teamet just nu, har ju jobbat med det här innan. Frågan är vad som är inne i vår ryggmärg. Jag tror att det kan finnas en utmaning är ju att försöka få ner det här på ett enkelt och överskådligt sätt. Det här är ett mindset som vi tillämpar. För det blir ju svårt. Jag vet faktiskt inte riktigt var gränsen går. Vart lämnar det ena järnhälvan på oss två och vart möter det någon dokumentationssida någonstans. Där har vi säkert ett jobb att göra. Om man ser till framtiden och att man skulle omborda någon ny. Någon försvinner och så vidare. försöka grundprinciperna som man på något sätt lutar sig mot nu, Som säkert kan ändras också såklart. Här är det vi förhåller oss till nu. Istället för att ha en uppsättning regler som blir omfattande och komplicerade och grannlära, så är det såhär: Vi försöker ha några grundläggande principer som vi tänker på. När vi tar fram komponenter och vad vi än tar fram egentligen. Och lyckas man få ner sånt i text eller bilder, vilket material den är, då har man något som är väldigt nyttigt. Som du sa innan. Allt man levererar är inte bara komponenter, utan informationen runtomkring kan ju vara supervärdefull. Även om den är svår att få fatt i ibland. Det är ju också en intressant grej, för att ibland våra utvecklingsteam så sitter majoriteten hos dem just nu och jobbar i React-applikationen. Och det har ju då pragmatiskt sett varit våran... Alltså det var så det började och det är fortfarande så. Det betyder ju att jobbar man i något annat än React och jobbar man i mobilappen eller jobbar man i något av de andra bolagen som ingår i samma koncern. så kan man inte nödvändigtvis ta del av komponenterna. För de är ju lite specifika. Just det. Så då blir ju riktlinjer och liksom designtoken så sånt blir ju desto viktigare. Och sen så är det ju såklart också jätteintressant att fundera på Hur skulle vi kunna brygga gapet mellan olika ramverk och kanske till och med olika plattformar? Men hittills, teamet har ju varit verksamt i tre kvartal ungefär nu. så vi har inte känt att det känns inte så pragmatiskt att börja gå utanför för till något ramverksagnostiskt. När så stor procentandel av allihopa ändå sitter, Liksom, nej, det blir mer React. Men det är ju definitivt en fråga för nära framtid, förmodligen. Ja, men det är som du säger, det är lågt hängande frukt igen. Vad är vettigt att börja med? Vad får vi stor utdelning på det? men det kanske inte är att skriva ett generellt dokument för alla typer av gränssnitt i... Nej men exakt, ser man det håller man sig på webben och tänker att såhär: Men hur kan vi stödja, vi vill ju förmodligen, eller vi kanske inte vill och kommer jobba med React i en massa år fram. Det kanske vi gör. Men då kommer man ju onekligen att tänka på sådant som webbcomponents. Webkomponents. Jag tycker också, där är det också lite svårt, för jag tycker när man läser läser de webbkomponenterna. Så där är det också ganska polariserat. Ja, man hör liksom used the platform-gänget och så hör man Library, eller framework authers. Jag tycker det blir lite svårt för det känns som att det är därför jag har varit lite försiktig med att skynda mig in i det. Jobbar ju ändå i huvudsak med React. Då vore det ju synd om man ska behöva hoppa genom en massa för att webbkomponens React ska samspela. Ja men eller hur? Konvoljens låter ju så bra på pappret. Men är det så bra i praktiken? Ja. Man kommer till alla komplexa detaljer som tjära och dem och hur lirar ramverken och domen egentligen. För många av ramverken går ju en annan väg när det gäller hur de renderar appar. Ja, precis. Som är lite mera, vad är det man kallar det? Typ såhär: Lazy, rendard medan domen traditionellt är eagley, rendard liksom. Samspelar det verkligen? Det kanske är liksom, jag har nog inte helt satt mig fullständigt in i det, Men det är definitivt någonting som vi har lust att titta på lite sen. Det kan hända att delar av utbudet av komponenter funkar kanon summarab component, om de är liksom längre. De är ganska enskilda. Det är liksom ingen komponent som rappar en massa annat. Utan det kanske är typ en date picker. Eller någonting som är en Leaf-node typ i hierarkin av alla. Ja, just det. Ja, nej, det känns inte nödvändigtvis som en Silver Bullet. tillbörbullet. Men vi vill ändå utforska det. Ja. Jag tror att tittar man i ekosystemet bara i Sverige av andra designsystem, Det gör vi ju själva mycket också. Det finns ju liksom i Arbetsförmedlingen och SJ har vi inspirerats ganska mycket av. Så de kan vara så du får in och titta på. Ja, SJ har, jag tror att de relativt nyligen har gjort ett omtag på sin, jag vet inte, det är någon SJ-design eller något sånt. Så de har gjort ett bra arbete. Och det kan man hämta mycket inspiration från. Men tar man vissa andra så vet jag inte, jag ska inte svära på hur de gör kring det. men vissa andra kör ju 100% webbkomponens. Jaha, de gör det? Det funkar säkert jättebra. Men jag tror att vi får utforska det i framtiden helt enkelt och se vad det är. Sen vet jag inte. Det är inte helt otänkbart att landskapet ändrar sig lite grann heller. Nu när AI på stort intåg och utvecklingen går så pass snabbt som det gör. Precis, det var intressant för det sa du ju precis innan vi började spela in här. Det kan ju mycket väl komma att påverka. Ja, vad ni bygger och vad man gör och hur. Det var en sån grej som jag inte hade slagits av förrän du sa det. Nej, jag vet inte om jag hade slagits av det själv. För några veckor sedan heller, men vi har pratat lite mer om det, för det har ju säkert inte gått någon förbi att det händer saker på AI. Kanske från utvecklarperspektiv så har man ju traditionellt. Man har kanske tänkt på vad det betyder för mig? Det är det här för mitt yrke. Men om man bortser från det så tänker jag att våra användare som vi bygger tjänster och appar för idag. Hur ser deras interaktion med de apparna ut i framtiden? delar av det kommer ju säkert att övergå till att vara någon sorts assistent, Man kanske pratar och ber om eller chattar eller någonting. Så vissa sådana här stora komplexa flöden. deklarationer eller du ska ansöka om bolån eller vad det nu än är. Det kan ju vara ganska omfattande och komplexa formulär. Det kanske är någonting som skulle vara jättebra som ett chattflöde i framtiden. för då kan du ställa frågor under tiden. Om det är någonting som du undrar. Men sen tror jag personligen att vi kommer säkerligen att ha kvar grafiska gränssnitt för diverse grejer. I vår interna produkt och dess framtid så blir det ju någonting som man har kommit underfund med nu. men nu att det här måste vi ändå tänka på. Hur ser framtiden ut kring det? Ja just det. Vart är vi på väg? Det finns ju liksom så här, vad är det de kallar det? "Computary Vision" finns det. Visserligen är det typ att datorn tar skärmdumpar och faktiskt navigerar. Då behöver vi ändå ha ett gränssnitt som... Det är ju bara bra då om det är tydligt och tillgängligt. Ja, men exakt, tillgängligheten lönar sig igen. Ja, men exakt. Och det är klart, det måste väl kunna finnas någon aspekt också där det blir andra interaktioner Jag känner att man kanske vill presentera saker på andra sätt. Det kanske får ett annat behov av visningskomponenter som kan visas tagna ur sitt sammanhang. Det är inte så att vi har ett jättestort formulär, men jag vill presentera resultatet och då har jag resultatkomponenten, men jag har inte resten av... Nej, exakt. informationen runt omkring? Man kanske vill integrera inmatningsfält i det här flödet också, istället för att allt hela tiden ska vara en fritext och typ en GPT-rapper. Så känns det. Men det kanske är en mix av båda världarna. Ja. Men jag tycker att det är svårt att veta vart vi är på väg. Det är väldigt spännande att se och det är väl lite så som vi snackade om innan. Man får försöka vara snabb på att inte sitta inlåst i. Så nu jobbar vi med det här i två år och sen ser vi hur det blir med det. Utan att man är snabbt rörlig och håller örat mot rälsen. Exakt. Det blir nästan mer intressant om man tänker så också, Man inser att det kan komma sådana grejer. Det finns fler aspekter att tänka på än bara de som man har framför sig precis nu. Ja, exakt. Och det tror jag väl gäller, alltså om man går in på temat med AI och utveckling också. Också att, äh, där tycker jag också att det är lite svårt att veta. Precis som i webbcompownen så är det också ganska polariserande åsikter om det. Det är liksom all-in eller all-out. Och vem ska man tro på? har de som är åt ena hållet i alla andra hållet ett incitament kanske att sälja si eller så. Javisst. Vi har ju använt AI framförallt under en längre stund nu för dokumentation. För att försöka hitta ett konsekvent och professionellt språk, Men också lite blank canvas-grej. att man får, vi ska dokumentera en knapp, Eller vi ska dokumentera en komponent som gör det här. Ge mig ett utkast. Och så tar vi det därifrån liksom. Ja, just det, men något att börja med. Jag tror att min personliga resa när det gäller AI-assisterad utveckling har varit så här att man har fått den här wow-faktorn. Och sen har den på något sätt efterföljts av en... Typ att den kör fast. Man bråkar med den här AI:n för att komma framåt. Men ju mer man fortsätter, ju mer utifrån sina tioner och så blir det. Ja men exakt, exakt. Väldigt bra beskrivning. Men den har ju kommit i omgångar också. Nu finns det ju ännu bättre integration mellan en AI-agent och en editor till exempel. Och det har också blivit en wow-faktor, men det känns också som att man kommer till, Man förstår ju att när den har den här tjejen av såtgrejen att den kan prompta sig själva, prova, prompta sig själva. och krams och så vidare. förstår man ju att resultatet blir mer träffsäkert. Men det känns ju någonstans också som i slutändan att hur de fungerar gissar sig ändå till vad som är rimligt att göra härnäst. så det känns som att hittills har jag fått några sådana där wow-faktorer, men ändå känt i slutändan av när det har gått två dagar, Den lilla hallroom-fejsen är över. Då stöter man på de här friktionerna. Ja men exakt. Det tar stopp på ungefär samma stil som sist. Fast på den liten nu, ja. Jag känner dem väldigt mycket så också. Och samtidigt så pratar jag ju med folk, genom äldre rum, som verkligen har, det känns som att de verkligen har hittat arbetssätt ihop med AI, som verkligen funkar för dem. Och de blir genuint mycket snabbare på att göra saker. Jobba på det sättet. Det kanske är ett sätt som inte alls passar mig, För att jag är gammaldags och vill sitta och titta på koden Utan det blir störda förslag mitt i eller? Nej, men det är en av de grejerna som jag tycker är tråkigast med det. Jag vill ju prova, för jag tror också att så här, i någon grad så kommer väl det här, man kommer väl nästan vara så illa tvungen att använda det för att behålla en viss produktivitet kanske. Sen tror jag inte att man behöver förlita sig på det helt och hållet. Nej, det är ju frågan. Precis, det är frågan. Jag tänker så här för min del. Jag jobbar ju i Vim och jag tycker det är äldre, ni och Vim specifikt. Jag älskar ju liksom att skriva. Jag tycker det är det i sig är så kul. Men den, när man jobbar i terminalen, så är det inte nödvändigtvis så att Det är inte där ny funktionalitet kring det här kommer först. Och då blir man så här, okej, ska jag testa någon nya? Det tar jag för att prova. Men liksom, jag tror jag delar din åsikt. Men jag vill ju typ sitta utan distraktioner och bara få göra det som. För det ger mig glädje liksom. Ja, och samtidigt så är det ju onekligen så att när jag har Copilot påslagen i Wiechels studiecode. Jag vill ju kanske egentligen inte ha så mycket av intelligensen. Men däremot att den ibland funkar som en väldigt, väldigt mycket smartare autokomplettering. Spara tid helt enkelt. Det sparar mig ju lite tid då och då. Hjälper med att avsluta en grej. samtidigt hålla tankegivet. Så det är väldigt så balansgång. Det är både störande och lite hjälpsamt samtidigt. Ja, men exakt. Det är intressant. Det kan vara mycket frustrerande också? Ja, visst. Jag menar, på mera cyniska humör så kan jag tänka mig att om tillräckligt många går tillräckligt hårt in på AI utvecklingen, så kan vi vara Några andra som sitter i törnen och känner storkovan på att vi skriver väldigt pålitliga små saker med minsta möjliga kod som jag har handhantverksmässigt skriven. Hur mycket mer förutsägbar? Jo, nej men precis, för det är väl också en av aspekterna, både när det gäller liksom... Ja men att producera kod kanske är en aspekt i sig, men säg alla de här bildgenereringarna. Det är inte som att du får samma resultat. Det är samma fråga. Det blir ju lite svårt. Vad är det egentligen som kommer ut? Det kommer säkert funka, men det är liksom, det är där i den ballparken. Det är som att prata med någon slags drömgenerator. Det händer något i en dröm och så tror man att det här är samma Plötsligt är allting runt omkring ändan. Nej, exakt, exakt. Det kommer väl vara viktigt att fortsätta vara nyfiken på det i alla fall så att man inte frånskriver det helt och hållet. Nej men precis. använda det till en rimlig grad där det känns som att det gynnar den. Och inte att man liksom bara till slut sitter då. Vem vet? Vart är vi på väg? Nej, precis. Visst stämmer det av igen om två år och se vad som faktiskt händer Ja. Något mer vi borde få med innan vi avslutar för idag? Jätteintressant. Ja, nej jag tror inte det. Jag tror vi har varit inom det mesta som jag har i tankarna. Det är väl i så fall, jag tror att det finns några länkar som vi kanske skulle kunna lägga in i någon beskrivning för konstnärer. Ja, men exakt. Lägger ner massor med länkar, inklusive till SJs designsystem också. Jag tycker trivsamt att de har gjort en sajt för sitt designsystem som bara visar komponenter. Den känns samtidigt 100% SJ. De har lyckats få till en enhetlig känsla på det på ett ganska steam-sätt. Ja, men det är också så här. Det är lite powermove att läggas in. Faktiskt, publikt. Det känns som att så här. Vi hade säkert också kunnat tänka oss att göra det i framtiden, men vi har inte vågat göra det ännu. Det har inte tillräckligt skyltfönstervänligt material kanske? Nej, jag kan helt förstå resonemanget. Men som sagt, vi länkar in sånt också. Och om du kommer på några fler grejer som vi borde länka med Så tar vi med dem också. Folk massvis att titta på. Jättebra. Ja men då så. Tack så jättemycket Johan för att du ville vara med. Ja, tack för att jag fick vara med. Tack för att just du lyssnar på kodsnack. Och du vill stödja oss? Varför inte tipsa en bekant om podden? eller lämna en recension i till exempel iTunes eller något annat ställe där det går att sätta betyg på poddar. Du kan också stödja oss genom att köpa oss en kopp kaffe på koffei, Kobindelsefi.kom/kodsnack Alla pengar går direkt till att göra podden bättre och trevligare. Jag kommer också hänga i vår slaktkanal. Länk finns på kodsnack.se, precis som alla andra länkar och all annan info kopplad till varje avsnitt. Sist men inte minst Finns det också en länk till vår spradge-butik där du kan köpa tröjor och andra prylar med kodsnacktryck? Återigen, tusen tack för att du lyssnar. Det har fått den här vägen att drömma. Men en annan serie är den mest tillfredsställande jämförelsen jag någonsin sett. Inga nio tusen datorer har någonsin gjort misstag eller förföljt informationen.