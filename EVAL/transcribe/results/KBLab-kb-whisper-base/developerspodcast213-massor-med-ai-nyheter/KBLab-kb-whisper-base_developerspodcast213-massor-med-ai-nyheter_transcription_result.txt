Jag minns att vi hade en kuva person då, som ibland gick i taket över det här, för att det var såhär: Nu har du ju gjort massa ändringar. Hur vet du att det här funkar? Och det här smögs alltid med lite för QA-personen. Du lyssnar på Developers, podden där du får följa med oss, Sofia och Madde, på allt inom mjukvaruutveckling. Vi träffar spännande gäster, testar nya teknologier, söker inspiration och tar upp aktuella ämnen. Jag vet inte varför det har blivit så svårt att starta podden. Vi stela. Nej, men det är bara att säga saker och säga känns det som. Fast vi har en massa saker att säga, men de kanske är rants utanför täckvärlden. Eller? Nej, jag vet inte. Jag var så här, typ bara fråga, har du något att säga? Ja, men jag hade kalas för min ettåring idag. Det är inte heller så intressant att prata om. Ska vi inte bara hoppa drakt in och tacka våra stjärnsupportar på Patreon, så snackar vi om vad vi ska snacka om. Jo, jag måste spara luft till mina lungor, för det är så mycket tekniknyheter, jag vet inte ens hur jag ska orka läsa igenom det här. Okej, men då kör vi och tackar våra stjärnsupportrar på Patreon. Det är alltså de som stöttar oss med 100 kronor eller mer per månad som får sitt namn uppläst här. Pernodby, Selly Mjurthall, Stygghest och Tomas Nilsson. Tack så mycket till er och till alla andra som stöttar oss på Patreon och på alla andra olika sätt som ni supportar oss. Ja, det var någon som köpte Merch häromdagen. Blir jag så här glad när det droppar in lite då och då, exakt. Och ibland ser jag någon på jobbet som har vår Merch, som inte går fram och skryter om det varje dag, utan bara såhär: Jo, men jag har er mörkt, dina instit. Nej, men låt oss hoppa in i nyheter. Du har med Creat React Up, eller hur? Jag vet ju det, du vet vad jag har. Men det kanske inte är alla som har gjort det. Om man är ganska ny så kanske man redan vet att man inte bör använda Creature Act Up. Eller om man inte är frontend-utvecklare. React, så det kändes som en game changer, men jag vet inte hur mycket gamechanger det var. Det kom 2016 och det tog bort mycket av Krånglet med att hålla på med all boylerplate kod för att konfigurera ett helt projekt, du vet såhär, webbplack, konfix och babel konfix. Du har ju ändå haft, du har väl haft projekt där ni inte hör hålla på med allt yoxx. Ja, precis. Då var det helt enbyggd webback och det var ju nice för att där är vissa saker daytracks som inte kommer med automatiskt, till exempel serversidendering och lite sådant Bla, bla, bla, bla. Det tog jättelång tid. Det tog bort mycket av helvetet som innebär att jobba med fronten. Ge er inte in i det, för det är inte så jättemycket bättre nu. Jag ska börja på den förväntan, men det var i alla fall, jag skulle säga att det var synonymt med att starta ett Brexit-projekt. Ska du starta ett React-projekt? Självklart använder du ReCreat React app för att sätta upp allting, och man ser det fortfarande i dag när folk lämnar in sin kod till tech-indivur, att folk fortfarande använder det. Det är sån vana man har. Även ni? Alltså med vitt och sånt? Ja, jag tror att vissa vet inte. Vissa har inte hört om att... React-teamet slutade rekommendera det för ett tag sedan. Man slutade main-taina det projektet. Om man började, det är det här som jag ska gå in på, som är tjafset här. Och alltid kul med tjafs. Ja, så det har varit tjafs. Som du säger, correct upside har inte haft stöd för allting som är mer modern webb idag. Så det är inte chockerande att det läggs ner. Men det hände ett drama under 72 timmar efter att de offentliggjorde att det verkligen ska läggas ner helt. Jag ska sammanfatta dramat. React-teamet gjorde ett blogginlägg där de uppmanade utvecklat över e-creatiract up och att man ska gå över till Next IS, väckt router eller till och med bygga ett eget ramverk från grunden. Inte rekommenderat, inte rekommenderat, men liksom det är ett alternativ. Det är de här sakerna du kan göra, men jag vet att de har varit så här, men håll inte på att bygga här ifrån grunden. men de är väldigt använda som XIS. Jag tror att du har sett det på hemsidan när man går in så är det så här amen XIS är det GATT, kanske de också rekommenderar. Men och nästan ingen nämnde, alltså det heter vitt, Det tror jag säger vite. Folk som inte snackar franska. De kommer hata att vi säger vite. Men titta, hur säger du det? Jag säger vitt. Det säger vi. Vi har ju läst franska i fyra år, men ja. Fancy your boogie it. Ja okej, men vissa kallar det vit. Ja, i alla fall. Vitt är jättepopulärt, ibland React-utvecklare, typ alla som körde Crect Rect Up, som fick reda på att det inte var toppen längre, gick över till vitt. Det var svinenkelt att gå över till det toppen. Men ingen nämnde att ett alternativ är att gå över till vitt. Det är jätteenkelt. Många utvecklare blev väldigt arga och menade att projektteamet var partiska Alltså det är mycket mer du får på köpet som du kanske inte behöver alltid. Ja. Nej, så de var såhär, de gick ju till och med så långt att de anklagade reaktivet för att vara köpta av, Någon skrev såhär: "Big framework" Vem ligger bakom? Nexi är Simplund. Det är ett företag som heter Versel. Folk har kanske hört om det i olika sammanhang. De har ju såhär cloudtjänster. Housting, skulle man ju säga. De kör hosting, de bygger nexIS. Grej, det är typ såhär, nu kan jag vara ute på utvatten, så insatt egentligen. Men det är många i reakt teamet som bidrar eller som har gått in Furnex, TIS-projektet och Viceversa någonting, de är väldigt sammankopplade. Så det blir lite såhär, det blir väldigt färgat, jag håller faktiskt med om det. Så det här Twitter-tjafset höll på i några dagar och det var ganska underhållande i alla fall när man såg posterna från det. React-teamet uppdaterade sitt blogglägg och hade lite mer balanserade, nyanserade rekommendationer, inklusive hur man kommer igång med vitt. Utan att behöva byta till ett ramverk som NEXIS. Så nu är freden återställd, men i alla fall lite drama. Men jag hoppas att ni har fått budskapet mer sluta använda creature ackdep. officiellt dött. Alltid kul med lite drama, men det var fint att det löste sig att de blev vänner till slut. Nästa grej, inte så relevant för oss utvecklare kanske, men är man sån? Alla stora företag har jobbat med AI eller lämsläppt nånting för att vara relevanta i AI. Amazon har ju inte gjort det. Nej, men de gör ju så mycket annat. Ja, jag tänker de har ju hela AVS, som är en av de världsledande Cloud Provider och sånt. Behöver man verkligen doppa fingrarna Har du Azure AVS eller Google Cloud så behöver du håva in pengar på att inte göra någonting i princip. Absolut, de har haft olika typer av eller lem-tjänster i det. Men de har ändå inte riktigt varit med i gamet som någon som gör modeller, eller hur? Nej, nej, nej. någon slags utveckling ska ske och nu äntligen så har de rullat ut Lexa Plus, eller i alla fall presenterat det. Jag tror att man kan signa upp det och det finns olika erbjudanden om det har Prime eller inte. Det är väl spännande. Alla de här Siri och Alexa är helt värdelösa. Du kan i princip inte göra någonting förutom att sätta på musiken eller släcker lampan. Men samtidigt, med det sagt, så är liksom miljoners miljoner människor som ändå interagerar med Lexa och säger: starta musiken eller släck lampan. Jag vet inte vad det kommer leda till, men det är väldigt många användare som de introducerar features för, och det kanske kommer utvecklas så man kommer förstå hur folk använder det mer och mer. Men ja, som vanligt hade de en demo där de visade helt så här. Du ska använda AI:t för att beställa en Uber åt din kompis när din kompis kommer till flygplatsen. Gud vad krångligt scenario. är att öppna min antyckning som heter handlingslista och lägg till smör när jag står med händerna fulla och bakar och insatssmörtslut. Men det går. Men det är skitjobbigt att säga det. Ja men den fattar inte handlingslista, alltså nej. Jag har i alla fall inte lyckats. Vi hoppas att den är bättre men jag är väldigt trött på de här exemplen som ingen i världen någonsin skulle göra. Folk beställer sig nu själva. Inte ett verkligt case, men det visar att de ger sig ändå in i det här i agenter. Försöker göra någon slags agent som alla andra håller på med. Vi får se vad som händer där. Någonting som är mer roligt för oss, Visual Studio Cood, känner du till och använt kanske? Aldrig hört! Jag vet inte, det är ju såhär, alla var det i den här stan, eller tror jag nog. Om man inte jobbar med något väldigt uppskyrt språk, men det är en idé, för den används kanske oftast av, alltså nu vågar inte jag säga det. Det känns som att flest jag var skript, människor använder Vision StureCode. Code så sa jag typ såhär ja men visual studio det är typ för backend dot nett. Och visual studio cold är typ för fronten, alltså så om man ska hårdra det. Så har han sagt det på sin LIA och då har de skrattat åt mig. Nej, och typ såhär, nej, det har hon också inte sagt. Och jag bara såhär, titta vad rimlig för någon som är ganska ny, när man pluggade. Det var inte så. Dum förklaring, eller? Men vad menar de att, väljer hur hade du fel? Nej, jag vet inte. Såklart du kan köra andra saker i VISSU Studio Code också. Ja, men det är hemskt och du gör inte det. Nej, exakt. Nej, sign-out i alla fall. Jag avskyr när folk föreslår det. Förlåt, min chef. Du är bäst. verkligen vad jag skulle ha, Intelligy J. För jag var, behöver du verkligen Intelligy? Det går ju att köra i VISCA STURE Code. Jag tänker inte sitta med ett sådant fullfl lodge-språk när jag har en fullfl lodge ID och sitta i VISCA STURE Code med några skitextensions. Nej, jag är benägen att hålla med. Ja, det är för att vi är redo av Visual Studio som har allt. på dåligt sätt och folk skrattar säkert, antagligen, igen. Men i alla fall, de har ett väldigt populärt tema. Man kan ha väldigt många olika teman i den här idén som heter Material. Och det är för att man har upptäckt inte misstänksam kod. inspirerat av Googles materia-design, men nu är det alltså helt borta. Men vadå? Alltså teman, det är ju typ bara lite JSON. Vad kan man slänga in för farlig kod där i? Eller ställ inga frågor. Innest läs Word liksom. Jag bara funderar, men visst, har man ont uppsåt så kan man ju lyckas göra det med det mesta. Jag är så oskyldig och naiv och bara, hur skulle man kunna göra det i ett tema? Ja, bra fråga. Jag har aldrig viktiga teman. Någon som har viktiga teman vet ju såklart vad det är. Det är väl inte bara, eller ändrar man bara färg, För det de sa var att det fanns mycket kod som har onödiga beroenden till saker. Då kan jag tipsa om världens bästa tema som jag använder på rubbet och det är ju nord. Jag tycker det är så snyggt. Ja, just det. Jag använder du. Ja, men det gör jag. Jag använder typ supply med någonting koffeel eller något sådant där, det är lite såhär brynt, oranget, tyvärr. Eller supply, det associerar jag med orange i alla fall. Det är bara skönt för ögonen, det är inte så skrikigt, men det är ändå färgglatt. Om någon vill så kan vi göra ett avsnitt om alla teman vi har och alla vår uppsättning och allting som vi använder. Då får ni önska det, för annars kommer jag tycka det är pinsamt. Antropic, också AI Stuff, de har släppt en ny version av sin populära LRM, version 3.7. Alltså klåd, eller? Just den här modellen heter Sonet. Ja, men det gör väl alla. Jag vet inte om Claude är det fina namnet. Antropic är som OpenAI, och sen har du ChatGPT som är Claude, och sen är Sonet själva modellnamnet som typ One. Förmodligen. Ja, jag orkar inte, jag orkar inte tjejgissa saker här för det är väl inte fel säkert. De flesta Benchmarks toppade ligan i att vara en bra kodassistent och generera kod. Den dök upp i juli 2024 men enligt Antropics ska 3.7 vara ännu bättre. Inte jättekonstigt att det ska vara bättre, men det ska vara bättre på kodning och specifikt frontend-utveckling. Och som en del av det här så satsar man också på ett verktyg som heter Cloud Code, som är en AI-agent som konkurrerar med liknande lösningar, som typ Devin och andra AI-verktyg. Är det bara som tycker att Cloud Code inte var ett bra namn? Det blev lite äckligt. Kladkod, ja. Klad. Ja, jag vet inte. Det låter som en butler. Men det var faktiskt, här har det kunnat vara. Alla de låter lite så. Jag vet inte, det är ingen som har lyckats med ett produktnamn här. så Gemini kanske är det minst äckliga. Våra i ChatGPT-äckligt. Klippt. Nej, men jag vet inte. Bara så dåliga produktnamn. One, eller vilken modell ska jag använda idag? One eller O3 Mini eller 4O eller ja, det är så dålig produktpresentation. modeller, utan de ska typ automatisera det att när du skriver en prompt så väljer de den bästa modellen för det du vill göra. Det vore asbra, i alla fall. Den tidiga versionen, Sonet 3.5, den blev ju jätteframgångsrik och de flesta ID:s med generativa AI-funktioner började använda den. Men för GitHub Copilot, som du använder i Visual Studio, så dröjde det med stödet för det. Då hann andra ID:s, som typ Curser och Winsorth, plocka upp användare i och med att de tillät Son 13.5. Men den här gången så har alla stora utvecklingsverktyg, inklusive gitarr-coopar, redan lovat stöd för 3.7. Tar de GitHub Copilot så släpper GitHub Copilot sin poder review-funktion. Det ska bli spännande, för det har du du har pratat om, du vet att en AI som kanske kan kolla igenom din pulercast så att det är livsförlidet. Alltså kunna ha åtminstone en första granskning innan man skickar upp den för att ha en peer. Eller hur? Jag har inte testat den och jag fick mejl, precis typ, tror igår att min Copile licens har uppdaterats med den här funktionen, för vi betalar för det på jobbet. Så det ska bli jätteintressant att testa. Så vad den gör är att den går igenom och hittar uppenbara buggar. Den summerar ändringarna, den föreslår vilka tester du har. Du kan ha, den rättar stavfel. Vi så klagade på Stafyl från något avsnitt sen. Men ja, det är jäkligt coolt. Sen tänker jag att den lär ju inte fatta kontexten särskilt bra. Alltså själva featuren du implementerar, hur det hänger ihop. Alltså det borde den ju inte kunna, men allt annat sånt här liksom att det ska ja, vara stavfel och liknande och skriver en testråtan också. Eller bara säger den typ såhär: Du borde testa detta. För har det varit skjutna i som det borde testa hade här. Här har du ett Unitest. Jag vet inte, vi får testa. Det stod bara att den föreslår tester. Så jag vet inte vad jag roffar och sånt. Ja, nej, men ingen aning. Det låter ju som ett bra tillägg, men som du säger, den kanske inte kan skriva en bra sammanfattning åt den för en sak i en kontext. Det blir kanske så här: Jag har ändrat detta, jag har ändrat detta. Okej, men det är inte intressant om jag inte vet varför du använder detta. Är det typ för dåligt att använda bra domänspråk? Nja, det är också att, kan man känna att man borde bli bättre på det? Och vidare till Google, vi måste ju nämna alla stora aktörer, eller hur, innan vi är klara. Google släpper sin kodassistent Gemini Code Assist, gratis för privatpersoner. Tidigare så kostade den 22,8 dollar i månaden. Otroligt, konstigt, specifikt. De hoppas väl på att råka in fler användare. Det här har de gjort med alla sina AI-verktyg. Först så ville de att alla skulle betala för det, men ingen ville betala för det, så nu försöker de tvinga oss att använda det vända det i alla appar istället för att nu har de sagt okej, ingen vill betala för vad vi vill ha för folks data. Så låt oss bara tvinga dem att använda det, släppa det fritt. Ja, som sagt, jag vet inte hur många gånger man har hört det här med att om någonting är gratis så betalar du ändå någonting och oftast är din data. Exakt. Vi får se om de hinner i kapp Coopilot och Kirser. För företag kostar Gemini Coda sist fortfarande dock 54 dollar i månaden. Det är ganska betydligt. Eller vad kostar Copilot? För företag vet jag faktiskt inte. Det är antagligen också dyrare, för din dataprocess bara på en dedikerad server som de inte har tillgång till. Där förstår jag att man får betala. Eller vänta, här står det. Jag vet inte, det här är ju priser i dollar. Det kan ju vara annorlunda på vår marknad. men här står det att Gemini Colas sist kostar 54 och GitHub Copilot Enterprise kostar 39 dollar. Så den är dyrare. Men ja, det var nyheterna. Tack för den här genomgången. Väldigt bra påläst. Jag slipper läsa nyheter. Ja, men jag orkar inte prata mer. Jag dricker vatten så får du berätta. Jag har inte alls förberett nånting, men jag har läst lite om dem. De har ju uppdaterat sina termer sen konditionstjänsten nu. Och i princip första versionen sa ju mer eller mindre. Vi kommer samla in all data du matar in i imputfält grupp det också. Men folk har ju slagit bakut nu och letar efter alternativa browsers. Det finns ju typ såhär LibreWoolf, till exempel Vetia som är en fork av FireFox. Om man nu vill fortsätta använda Firefox men inte sälja ut sin själ. Sen finns det ju massa andra alternativ. Är man fine med att köra på Chromeym så förespråkar ju både du och jag Arc. Och ja, det finns ju tusentals alternativ: Brave och massa obskyra alternativ, som jag knappt ens har hört talas om. Ja, men det där är tråkigt, för jag har ju inte hört om dem att de erbjuder att du kan betala någonting så hade nog väldigt många gjort det. Ja, kanske. Jag hörde, jag vet inte, och jag har inte faktagranskat detta nu, men en stor anledning att de har mindre pengar är för att Google har slutat supporta dem. Google har ju supportat ganska många rosers som har trätt i kraft. Så det är ju som att förstöra. skiter de i att supporta, för då får de inte tid någonting av det här, okej. Så det är vårt fel, européerna. Ja, exakt. Skilj på det. Okej, då ska jag inte säga något. Jag måste vara trött på att sy, så. Vi fick ju en lyssnarfråga också som vi kan ta och bränna av kanske. Jag tänker den är inte så jättelång. Det är från vår vän Kietan Kasmera Chak, vars namn jag hört många gånger. Han frågar så här: Hur löser man bäst konflikten mellan att vara lite av en scout och alltid lämna koden i bättre skick än när man fann den, det vill säga fixa eventuella småsaker när man ser dem, uppdatera paket, fixa felstavningar och så vidare. och att bara stektlösa det som finns i en givartikel och inget annat. Flera arbetsplatser har, fullt förståeligt kanske, en policy om att MPR endast endast får innehålla lösningen på en feature eller bugg och inget annat. Samtidigt vill man ju inte att koden ska förfalla för att det inte finns tickets gira för något litet man precis har hittat. Och att skapa en ticket får en prioriterad och kanske få återkomma till en senare EU rätt omständigt om det handlar om till exempel namnet på en lokal variabel som är felstat. Det var så här, jag reagerade först på att flera arbetsplatser har en policy där en PR endast får innehålla lösningen och ingenting annat. Jag har aldrig varit med om det. Inte jag heller faktiskt. Jag har liksom inte hört det som att det skulle vara ett problem på det sättet, att man bara får göra det. Sen kan jag ju förstå att man inte vill trycka in hur mycket som helst, man får ju ha lite sunt förnuft då, men ibland så är det ju, ja, Ibland blir det att man måste lägga ihop vissa saker. Det har jag i alla fall gjort mig skyldig till. Ja, men jag definitivt med att folk diskuterar det här i ett team, men aldrig äter jag en strikt policy. Nej. Jag vet inte, kanske någonting att ta upp på ett retro och säga det här att jag vill kunna lösa småsaker. För att jag är helt med på det här scouttänket. Jag tycker det är klockrent. ting som bör fixas. Och om det bara är ett stavfel eller någon lintgrej som har blivit fel eller någonting då har jag bara gjort det i samma PR. Om det är relaterat till det kontextet. tydlig. Man kanske vill bryta upp det jättelånga till lite olika variabler och sånt. Då kanske det är mer: Okej, kanske ska göra ditt eget. Men då hade jag ändå bara gjort din egen PR och inte skickat in den samtidigt. Ja, det är väl här det kan bli tjafs, så att man är oense. Jag tycker att man ska städa upp när det är ditt stav fel. Du behöver fakturera en funktion, eller typ såhär, du ändrar kanske massa stavfel. Du ändrar saker som känns små, men i och med att koden inte har tester, så kan du faktiskt introducera något stavfel och det upptäcks inte, föredrar tryckt ut det. Det skulle ju kunna vara till exempel om man använder så här konstant eller någonting eller en enum, så jämför du ett strängvärde och så har du plötsligt bytt strängvärdet. Och det är mycket lättare att detta trillar mellan stolarna om man bara gör det lite under radarn. Det blir ingen spårbarhet om du inte har en ticket att koppla det till på det sättet. För jag har jobbat med en utvecklare som jag har väldigt stor respekt för som var väldigt snabb och upptäckte att shit, det här behöver göras om. För att man behöver underhålla sin kod. Man ser en halvt år senare senare och bara: Men vad fan är det jag har skrivit? Men som kände att det var en bra idé att passa på. Och kanske gjorde en till PR då ens. Alltså försökte var ändå såhär noga att det skulle vara rätt. Nu har du ju gjort massa ändringar. Hur vet du att det här funkar? Och det här smögs alltid med lite för QA-personen, för att den här utvecklaren visste ju att personen skulle frågas. Och så var det också störigt för vissa som utvecklare. Ibland kom det en väldigt stor bara, nej men det här är bara en reflektering. kanske funktionellt eller jag vill inte att det ska vara funktionellt för det är så svårläst. Och då att sitta och granska det som kollega utan en ticket. Alltså det var ändå såhär, det kunde vara svårt. Ja, men det känns som en lite större grej. Man kanske kan ha någon slags, är det mer än, två minuters jobb att implementera och mer än femton minuter att testa, ja då får det bli en ticket av det. Sen vet jag inte, jag har ju ändå varit språngmaster och jag skulle inte bli sur om någon utvecklare lade upp en ticket och bara drog in den i typ developing. Vad kör du? Det tycker jag också är nice. Det låter som onödig bromskloss att man ska sitta och prioritera upp det och så vidare, och sen prioriteras det inte upp och så glömmer man bort den, som det ändå går med. Ja, det är ändå så litet att man gör det samman, så bara köra liksom. Enda gången jag skulle vilja lägga det i någon prio backlogg är om det är ett större arbete. Ja, om det är en dags arbete, eller en halv dag ens, då snackar vi, nej, då kan det ju inte bara smyga in den lite sådär. Ja, precis, för då sitter det ändå och har prioriterat någonting annat. Man behöver ändå vara transparent mot alla i teamet och ha respekt för pion, vars ansvar är att se till att det är mest prioriterat och jobbas på. Det är säkert helt okej för pn, men man behöver lyfta det och prata om det. Det går ganska snabbt, det tar bara en halv dag. Men de vill ändå ha lite koll och förstå vad som händer, och varför ni lägger tid på det här. Ofta brukar man ju lägga in lite Padding för typ maintenance tasks och sånt. när man gör sprint-planning och sånt. Jag tycker ändå att utrymmet borde finnas där. Det håller jag med om. Vad säger du? Jag känner igen ett scenario och det är såhär, det här strömmar mig faktiskt väldigt mycket bland saker som stör mig. Jag borde skriva upp det här någonstans, så att vi gör ett avsnitt om saker som stör mig med andra utvecklare. Säg att det är så här, ja men det tar 20% av din sprinttid att göra det här, hennes 50. Och den här utvecklaren säger: nej, jag vill göra det nu. eller säger: det här kommer inte ta så lång tid. Så det de gör istället är att de tycker det här är rätt roligt arbete. Så de sätter sig på kvällarna och gör det här. Okej. och påstår sen, även om du har varit med där, men jag har varit med flera gånger från olika personer. Det är så roligt att de gör det på kvällen. Men det är ändå någon som ska jobba med det och testa det, granska det. Ja, men de personerna är oftast såhär: nej, men det är inga problem för någon och jag har Jag har suttit och gjort det här själv och hur kan du inte vara typ, du vet? Hur kan inte alla bara vara tacksamma att jag sitter och gör det här på min fritid? Men jag vill inte ha det så. Jag vill inte att det sitter folk och kodar hela nätterna. Jag hade gjort det nån gång, så här. Men då försöker jag liksom... Jag vill inte att folk ska se att jag har gjort det. Vi ska inte stressa teamet att här sitter någon och kodar på kvällarna av intresse. Då hör du på mig ett hobbyprojekt då. Det stör mig. Definitivt har vi folk som lyssnar som gör så här. Jag tror jag har gjort så någon gång också. Jag känner mig lite smått träffad. Justera på att, du vet, de låter inte den här pulverkosten vara draft. Att, såhär, prefine, gör det på kvällen, lägg upp en pulrig gest och skapa en ticket, såhär lugna ner folk. så preppar de lite. Jag vet att det är störigt, men gör det här lilla extraarbetet för folk, Så att du inte bara trycker in saker och åtminstone det. Någonting. Bara kommunikation typ. Men ja, vad vill du säga? Nej, jag skulle säga, tror du det är en bra idé att man har någon generell förbättringsticket? Alltså som man kan koppla till och att man då, för de flesta verktyg, så kan du ju ändå skriva en kommentar, Alltså kopplingen till inticket från din PR. För då löser man ju lite det här att man måste gå in och du ska skapa en ticket och du ska alltså fixar något litet stavfel eller liknande. Eller blir det bara en slasktratt? Nej, stavfel absolut, samma pulvergest. Alltså, som sagt, när det inte är farligast av fel att man ändå råkar ta sönder något. Jag tycker det ska vara en fakturering i PR:en. Men jättegärna att det är en egen komet. Du vet, här har jag gjorts arbetet och här har jag städat upp. Absolut, se till att... Nu pratar man om att kunna ha en ticket som är generell, som det är kopplat till. som bara slasktrattar allting. Ja men typ, det här är den här sprintens förbättringssticket. Hit kan du koppla liksom smågrejer. Jag vet inte själv om jag gillade det riktigt, nämligen, men jag funderade på det skulle kunna vara en lösning. Ja, men är det så smått, då tycker jag det ska vara kopplat till... Då kan det ändå vara på den originalticket. Med Absolut, är det nånting så råkade jag se en helt annan fil, att det var nånting. Ja, jag vet inte. Å ena sidan blir det så här: Men gud, vad bajsnödig man skrev. Man kan inte ens fixa nånting litet utan att man ska skapa en ticket. Men å andra sidan är det inte så jobbigt att göra det. Bara klicka plus och skriva en titel och varför och vad man fixar det. Vissa är ju supersträckta att du ska skriva liksom given, when, then och typ... Alltså, devellopel... Nej, det är det min teskiva. Nej, det är det värsta. Asså, customer's are you want to bla bla bla bla. Refactor, the syster, liksom. Det är det som blir så. Ja. Det är ju bajsnödigt. Nej, det får man inte göra. Nej, men vad vi har i vårt team, och det vi haft i andra team idéer och kommer du på någonting så kan du lägga in en task där för framtida grejer eller så när du ser någonting. Nu, nu, nu, så har du en feature att lägga den under. Ja, så hade vi också mitt senaste team. Det kunde vara verkligen högt och lågt. Ja, man måste rensa ut de här också har jag märkt. Hur ibland ligger det bara saker som ingen någonsin tar upp. Men jag tycker det är schysst att skriva en rad för det är för en själv. Man själv minns inte vad jag har skapat den här artikeln för ett halvt år sedan. Och det finns bara en titel som är såhär refactor, blablabla service. Och så bara: vad är det jag vill reflektera över idag? Så varför? för och så är det ingen annan som kan plocka upp den. Nej, man ska inte önska att det är mycket man glömmer. Alltså, har vi svarat Keith av Ens? Frågan var ju, har ni råkat ut för dilemmat? Ja, eller jag har absolut haft diskussioner. Sen de senaste sju åren har jag jobbat i samma projekt och där hade vi turen att ha väldigt förstående P/O. Men absolut att det ändå ibland dyker upp då man måste prioritera mot något annat. Men den sista saken jag tänkte på kanske, för han nämnde också typ såhär: automatisera. Man kan ju ha typ såhär, det pendlar bort och sånt för att uppdatera paket. Då blir det ju inte lika mycket att du själv måste hitta tiden och trycka in det och såhär. Ni kommer ihåg att jag läste någonstans i någon tråd när vi pratade om Linter så att Ketan sa att han hatade Linters, jag blev chockad. Hur kan man hata Linters? Det är ju ett bra sätt att kunna undvika att man behöver göra sådana reflekteringar. Ja. som går att automatisera. Är det en breaking change, då får man ha... Jag vet att vissa team hos oss där de får in breaking changes... De har typ en person som är ansvarig att ta hand om breaking change varje vecka, Så att alla vet att den här veckan är det Madeleine som kommer att titta på Ture. Ja, faktiskt. Så det är ju jätteschyst. Men jag tänker också att i allt det här så får man ta in lite såhär, hur kritiskt är vårt system? Alltså, har du många miljoner användare och går det ner på grund av ett stavfel så är det liksom, du förlorar så extremt mycket på det. Då kanske man bör fundera på att ta eller om det är en bank eller någonting. liksom och sånt där det kan vara jättestora implikationer om någonting händer. Ja, andra system. Ja, det kommer hända fel, men det kan nog vara skönt om det sker ett fel på grund av något stavfel. Man gjorde... Det är ändå så här att du hade en ticket, att du skrev varför du gjorde det. Alltså, det kan nog kännas lite bättre ändå att man gjorde så pass rätt att man bara kunde. Hellre det än att det kommer fram att man har smugit om någonting och så har det blivit fel, då är det ju lite skämmigt. Alltså, då står man ju där med... Ja, typ att man... Bypassade policies eller folk som är så här, du vet har en buddie som alltid godkänner Jävla gest, alltså sånt. Och så är skamvrån. Nej, men man får fundera på hur viktigt ens system är. Ja, hoppas det var en intressant diskussion i alla fall. Om inte annat så var ju dina nyheter intressanta.