Jag minns att vi hade en kubaperson då, som ibland gick i taket över det här, För att, det var så här, nu har du ju gjort massa ändringar. Hur vet du att det här funkar? Och det här smögs alltid med lite för Cuba-personen. Du lyssnar på Developers, podden där du får följa med oss, Sofia och Madde, på allt inom mjukvaruutveckling. Nej men det är bara slut på saker att säga känns det som. Fast vi har en massa saker att säga, men de kanske är rants utanför techvärlden? Eller? Nej, jag vet inte. Jag var så här, du bara frågade. Har du något att säga? Jag måste spara luft i mina lungor för det är så mycket täcknyheter. Jag vet inte ens hur jag ska orka läsa igenom det här. Okej, då kör vi och tackar våra stjärnsupportrar på Patreon. som får sitt namn uppläst här och det är Alicia, Anders Nylund, Björn Jonsson, Dag Grunell, Kajetankas Mircak Lars Nyström, Molly Haglund och Skari, Pernotby, Selim Hjorthal, Stygg Higgst och Tomas Nilsson som stöttar oss på Patreon och på alla andra. Olika sätt som ni supportar oss. Ja, det var någon som köpte merch häromdagen. Då blir jag så här glad när det droppar in lite då och då. Exakt. Och ibland ser jag någon på jobbet som har vår merch. Som inte går fram och skryter om det varje dag. Utan bara så här: Ja, men jag har er merch. Det är nice. redan vet att man inte bör använda CreateRactApp. Eller om man inte är Frontens vecklare. Eller om man inte är frontend-utvecklare, men vad ska vi säga då? Jag vet inte, för det kom precis när jag började jobba med REACT. Det kändes som en game changer, men jag vet inte hur mycket game changer det var. Det kom 2016 och det tog bort mycket av krånglet med att hålla på med all boiler-plate-kod för att konfigurera ett helt react-projekt. Du vet såhär: WEBPAC, konfigges och Babel-konfigges. Du har ju ändå haft projekt där ni inte har Creative Act Up, där ni har fått hålla på med allt jox. lite sånt som vi behövde i den applikationen. Men ja, det är jobbigt att underhålla det också. Sen kan man ju ijäkta sin Creative Act och bara ja, det gör det gör det också så att man kan ju komma klagat på att vi ska migrera till webbpack 5 och blablabla, det tog jättelång tid. Det tog bort mycket av helvetet som innebär av att jobba med fronten. Ger inte in i det för det är inte så jättemycket bättre nu, ska jag säga. Jag ska inte spöa på den räntan, men det var i alla fall... Jag skulle säga att det var synonymt med att starta ett REACT-projekt. Det är självklart att när du... Det var som man gjorde. Ska du starta ett REACT-projekt, självklart använder du en REACT-app för att sätta upp allting. Man slutade &lt;i&gt;main-tina&lt;/i&gt; det projektet. Det är det här som jag ska gå in på som är tjafset här. Alltid kul med tjafs? Ja, så det har varit tjafs. Som du säger, Creact Wract-apps har inte haft stöd för allting som är mer modern webb idag. Så det är inte chockerande att det läggs ner, men det hände ett drama under 72 timmar efter att de offentliggjorde att det ska läggas ner helt. Så jag ska sammanfatta dramat. React-teamet gjorde ett blogginlägg där de uppmanade och utvecklade att överge Create Ract Up rekommenderat. Inte rekommenderat, men liksom... Det är ett alternativ. Det är de här sakerna du kan göra. Jag vet att de har varit såhär, men håll inte på att bygga det från grunden. Så de är väldigt såhär, använd typ Next JS. Jag tror att du har sett det på hemsidan när man går in, så är det såhär: Använd Next JS. Är det GATS kanske de också rekommenderar. Men nästan ingen nämnde... Testa tror jag säger vite. Folk som inte snackar franska. Någon kommer att hata att vi säger vite. Hur säger du det? Jag säger vitt. Du säger vitt, men jag har läst franska i fyra år, men jag... kallar det vitt, i alla fall. Vitt är jättepopulärt bland reality-utvecklare. Typ alla som körde Cracked Racked Up, som fick reda på att det inte var toppen längre, gick över till vitt. Det är kanske bra om du ska bygga någonting stort och robust. Men det är mycket mer du får på köpet som du kanske inte behöver alltid. Ja. Nej så de var såhär, de gick ju till och med så långt att de anklagade reaktivet för att vara köpta av... Någon som skrev såhär. Av Big Framework. som heter Vercel. Folk har kanske hört det i olika sammanhang, de har juissen Cloudtjänster. Hosting? Hosting? De kör hosting, de bygger next CS. Nu kan jag vara ute på utvatten, så insatt är jag inte. de är väldigt sammankopplade, så det blir väldigt färgat. Jag håller faktiskt med om det. Så det här Twitter-tjafset höll på i några dagar och det var ganska underhållande i alla fall när man såg posterna från det. Men till slut lugnade det ner sig och react-teamet uppdaterade sitt blogginlägg och hade lite mer balanserade, nyanserade rekommendationer, Inklusive hur man kommer igång med vitt. Utan att behöva byta till ett ramverk som NECD-IS. Så nu är fredagen återställd. Men i alla fall, lite drama. Men jag hoppas att ni har fått budskapet med er, sluta använda Creature Act Up. Det är liksom officiellt dött. Men alltid kul med lite drama. drama, men det var fint att det löste sig, att de blev vänner till slut. Ja, frid och fröjd på jorden. Nästa grej. Inte så relevant för oss, för oss utvecklare kanske, men Amazon. Du vet såhär, alla stora företag har jobbat med AI eller LM, släppt någonting för att vara relevanta i AI. Amazon har ju inte gjort det. Nej, men de gör ju så mycket annat. Ja, jag tänker att de har ju hela AVS. Som är typ en av de världsledande Cloud Preders och sånt. Behöver man verkligen doppa fingrarna i alla syltburkar? Absolut, absolut. Har du assher, AVS eller gouricloud, så håvar du in pengar på att inte göra någonting i princip. Absolut, de har haft olika typer av LLM-tjänster i det. Men de har ändå inte riktigt varit med i gamet som någon som gör modeller, eller hur? Nej, nej, nej. Och jag vet att de har haft, vad heter det här? Code Whisper. Men ändå, de har ju sin assistent Alexa. rullat ut läxa plus, eller i alla fall presenterat det. Jag tror att man kan signa upp det och det finns olika erbjudanden, Prime eller inte. Det är väl spännande. Alla de här Siri och Alexa är helt värdelösa. Nu kan jag i princip inte göra någonting förutom att sätta på musiken eller släcka lampan. Men samtidigt, med det sagt, så är miljoners miljoner människor som ändå interagerar med läxa och säger starta musiken eller släck lampan. Jag vet inte vad det kommer leda till, men det är väldigt många användare som de introducerar features för. Och det kanske kommer utvecklas så man kan förstå hur folk använder det mer och mer. Men som vanligt hade de en demo där de visade helt. beställa en uber åt din kompis när din kompis kommer till flygplatsen. Krångligt scenario. är: öppna min anteckning, som heter handlingslista, och lägg till smör, när jag står med händerna fulla och bakar, och insatssmör till slut. Det går, men det är skitjobbigt att säga det. Ja, men den fattar inte handlingslista. Alltså, nej. Jag har i alla fall inte lyckats. Nej, vi hoppas att den är bättre. Men jag är väldigt trött på de här exemplen som ingen i världen någonsin skulle göra. Folk beställer sin uber själv. Inte ett verkligt case. Men det visar att de ger sig ändå in i det här. Jag vet inte. Det vet väl typ alla vad det är nästan? Eller? Det tror jag nog. Om man inte jobbar med något väldigt obskyrt språk, men det är en idé. Den används kanske oftast av... Alltså, nu vågar inte jag säga det. Det känns som att förresten jag och script människor använder Visma Studio Code. Alltså min sambo frågade mig när han började plugga, vad är skillnaden på Visual Studio och Visual Studio Code? så sa jag typ så här, ja men Visual Studio det är typ för backend.net och Visual Studio Code är typ för fronten. Alltså så om man ska hårdra det. Så har han sagt det på sin LIA och då har de skrattat åt mig. Och typ, nej det har hon sagt. Och jag bara såhär, det var väl rimligt, för någon som är ganska ny, precis när man pluggade. Det var väl inte så dum förklaring eller? Men vad menar de att, eller hur hade du fel? Jag vet inte. Såklart du kan köra andra saker i Vicio Studio Code också. Ja, men det är hemskt och det gör inte det. Nej, exakt. Nej, signout i alla fall. Jag avskyr när folk föreslår det. Alltså, förlåt min chef, du är bäst, men liksom... Behöver du verkligen vad jag skulle ha, Intelligate, med ett full-flöjt-språk, när jag har en full-flöjt ID och sitta i Visual Studioshow med en skitextentions. Nej, jag är benägen att hålla med. Men i alla fall, de har ett väldigt populärt tema. Man kan ha väldigt många olika teman när det är den här IDE:n, som heter ”Material”. Och det är för att man inte upptäckt misstänksam kod. Så material team var ett väldigt blärt tema. Kan man slänga in för farlig kod där i? Eller ställ inga frågor. Jag bara funderar, men visst det är klart har man ont uppsåt så kan man ju lyckas göra det med det mesta. Jag är så oskyldig och naiv och bara hur skulle man kunna göra det i ett tema? Ja Ändrar man bara färg? Color, black? För det de sa var att det fanns mycket kod, som har onödiga beroenden till saker. De körde några Child Processer i VS Code, vilket var väldigt märkligt för ett vanligt tema. Jag vet inte, så det är i alla fall borta. Då kan jag tipsa om världens bästa tema som jag använder på rubbet, och det är Nord. Jag tycker det är så snyggt. Ja, just det, det använder du. Jag använder typ sublime, någonting coffee eller något sånt där, det är lite så här orange. Eller sublime associerar jag med orange i alla fall. Det är bara skönt för ögonen. Det är inte så skrikigt, men ändå färgglatt. Ja, okej. Om ni vill så kan vi göra ett avsnitt om alla teman vi har. Alla vår uppsättning och allting som vi använder. Då får ni önska det. Annars kommer jag tycka att det är pinsamt. Entropic, också AI STUF. De har släppt en ny version av sitt populära LLM, en version 3.7, Alltså klor då? Eller? Just den här modellen heter Sonnet. Ja, men det gör väl alla. Jag vet inte om Claude är det fina namnet, men jag fattar inte. Atropic är som OpenAI och sen har du kött-QPT som är klart, och sen är sondnet själva modellnamnet som typ O1. Förmodligen. Jag orkar inte tjejgissa saker här för det blir alltid fel. men det låter jätterimligt. Det har kommit en ny version av den och just Sonet 3.5 har ofta enligt de flesta benchmarka 3.7 var ännu bättre, inte jättekonstigt, men det skulle vara bättre på kodning, och specifikt frontunderutveckling. Som en del av det här så satsar man också på ett verktyg som heter Clad Code, som är en AI-agent som konkurrerar med liknande lösningar som typ Devin och andra AI-verktyg. Ja, så klart överhuvudtaget. Det blev lite äckligt. Så klart kod, ja. Claude? Ja, jag vet inte. Det låter som en butler. Men det är faktiskt. Alla de låter lite så. är det minst äckliga? Vadå, är ChatGPT äckligt? Nej, det är bara så dåliga produkter. Vilken modell ska jag använda idag? O1 eller 03 mini eller 4O... Det är så dålig produktpresentation. Med det sagt, de pratar om att jag vill veta att det är jobbigt. Du ska inte behöva sitta och välja bland sex modeller att när du skriver en prompt så väljer de den bästa modellen för det du vill göra, det vore asbra. I alla fall, den tidiga versionen, Sonet 3.5, den blev ju jätteframgångsrik, de flesta IDs med generativ AI-funktioner började använda den, Men för GitHub Copilot, som du använder i Visma Studio, så dröjde det med stödet för det andra ID som Cursor, Windsurf, plocka upp användare, i och med att de tilläts av 1.3.5. men den här gången har alla stora utvecklingsverktyg, inklusive GitHop Copilot, redan lovat stöd för 3.7. På tal om Githob Copilot, så släpper Githob Copilot sin Code Review-funktion. En AI som kanske kan kolla igenom din pulverquest. Så att det blir positivt att lida. Alltså att kunna ha åtminstone en första granskning innan man skickar upp den för att ha en peer. Eller hur? Jag har inte testat den och jag fick mejl precis typ tror igår att min co-pide licens har uppgraderats med den här funktionen. För jag liksom, vi betalar för det på jobbet. klagade på Stafil för något avsnitt sen. Men ja, det är jäkligt coolt. Sen tänker jag att den lär ju inte fatta kontexten särskilt bra. Alltså själva featuren du implementerar, hur det hänger ihop. Alltså det borde den ju inte kunna. Men allt annat sånt här liksom att det ska ja, vara stavfel och liknande. Skriver den tester åt den också? Jag vet inte, vi får testa. Det stod bara att den föreslår tester. Ja. Så jag vet faktiskt inte. Ja, nej men ingen aning. Men det låter ju som ett bra tillägg. Jag har en sammanfattning åt den för att den saknar kontext. Det blir kanske så här: Jag har ändrat detta, jag har ändrat detta. Okej, men det är inte intressant om jag inte vet varför du ändrar detta. Är det typ bara för dåligt att använda bra domänspråk? Nja, det är också... Kan man känna att man borde bli bättre på det? Och vidare då till Google. Vi måste ju nämna alla stora aktörer innan vi är klara. Google släpper sin kodassistent Gemini Code Assist gratis för privatpersoner. Tidigare så kostade den 22,8 dollar i månaden. Jag vet inte hur många gånger man har hört det här med att om någonting är gratis så betalar du ändå någonting och oftast är det din data. Exakt. Vi får se om de hinner ikapp Coopilot och Cursor då. Fyra dollar i månaden. Det är ganska dyrt. Eller vad kostar Copilot? För företag vet jag faktiskt inte. Det är antagligen också dyrare. För din data processas bara på en dedikerad server som de inte har tillgång till. till de får inte träna på din data så förstår jag att man får betala. Eller ja, vänta, här står det. på vår marknad, men här står det att Gemini Code Assist kostar 54 och GitHub Copilot Enterprise kostar 39 dollar. Så den är dyrare. Men ja, det var nyheterna. Tack för den här genomgången. Väldigt bra påläst. Jag slipper läsa nyheter. Ja, varsågod. inte prata mer. Jag dricker vatten så får du berätta. Jag har inte alls förberett någonting, men jag har läst lite om dem. De har ju uppdaterat sina terms and conditions nu och i princip första versionen sa ju mer eller mindre vi kommer samla in all data du matar in liksom input fält eller i vad du skriver, vad du surfar i rummet. uppköpt också så det är mer. Men folk har ju slagit bakut nu och letar efter alternativa browsers. Det finns ju typ så här Libre Wolf, till exempel vet jag, som är en fork av Firefox. Om man nu vill fortsätta använda Firefox men inte sälja ut sin själ. Sen finns det ju massa andra Både du och jag Arc och ja, nej, det finns tusentals alternativ. Brave och massa obskyra alternativ som jag knappt ens hört talas om. Ja, men det där är tråkigt för jag har inte hört att de erbjuder att du kan betala någonting och få slippa undan det. Jag förstår att folk behöver tjäna pengar. Och som privatperson vill jag inte heller betala 200 spänn för att använda en browser. Men att de kunde ha haft en modell och betala 20 spänn i månaden, så hade nog väldigt många gjort det. Ja, kanske. Jag hörde, jag vet inte hur jag inte faktagranskat detta nu, många routers mot att få ha Google som det är folk sökmotor. Nu när de inte längre får göra det i och med de här lagarna som har trätt i kraft. Så det är inget som har förstört det? Skiter de i att supporta för då får de inte ut någonting av det. Så det är vårt fel, européerna? Ja, exakt. Skyll på det. Okej, ja men då ska jag inte säga något. Fan vad de måste vara trötta på oss i USA. fixa felstavningar och så vidare. och att bara sträcktlösa det som finns i en Gira-ticket och inget annat. Flera arbetsplatser har, fullt förståeligt kanske, en policy om att en PR endast får innehålla lösningen på en feature eller bugg och inget annat. Samtidigt vill man ju inte att koden ska förfalla för att det inte finns tickets i Gira för något litet man precis har hittat. Och att skapa en Ticket får en prioriterad och kanske jag får återkomma till den senare är ju rätt omständigt om det handlar om till exempel namnet på en lokal variabel som är fel stat. Har ni råkat ut för det dilemmat? Det är bara så här. Reagerade först på var att flera arbetsplatser har en policy där en PR endast får innehålla lösningen och ingenting annat. Jag har aldrig varit med om det. Inte jag heller faktiskt. Jag har inte hört det som att det skulle vara ett problem på det sättet att ja, att man bara får göra det. Sen kan jag ju förstå att man inte vill trycka in hur mycket som helst. Man får ju ha lite sunt förnuft då. lägga ihop vissa saker. Det har jag i alla fall gjort mig skyldig till. Ja, definitivt. Att folk diskuterar det här i ett team, men aldrig att det finns en strikt policy. Jag tycker bara det låter helt sjukt att man ska behöva göra en ticket av det och få den prioriterad och liksom att den ska gå igenom hela den här ordinarie processen. Jag vet inte, kanske någonting att ta upp på ett retro och säga det här att jag vill kunna lösa småsaker. För att jag är helt med på det här scouttänket. Jag tycker det är klockrent. Alltså såhär, ser man någonting som behöver fixas. Och om det bara är ett stavfel eller någon lintgrej som har blivit fel eller någonting. Då har jag bara gjort det i samma PR. till lite olika variabler och sånt. Då kanske det är mer liksom okej, Kanske ska göra ett eget, men då hade jag ändå bara gjort det med egen PR och inte skickat in den samtidigt. Ja, det är väl här det kan bli tjafs och att man är oense. För att jag en funktion? Eller är det typ såhär, du ändrar kanske en massa stavfel? Du ändrar saker som känns små, men i och med att koden inte har tester så kan du ha faktiskt, Introducera något nytt stavfel, och det upptäcks inte, föredrar tryckt ut det. Jag vet inte. Det skulle kunna vara till exempel om man använder Magic Strings. Alltså istället för att du har en konstant eller en enum, så jämför du ett strängvärde. Och så har vi plötsligt bytt strängvärdet. Och det är mycket lättare att detta trillar mellan stolarna om man bara gör det lite under radarn. Det blir ingen spårbarhet om du inte har en ticket att koppla det till på det sättet. Nej. Jag har jobbat med en utvecklare, som jag har väldigt stor respekt för, som var väldigt snabb och upptäckte att det här behöver göras om. För att man behöver underhålla sin kod. Man ser en halvt år senare och tänker, vad fan är det jag har skrivit? som kände att det var en bra idé att passa på och kanske gjorde en till PR-dag ens. Försökte vara noga att det skulle vara lätt att code-reviewa, över det här för att det var så här nu har du ju gjort massa ändringar. Hur vet du att det här funkar? Och det här smögs alltid med lite för QA-personen. För att den här utvecklaren visste ju att QA-personen skulle frågas. Och så var det också stödigt för vissa som utvecklare. Ibland kom det en väldigt stor, Två minuters jobb att implementera och mer än 15 minuter att testa, ja då får det bli en ticket av det. Sen vet jag inte, jag har ändå varit science master och och jag skulle inte bli sur om någon utvecklare lade upp en ticket och bara drog in den i typ developing, och körde. Det låter som onödig bromskloss att man ska sitta och prioritera upp det och så vidare och sedan prioriteras det inte upp och så glömmer man bort den. då kan du inte bara smyga in den lite sådär. Ja, precis, för då sitter du ändå och har prioriterat ner någonting annat. Man behöver ändå vara transparent mot alla i teamet och ha respekt för P.O.N. vars ansvar är att se till att det är mest prioriterat och jobbas på. Det är säkert helt okej för PN, men man behöver lyfta det och prata om det. Det kan vara sjukt störande som utvecklare. Man är så här, ni måste göra det här. Det går ganska snabbt. Det tar bara en halv dag. Men de vill ändå ha lite koll och förstå vad som händer Varför ni lägger tid på det här? Ofta brukar man ju lägga in lite cadding för typ maintendance tasks och sånt. När man gör sprint planning och sånt. Nej men, jag känner igen ett scenario och det är såhär, det här stör mig faktiskt väldigt mycket bland saker som stör mig. Jag borde skriva upp det här någonstans, så att vi kan göra ett avsnitt om saker som stör mig med andra utvecklare. Säg att det är såhär, “Det tar 20% av din sprinttid att göra det här, hennes 50%.” Och så säger vi att det tar lite längre tid, är det lugnt att vi lägger in den här backloggen? Och den här utvecklaren säger att nej, jag vill göra det nu. Eller säger att det här kommer inte ta så lång tid. Så det de gör istället är att de tycker att det här är ett rätt roligt arbete. Så de sätter sig på kvällarna och gör det här. Och påstår sen, även om du har varit med om det, men jag har varit med om det flera gånger från olika personer. Det är så roligt att de gör det på kvällen. Men det är ändå någon som ska jobba med detta sen och testa det. granskade? De personerna säger ofta att det inte är något problem för någon. Jag har suttit och gjort det här själv och hur kan det inte vara... Hur kan inte alla bara vara tacksamma att jag sitter och gör det här på min fritid? Men jag vill inte ha det så. Jag vill inte att det sitter folk och kodar hela nätterna. Jag har väl gjort det någon gång, men då försöker jag liksom ... Jag vill inte att folk ska se att jag har gjort det. Det ska inte stressa teamet att här sitter nån och kodar på kvällarna av intresse. då håller du på med ett hobbyprojekt då. Det stör mig. Och definitivt har vi folk som lyssnar som gör så här. Jag tror att jag har gjort så nån gång också. Jag känner mig lite smått träffad. Alltså med större grejer. Att de inte förstår att det är stort, och de insisterar på att, du vet att de inte låter den här pulverkosten vara draft. För det är fine. Gör det på kvällen. Lägg upp en puller quest och skapa en ticket. Lugna ner folk och preppa dem lite. Jag vet att det är störigt, men gör det här lilla extraarbetet för folk så att du inte bara trycker in saker, åtminstone det. Nånting, bara kommunikation, typ. Vad ville du säga? Jag skulle säga, tror du det är en bra idé att man har någon generell typ, förbättringsticket. Alltså som man kan då koppla till och att man då, För de flesta verktyg så kan du ju ändå skriva en kommentar till, alltså kopplingen till din ticket från din PR. För då löser man ju lite det här att man måste gå in och du ska skapa en ticket. Alltså det är ändå lite extra overhead som du ganska mycket om du bara ska slasktratt. Stavfel, absolut samma pulver request. Som sagt, när det inte är farliga stavfel, att man ändå råkar ta sönder något. Du vet, här har jag gjort arbetet och här har jag städat upp. Absolut. Men jag pratade om att man kunde ha en ticket som är generell, som du kopplar till. Som bara slasktröttar allting? Ja, men typ så här. Det här är den här sprintens förbättringsticket. Hit kan du koppla liksom smågrejer. Jag vet inte själv om jag gillar det riktigt nämligen, men jag funderar på att det skulle kunna vara en lösning. Ja, men är det så smått? Då tycker jag det ska vara kopplat till... Alltså då kan det ändå vara på den original ticket. Den ena sidan blir det så här, men gud vad bajsnödig man ska vara. Man kan inte ens fixa något litet utan att man ska skapa en ticket. Men å andra sidan är det inte så jobbigt att göra det, att bara klicka på Plus och skriva en titel och varför man fixade det. Det beror på hur mycket du ska skriva. given, when, then och typ as a develop... Nej, det är det man inte ska skriva. Alltså, customer, are you one to... bla, bla, bla, bla. Refactor the system, liksom. Det är det som blir så... Det är bajsnödigt. Nej, det kan man inte göra. Nej, men vad vi har i vårt team, och det har jag haft i andra team, är att vi har en feature, eller epic, i Hira, som heter &lt;i&gt;teknical improvement, depth ideas&lt;/i&gt;. Så kan du lägga in en task där, för framtida grejer. Så när du ser någonting, Nu, nu, nu så har du en feature, lägga den under liksom. Ja, så hade vi också mitt senaste team. Där kunde det verkligen vara högt och lågt. Man måste rensa ut de här också, har jag märkt. Ibland ligger det bara saker som ingen någonsin tar upp. schysst att skriva en rad, för det är för en själv, för man själv minns inte vad jag har skapat den här tiket för ett halvt år sedan. Det finns bara en titel som är Refactor Blablabla Service, och så frågar man vad jag vill reflektera i. Varför? Och så är det ingen annan som kan plocka upp den. Nej, man ska inte önska så mycket man glömmer. Alltså, har vi svarat Kate om ens... Frågan var ju, har ni råkat ut för det illemmat? Ja, eller jag har absolut haft diskussioner. Sen har jag de senaste sju åren har jag jobbat i samma projekt och där var vi liksom hade vi turen att ha väldigt förstående Peo. Men absolut, att det ändå ibland dyker upp då man måste prioritera det mot något annat. Mycket kan man ju faktiskt automatisera. Man kan ju ha typ så här det pendlar bort och sånt för att uppdatera paket. Då blir det inte lika mycket att du själv måste hitta tiden och trycka in det och så här. Nu kommer jag ihåg att jag läste någonstans i någon tråd när vi pratade om Linter så att han sa att han hatade Linters. Jag blev så här chockad. Hur kan man hata Linters? Det är ju ett bra sätt att kunna undvika att man behöver göra sådana reflekteringar. Ja. Är det en breaking change, då får man ha, jag vet att vissa team hos oss där de får in breaking changes, de har en person som är ansvarig att ta hand om breaking change varje vecka. Att alla vet att vilka som kommer att titta på det. Ja, faktiskt. Det är ju ett sätt. Men jag tänker också i allt det här så får man ta in lite så här. Hur kritiskt är vårt system? Har du många miljoner användare? och går det ner på grund av ett stavfel, så förlorar det så extremt mycket på det, Då kanske man bör fundera. Ja, eller om det är en bank eller någonting, och sånt, där det kan vara jättestora implikationer om någonting händer. Eller andra typiska system. Ja, och det kommer hända fel, men det kan nog vara skönt om det sker ett fel på grund av något stavfel. Känns det lite bättre ändå att man gjorde så pass rätt, att man bara kunde? Hellre det än att det kommer fram att man har smugit om någonting och så har det blivit fel. Då är det ju lite skämmigt. Då står man ju där med... Ja, typ att man... Bypassade policies eller folk som har en buddy som alltid godkänner en stor gest. Man står i skamvrån. Man får fundera på hur viktigt ens system är. Ja. Hoppas det var en intressant diskussion. Om inte annat så var ju dina nyheter intressanta.